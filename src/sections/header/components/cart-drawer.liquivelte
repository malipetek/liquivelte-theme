{% liquid 
	assign initialized = false
	assign min_amounts = '{'
	for item in cart.items
		assign min_amount = item.product.metafields.custom['min-amount'] | default: 0
		assign min_amounts = min_amounts | append: '"' | append: item.id | append: '":' | append: min_amount
		unless forloop.last
			assign min_amounts = min_amounts | append: ','
		endunless
	endfor
	assign min_amounts = min_amounts | append: '}'
%}
<script>
  import cart from 'theme/cart';
  import { Button, Block, BlockTitle, View, Page, List, ListItem, Stepper, Row, Col } from 'framework7-liquivelte'; 
  import Loadable from '../../../snippets/loadable.liquivelte';
	import QuantityBox from '../../../snippets/quantity-box.liquivelte';
  import { cartStore, cartOpen } from '../../../scripts/store.module.js';
	let initialized = false;
	import min_amounts from 'theme';
	import { onMount } from 'svelte';
	// const min_amounts_data = JSON.parse(min_amounts);

	function quantityChange(event) {
		cartStore.setQuantity(this.id, +event.target.value); 
	}
	
	onMount(() => {
		cartStore.set(cart);
		
		cartStore.subscribe(payload => {
			cart = payload;
		});
		initialized = true;
	});
  </script>
  

<div class="cart-drawer" 
			class:hidden="{{- initialized == false -}}">
			<Block>
				<BlockTitle>
					Cart
				</BlockTitle>
			</Block>
			<List >
				{% if cart.items.size == 0 %}
					<p data-t="{{- 'sections.cart.empty' | t -}}">
						{{- 'sections.cart.empty' | t -}}
					</p>
				{% endif %}
				{% for item in cart.items (item.id) %}
					<ListItem classes="h-[120px]">
						<div slot="header" class="text-xl mb-4">{{- item.product_title -}}</div>
						<div slot="after" class="ml-2"> {{- item.price | money -}} </div>
						<div slot="text" class="cart-item-options">
							{% for option in item.variant_options %}
							<span class="text-gray-500k text-base line-item-option"> {{- option -}} </span> <br>
							{% endfor %}
						</div>
						<div slot="media">
							{% if item.image %}
								<img src="{{- item.image | image_url: width: 120 -}}" width="80" loading="lazy" />
							{% endif %}
						</div>
						<div slot="footer" class="ml-2">
							<Loadable > 
								<Stepper raised 
									onChange="{ quantityChange.bind(item) }"
									value="{item.quantity}"
									></Stepper>
							</Loadable>
						</div>
					</ListItem>
				{% endfor %}
			</List>
			<Block classes="cart-drawer-bottom">
				 <Row noGap>
					 <Col>
						<span class="text-base float-left" data-t="{{- 'sections.cart.subtotal' | t -}}"> {{- 'sections.cart.subtotal' | t -}} </span> 
					</Col>
					<Col>
						<span cart-drawer-subtotal-text class="float-right text-lg ">{{- cart.items_subtotal_price | money -}}</span>
					</Col>
				</Row>
				<Row>
					<div class="cart-drawer-taxes-notice text-base float-left"> Taxes and shipping calculated at checkout </div>
				</Row>
				<Block >
					<Button fill large classes="mt-10 ">
							<span data-t="{{- 'sections.cart.checkout' | t -}}">
								{{- 'sections.cart.checkout' | t -}}
							</span>
					</Button>
				</Block>
				<Block>
					<Button fill>
						<span data-t="{{- 'sections.cart.save_as_wishlist' | t -}}">
							{{- 'sections.cart.save_as_wishlist' | t -}}
						</span>
					</Button>
				</Block>
				<Block>
					<Button>
						<span data-t="{{- 'sections.cart.share' | t -}}">
							{{- 'sections.cart.share' | t -}}
						</span>
					</Button>
				</Block>
			</Block>
</div>

	<style lang="postcss">
	.cart-drawer {
		.item-title {
			overflow: visible;
		}
	}		
	.cart-drawer-bottom {
		align-self: flex-end;
		width: 100%;
	}
	.quantity-box {
			display: inline-flex;
			align-self: flex-start;
		}

	.cart-drawer-subtotal {
			margin-bottom: 10px;
		}
		.cart-drawer-taxes-notice {
			margin-bottom: 15px;
		}
		.cart-drawer-subtotal-text {
			float: right;
		}

	</style>