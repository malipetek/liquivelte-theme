	{%- liquid
			
			
			-%}
	{%- liquid
	assign lv_props_arr = props | split: '-prsp-'
	for lv_prop in lv_props_arr
	assign lv_prop_and_value = lv_prop | split: '-kvsp-'
	assign lv_propName = lv_prop_and_value | first
	if lv_prop_and_value.size > 1
		assign lv_propValue = lv_prop_and_value | last | remove: '"'
	else
		assign lv_propValue = ''	
	endif
	if lv_propValue == '0'
		assign lv_propValue = lv_propValue | times: 1
	endif
	if lv_propValue contains '{' and lv_propValue contains '}'
	assign lv_propValue = lv_propValue | remove: '{' | remove: '}'
	assign lv_propValueArr = lv_propValue | split: ','
	for lv_entry in lv_propValueArr
	assign lv_key = lv_entry | split: ':' | first | strip | remove: '"'
	assign lv_value = lv_entry | split: ':' | last | strip | remove: '"'
	assign composite_key = lv_propName | append: '_' | append: lv_key
	
	endfor
	endif
	if lv_propName == 'filters' and filters == blank
		assign filters = lv_propValue
	endif
	endfor
	-%}
	
			{%- liquid
				assign slot_contents_and_values = slot_contents | split: '-scs-'
				for content_and_value in slot_contents_and_values
					assign module_and_slotname = content_and_value | split: '-scvs-' | first
					assign lv_module = module_and_slotname | split: '-smns-' | first
					assign lv_name = module_and_slotname | split: '-smns-' | last
					assign lv_value = content_and_value | split: '-scvs-' | last
					
					if lv_module == 'facets'
						assign slot_default_facets = lv_value | strip
					endif
				endfor
				-%}
	{%- unless sub_include -%} 
	<div class="liquivelte-component facets" data-liquivelte-component-name="facets.liquivelte">
		{% assign component_include_count_slot_offset = 0 %}
		{% assign component_include_count = 0 %}
		{% assign component_include_depth = 0 %}
		<script> window.cicR = 0; </script>
	{%- endunless -%}
	{% liquid 
  assign filters = '['
  assign filter_keys = 'false_value,label,param_name,range_max,true_value,type,url_to_remove' | split: ','
  assign values_keys = 'active,count,label,param_name,url_to_add,url_to_remove,value' | split: ','
  for filter in collection.filters
    assign filters = filters | append: '{'

    assign filters = filters | append: '"' | append: 'active_values' | append: '": ' | append: "["
    for value in filter.active_values
      assign filters = filters | append: '{'

      for key in values_keys

        assign val = value[key] | json
        assign filters = filters | append: '"' | append: key | append: '": ' | append: val

        
        unless forloop.last
          assign filters = filters | append: ','
        endunless
      endfor
    
      assign filters = filters | append: '}'
      unless forloop.last
        assign filters = filters | append: ','
      endunless

    endfor

    assign filters = filters | append: '],'
    
    assign filters = filters | append: '"' | append: 'inactive_values' | append: '": ' | append: "["
    for value in filter.inactive_values
      assign filters = filters | append: '{'

      for key in values_keys

        assign val = value[key] | json
        assign filters = filters | append: '"' | append: key | append: '": ' | append: val

        
        unless forloop.last
          assign filters = filters | append: ','
        endunless
      endfor
    
      assign filters = filters | append: '}'
      unless forloop.last
        assign filters = filters | append: ','
      endunless

    endfor

    assign filters = filters | append: '],'
    
    assign filters = filters | append: '"' | append: 'values' | append: '": ' | append: "["
    for value in filter.values
      assign filters = filters | append: '{'

      for key in values_keys

        assign val = value[key] | json
        assign filters = filters | append: '"' | append: key | append: '": ' | append: val

        
        unless forloop.last
          assign filters = filters | append: ','
        endunless
      endfor
    
      assign filters = filters | append: '}'
      unless forloop.last
        assign filters = filters | append: ','
      endunless

    endfor

    assign filters = filters | append: '],'

    assign filters = filters | append: '"' | append: 'max_value' | append: '": ' | append: "{"

      for key in values_keys

        assign val = filter.max_value[key] | json
        assign filters = filters | append: '"' | append: key | append: '": ' | append: val

        
        unless forloop.last
          assign filters = filters | append: ','
        endunless
      endfor
    
      assign filters = filters | append: '},'
   
      assign filters = filters | append: '"' | append: 'min_value' | append: '": ' | append: "{"

      for key in values_keys

        assign val = filter.min_value[key] | json
        assign filters = filters | append: '"' | append: key | append: '": ' | append: val

        
        unless forloop.last
          assign filters = filters | append: ','
        endunless
      endfor
    
      assign filters = filters | append: '},'

    for key in filter_keys
      assign value = filter[key] | json
      assign filters = filters | append: '"' | append: key | append: '": ' | append: value
      
      unless forloop.last
        assign filters = filters | append: ','
      endunless
    endfor
      
    assign filters = filters | append: '}'
    unless forloop.last
      assign filters = filters | append: ','
    endunless
  endfor
  assign filters = filters | append: ']'
%}


{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_Navbar %}undefined-kvsp-1{% endcapture %}
{%- assign component_include_count_before_slots = component_include_count -%}


{%- capture slot_content_def_Navbar -%}{% assign component_include_depth = component_include_depth | plus: 1 %}
  
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_Button %}panelOpen-kvsp-#filters-panel{% endcapture %}
{%- assign component_include_count_before_slots = component_include_count -%}


{%- capture slot_content_def_Button -%}{% assign component_include_depth = component_include_depth | plus: 1 %}  
    
{% comment %}
  kvsp stands for "key value separator"
  prsp stands for "props separator"
{% endcomment %}
{% capture props_Icon %}name-kvsp-icon-filter-prsp-width-kvsp-20{% endcapture %}
{% assign modulename = basename | append: 'icon' %}
{% include modulename, liquivelte: true, props: props_Icon, sub_include: true, basename: ''  %}
{% assign props = '' %} 
    <span class="ml-1" data-translate="{{ 'products.facets.filter_button' | t }}" liquivelte-value-cache="tยง{{'products.facets.filter_button' | escape -}}ยง{{'products.facets.filter_button'| t  }}"> {{ 'products.facets.filter_button' | t }} </span> 
  {%- endcapture -%}{% assign component_include_depth = component_include_depth | minus: 1 %}
{%- assign component_include_count_slot_offset = component_include_count | minus: component_include_count_before_slots -%}

{% assign modulename = basename | append: 'framework7-liquivelte-button' %}
{% assign slot_content_Button = slot_content_Button | append: '-scs-' | append: modulename | append: '-scvs-' | append: slot_content_def_Button %}
{% include modulename, liquivelte: true, props: props_Button, sub_include: true, slot_contents: slot_content_Button, basename: 'framework7-liquivelte-'  %}
{% assign slot_content_Button = '' %}
{% assign props = '' %}
    
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_Button %}{% endcapture %}
{%- assign component_include_count_before_slots = component_include_count -%}


{%- capture slot_content_def_Button -%}{% assign component_include_depth = component_include_depth | plus: 1 %}  
    <span class="mr-1"> Sort </span>
    
{% comment %}
  kvsp stands for "key value separator"
  prsp stands for "props separator"
{% endcomment %}
{% capture props_Icon %}name-kvsp-icon-chevron-down-prsp-width-kvsp-17{% endcapture %}
{% assign modulename = basename | append: 'icon' %}
{% include modulename, liquivelte: true, props: props_Icon, sub_include: true, basename: ''  %}
{% assign props = '' %} 
  {%- endcapture -%}{% assign component_include_depth = component_include_depth | minus: 1 %}
{%- assign component_include_count_slot_offset = component_include_count | minus: component_include_count_before_slots -%}

{% assign modulename = basename | append: 'framework7-liquivelte-button' %}
{% assign slot_content_Button = slot_content_Button | append: '-scs-' | append: modulename | append: '-scvs-' | append: slot_content_def_Button %}
{% include modulename, liquivelte: true, props: props_Button, sub_include: true, slot_contents: slot_content_Button, basename: 'framework7-liquivelte-'  %}
{% assign slot_content_Button = '' %}
{% assign props = '' %}
{%- endcapture -%}{% assign component_include_depth = component_include_depth | minus: 1 %}
{%- assign component_include_count_slot_offset = component_include_count | minus: component_include_count_before_slots -%}

{% assign modulename = basename | append: 'framework7-liquivelte-navbar' %}
{% assign slot_content_Navbar = slot_content_Navbar | append: '-scs-' | append: modulename | append: '-scvs-' | append: slot_content_def_Navbar %}
{% include modulename, liquivelte: true, props: props_Navbar, sub_include: true, slot_contents: slot_content_Navbar, basename: 'framework7-liquivelte-'  %}
{% assign slot_content_Navbar = '' %}
{% assign props = '' %}


{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_Panel %}left-kvsp-1-prsp-cover-kvsp-1-prsp-id-kvsp-filters-panel{% endcapture %}
{%- assign component_include_count_before_slots = component_include_count -%}


{%- capture slot_content_def_Panel -%}{% assign component_include_depth = component_include_depth | plus: 1 %}
    
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_View %}name-kvsp-filters-view-prsp-stackPages-kvsp-{true}{% endcapture %}
{%- assign component_include_count_before_slots = component_include_count -%}


{%- capture slot_content_def_View -%}{% assign component_include_depth = component_include_depth | plus: 1 %}
    
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_Page %}undefined-kvsp-1{% endcapture %}
{%- assign component_include_count_before_slots = component_include_count -%}


{%- capture slot_content_def_Page -%}{% assign component_include_depth = component_include_depth | plus: 1 %}
      
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_List %}undefined-kvsp-1{% endcapture %}
{%- assign component_include_count_before_slots = component_include_count -%}


{%- capture slot_content_def_List -%}{% assign component_include_depth = component_include_depth | plus: 1 %}
        {% for filter in collection.filters  %}
    {% assign index = forloop.index0 %}
          {% if filter.type == 'price_range' %}
            
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_ListInput %}input-kvsp-{false}{% endcapture %}
{%- assign component_include_count_before_slots = component_include_count -%}


{%- capture slot_content_ListInput_input -%}{% assign component_include_depth = component_include_depth | plus: 1 %}<span slot="input">
                 
              </span>{%- endcapture -%}{% assign component_include_depth = component_include_depth | minus: 1 %}
{% assign slot_content_ListInput = slot_content_ListInput | append: '-scs-' | append: 'framework7-liquivelte-list-input' | append: '-smns-' | append: 'input' | append: '-scvs-' | append: slot_content_ListInput_input %}

{%- capture slot_content_def_ListInput -%}{% assign component_include_depth = component_include_depth | plus: 1 %}
            <div slot="label" class="display-flex justify-content-space-between">
              <span>{{ filter.label }}</span>
              <span>{{ price_min | money }} - ${{ price_max | money }}</span>
            </div>
              <span slot="input">
                 
{% comment %}
  kvsp stands for "key value separator"
  prsp stands for "props separator"
{% endcomment %}
{% capture props_Range %}min-kvsp-{0}-prsp-max-kvsp-{filter.range_max}-prsp-step-kvsp-{100}-prsp-value-kvsp-{[filter.min_value.value, filter.max_value.value || filter.range_max]}-prsp-dual-kvsp-{true}-prsp-onRangeChange-kvsp-{function(e) { priceUpdate(e, filter) } }-prsp-onRangeChanged-kvsp-{function(e) { priceChange(e, filter) } }{% endcapture %}
{% assign modulename = basename | append: 'framework7-liquivelte-range' %}
{% include modulename, liquivelte: true, props: props_Range, sub_include: true, basename: 'framework7-liquivelte-'  %}
{% assign props = '' %}
              </span>
            {%- endcapture -%}{% assign component_include_depth = component_include_depth | minus: 1 %}
{%- assign component_include_count_slot_offset = component_include_count | minus: component_include_count_before_slots -%}

{% assign modulename = basename | append: 'framework7-liquivelte-list-input' %}
{% assign slot_content_ListInput = slot_content_ListInput | append: '-scs-' | append: modulename | append: '-scvs-' | append: slot_content_def_ListInput %}
{% include modulename, liquivelte: true, props: props_ListInput, sub_include: true, slot_contents: slot_content_ListInput, basename: 'framework7-liquivelte-'  %}
{% assign slot_content_ListInput = '' %}
{% assign props = '' %}
          {% else %}
          
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_ListItem %}title-kvsp-{{ filter.label }}-prsp-smartSelect-kvsp-1{% endcapture %}
{%- assign component_include_count_before_slots = component_include_count -%}


{%- capture slot_content_def_ListItem -%}{% assign component_include_depth = component_include_depth | plus: 1 %}
            <select multiple name="{{ filter.label }}" bind:value="{ filter.active_values_flat }" on:change="{e _afeq__afct_ filterChange(e, filter)}" >
              {% for value in filter.values %}
    {% assign index = forloop.index0 %}
                <option value="{{ value.value }}">{{ value.label }}</option>
              {% endfor %}
            </select>
          {%- endcapture -%}{% assign component_include_depth = component_include_depth | minus: 1 %}
{%- assign component_include_count_slot_offset = component_include_count | minus: component_include_count_before_slots -%}

{% assign modulename = basename | append: 'framework7-liquivelte-list-item' %}
{% assign slot_content_ListItem = slot_content_ListItem | append: '-scs-' | append: modulename | append: '-scvs-' | append: slot_content_def_ListItem %}
{% include modulename, liquivelte: true, props: props_ListItem, sub_include: true, slot_contents: slot_content_ListItem, basename: 'framework7-liquivelte-' , title:  filter.label  %}
{% assign slot_content_ListItem = '' %}
{% assign props = '' %}
          {% endif %}
        {% endfor %}
      {%- endcapture -%}{% assign component_include_depth = component_include_depth | minus: 1 %}
{%- assign component_include_count_slot_offset = component_include_count | minus: component_include_count_before_slots -%}

{% assign modulename = basename | append: 'framework7-liquivelte-list' %}
{% assign slot_content_List = slot_content_List | append: '-scs-' | append: modulename | append: '-scvs-' | append: slot_content_def_List %}
{% include modulename, liquivelte: true, props: props_List, sub_include: true, slot_contents: slot_content_List, basename: 'framework7-liquivelte-'  %}
{% assign slot_content_List = '' %}
{% assign props = '' %}
    {%- endcapture -%}{% assign component_include_depth = component_include_depth | minus: 1 %}
{%- assign component_include_count_slot_offset = component_include_count | minus: component_include_count_before_slots -%}

{% assign modulename = basename | append: 'framework7-liquivelte-page' %}
{% assign slot_content_Page = slot_content_Page | append: '-scs-' | append: modulename | append: '-scvs-' | append: slot_content_def_Page %}
{% include modulename, liquivelte: true, props: props_Page, sub_include: true, slot_contents: slot_content_Page, basename: 'framework7-liquivelte-'  %}
{% assign slot_content_Page = '' %}
{% assign props = '' %}
  {%- endcapture -%}{% assign component_include_depth = component_include_depth | minus: 1 %}
{%- assign component_include_count_slot_offset = component_include_count | minus: component_include_count_before_slots -%}

{% assign modulename = basename | append: 'framework7-liquivelte-view' %}
{% assign slot_content_View = slot_content_View | append: '-scs-' | append: modulename | append: '-scvs-' | append: slot_content_def_View %}
{% include modulename, liquivelte: true, props: props_View, sub_include: true, slot_contents: slot_content_View, basename: 'framework7-liquivelte-'  %}
{% assign slot_content_View = '' %}
{% assign props = '' %}
{%- endcapture -%}{% assign component_include_depth = component_include_depth | minus: 1 %}
{%- assign component_include_count_slot_offset = component_include_count | minus: component_include_count_before_slots -%}

{% assign modulename = basename | append: 'framework7-liquivelte-panel' %}
{% assign slot_content_Panel = slot_content_Panel | append: '-scs-' | append: modulename | append: '-scvs-' | append: slot_content_def_Panel %}
{% include modulename, liquivelte: true, props: props_Panel, sub_include: true, slot_contents: slot_content_Panel, basename: 'framework7-liquivelte-'  %}
{% assign slot_content_Panel = '' %}
{% assign props = '' %}


{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_Block %}undefined-kvsp-1{% endcapture %}
{%- assign component_include_count_before_slots = component_include_count -%}


{%- capture slot_content_def_Block -%}{% assign component_include_depth = component_include_depth | plus: 1 %}
  {% for filter in collection.filters  %}
    {% assign index = forloop.index0 %}

      {% for value in filter.active_values %}
    {% assign index = forloop.index0 %}
        
{% comment %}
  kvsp stands for "key value separator"
  prsp stands for "props separator"
{% endcomment %}
{% capture props_Chip %}text-kvsp-{{ value.label }}-prsp-deleteable-kvsp-1-prsp-onDelete-kvsp-{function() { removeFilter(value, filter) } }{% endcapture %}
{% assign modulename = basename | append: 'framework7-liquivelte-chip' %}
{% include modulename, liquivelte: true, props: props_Chip, sub_include: true, basename: 'framework7-liquivelte-' , text:  value.label  %}
{% assign props = '' %}
      {% endfor %}

      {% if filter.type == 'price_range' %}
        {% if filter.min_value.value > 0 %}
          
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_Chip %}deleteable-kvsp-1-prsp-onDelete-kvsp-{function() { removeFilter(filter.min_value, filter) } }{% endcapture %}
{%- assign component_include_count_before_slots = component_include_count -%}


{%- capture slot_content_Chip_text -%}{% assign component_include_depth = component_include_depth | plus: 1 %}<span slot="text">Min {{ filter.min_value.value | money }}</span>{%- endcapture -%}{% assign component_include_depth = component_include_depth | minus: 1 %}
{% assign slot_content_Chip = slot_content_Chip | append: '-scs-' | append: 'framework7-liquivelte-chip' | append: '-smns-' | append: 'text' | append: '-scvs-' | append: slot_content_Chip_text %}

{%- capture slot_content_def_Chip -%}{% assign component_include_depth = component_include_depth | plus: 1 %}
            
          {%- endcapture -%}{% assign component_include_depth = component_include_depth | minus: 1 %}
{%- assign component_include_count_slot_offset = component_include_count | minus: component_include_count_before_slots -%}

{% assign modulename = basename | append: 'framework7-liquivelte-chip' %}
{% assign slot_content_Chip = slot_content_Chip | append: '-scs-' | append: modulename | append: '-scvs-' | append: slot_content_def_Chip %}
{% include modulename, liquivelte: true, props: props_Chip, sub_include: true, slot_contents: slot_content_Chip, basename: 'framework7-liquivelte-'  %}
{% assign slot_content_Chip = '' %}
{% assign props = '' %}
        {% endif %}
        {% if filter.max_value.value < filter.range_max %}
          
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_Chip %}deleteable-kvsp-1-prsp-onDelete-kvsp-{function() { removeFilter(filter.max_value, filter) } }{% endcapture %}
{%- assign component_include_count_before_slots = component_include_count -%}


{%- capture slot_content_Chip_text -%}{% assign component_include_depth = component_include_depth | plus: 1 %}<span slot="text" >Max {{ filter.max_value.value | money }}</span>{%- endcapture -%}{% assign component_include_depth = component_include_depth | minus: 1 %}
{% assign slot_content_Chip = slot_content_Chip | append: '-scs-' | append: 'framework7-liquivelte-chip' | append: '-smns-' | append: 'text' | append: '-scvs-' | append: slot_content_Chip_text %}

{%- capture slot_content_def_Chip -%}{% assign component_include_depth = component_include_depth | plus: 1 %}
            
          {%- endcapture -%}{% assign component_include_depth = component_include_depth | minus: 1 %}
{%- assign component_include_count_slot_offset = component_include_count | minus: component_include_count_before_slots -%}

{% assign modulename = basename | append: 'framework7-liquivelte-chip' %}
{% assign slot_content_Chip = slot_content_Chip | append: '-scs-' | append: modulename | append: '-scvs-' | append: slot_content_def_Chip %}
{% include modulename, liquivelte: true, props: props_Chip, sub_include: true, slot_contents: slot_content_Chip, basename: 'framework7-liquivelte-'  %}
{% assign slot_content_Chip = '' %}
{% assign props = '' %}
        {% endif %}
    {% endif %}

  {% endfor %}
{%- endcapture -%}{% assign component_include_depth = component_include_depth | minus: 1 %}
{%- assign component_include_count_slot_offset = component_include_count | minus: component_include_count_before_slots -%}

{% assign modulename = basename | append: 'framework7-liquivelte-block' %}
{% assign slot_content_Block = slot_content_Block | append: '-scs-' | append: modulename | append: '-scvs-' | append: slot_content_def_Block %}
{% include modulename, liquivelte: true, props: props_Block, sub_include: true, slot_contents: slot_content_Block, basename: 'framework7-liquivelte-'  %}
{% assign slot_content_Block = '' %}
{% assign props = '' %}
{% schema %}{
  "name": "Facets",
  "settings": [],
  "presets": [
    {
      "name": "Facets (Filters)"
    }
  ]
}{% endschema %}
	
						
		
	<script type="text/noscript" class="instance-data" >
		{% assign component_include_count = component_include_count | plus: 1 %}
		{
	"filters" : {{ filters | json }}
	
	
		,
		"forloop_index": {{ forloop.index0 | default: 0 | json }},
		"component_index": {{ component_include_count | plus: component_include_depth }},
		"component_name": "facets"
	}</script>
	
	<script class="liquivelte-prop-script">(() => {
	var propScript = Shopify.designMode && window.propScriptForDesignMode ? window.propScriptForDesignMode : document.currentScript;
	function parseProps(e){const s={};let t={bracketsOpened:0,get open(){return this.bracketsOpened>0},set open(e){!0===e?this.bracketsOpened=this.bracketsOpened+1:!1===e&&(this.bracketsOpened=this.bracketsOpened-1)}},a=` ${e} `.split(""),r=!1,c=!1,n=!1,p=!1,o="",b="";for(let e=0;e<a.length;e++){const k=a[e];switch(!0){case" "===k:p||t.open||(c=!1),!n||p||t.open||(n=!1);break;case"{"===k:t.open=!0,n||(c=!0);break;case"}"===k:t.open=!1;break;case'"'===k:p=!p;break;case"="===k:c&&(c=!1,n=!0,r=!0);break;case/[^\s]/.test(k):n||(c=!0)}!c||n||r?c||!n||r?c||n||(o&&(s[o]=b.replace(/^"/,"").replace(/"$/,"")),b="",o=""):b+=k:o+=k,r=!1}return Object.keys(s).map((e=>{if(/\{\s*\.\.\.(\w+)\s*\}/.test(e)){const[,t]=e.match(/\{\s*\.\.\.(\w+)\s*\}/);s.spread=t,delete s[e]}})),s}
	function JSONparse(n){try{return JSON.parse(n)}catch(t){try{const e=parseInt(t.message.match(/position\s+(\d+)/)[1],10),s=n.slice(0,e+1).split("\n"),i=s.length,l=n.split("\n"),r=s[s.length-1].length-1,c=l.slice(0,i).join("\n")+"\n"+new Array(r).fill(" ").join("")+"๐\n"+l.slice(i).join("\n");return console.log(c),{}}catch(n){throw t}}}
	function htmlDecode(input) {
	var doc = new DOMParser().parseFromString(input, "text/html");
	return doc.documentElement.textContent;
	}
	function componentWrapper(el) {
	if(el.classList.contains('liquivelte-component')) {
	return el;
	} else {
	return componentWrapper(el.parentElement);
	}
	}
	var wrapper = componentWrapper(propScript.parentElement);
	// console.log('wrapper', wrapper);
	// console.log('parsing props for svelte component');
	try{
		const themeImports = (JSONparse(propScript.previousElementSibling.textContent));
		wrapper.svelteProps = wrapper.svelteProps || {};
		Object.keys(themeImports).forEach(key => {
			if(key == 'forloop_index' || key == 'component_index' || key == 'component_name') return;
			wrapper.svelteProps[key] = [
				...(wrapper.svelteProps[key] || []),
				{ forloop_index: themeImports.index, component_index: themeImports.component_index, component_name: themeImports.component_name, value: themeImports[key] }
			];
		});
	} catch (e) {
	const err = 'There was an error';
	console.error('there was an error parsing props json', e);
	wrapper.svelteProps = { ...wrapper.svelteProps, error: (wrapper.svelteProps.error || '') + err};
	}
	
	

	// liquid expression cache
	[...wrapper.querySelectorAll('[liquivelte-value-cache]')].forEach(el => {
	let [filter, args, value] = el.getAttribute('liquivelte-value-cache').split('ยง');
	args = args.split(', ');
	args[0] = args[0].replace(/^"|\\|"$/g, '');
	wrapper.liquid_expression_cache = wrapper.liquid_expression_cache || {};
	wrapper.liquid_expression_cache[filter] = wrapper.liquid_expression_cache[filter] || new Map;
	wrapper.liquid_expression_cache[filter].set(`${args.join(',')}`, value);
	});

	if(propScript){
	propScript.remove();
	}
	if(propScript.previousElementSibling) {
	propScript.previousElementSibling.remove();
	}
	})();</script>
	{%- liquid
			
			
			-%}
	{%- liquid 
			assign slot_default_facets = null
			
			-%}
	
	{%- unless sub_include -%} 
	</div>
	{% assign component_include_count = 0 %}
	{%- endunless -%}
	