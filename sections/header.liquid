
	{%- liquid
	assign props_arr = props | split: '-prsp-'
	for prop in props_arr
	assign propName = prop | split: '-kvsp-' | first
	assign propValue = prop | split: '-kvsp-' | last | remove: '"'
	if propValue contains '{' and propValue contains '}'
	assign propValue = propValue | remove: '{' | remove: '}'
	assign propValueArr = propValue | split: ','
	for entry in propValueArr
	assign key = entry | split: ':' | first | strip | remove: '"'
	assign value = entry | split: ':' | last | strip | remove: '"'
	assign composite_key = propName | append: '_' | append: key
	
	endfor
	endif
	endfor
	-%}
	{%- unless sub_include -%} 
	<div  class="liquivelte-component header svelte-ti29kk" data-liquivelte-component-name="header">
	{%- endunless -%}
	{% liquid 
  assign account_url = routes.account_login_url
  if member
    assign account_url = routes.account_url
  endif

  assign account_text = 'customer.log_in' | t
  if customer
    assign account_text = 'customer.account_fallback' | t
  endif

  assign logo_alt = section.settings.logo.alt | default: shop.name | escape
  assign logo_height = section.settings.logo_width | divided_by: section.settings.logo.aspect_ratio
  assign logo_html = section.settings.logo | image_url: width: section.settings.width | image_tag: class: 'header__heading-logo', widths: '50, 100, 150, 200, 250, 300, 400, 500', height: logo_height, width: section.settings.logo_width, alt: logo_alt

  assign potential_action_target = request.origin | append: routes.search_url | append: "?q={search_term_string}"
  assign menu = linklists[section.settings.menu]
  assign menu_json = '{ "title": "' | append: menu.title | append: '", "levels": ' | append: menu.levels | append: ', "links": ['
  for link in menu.links
    assign menu_json = menu_json | append: '{ "url": "' | append: link.url | append: '", "title": "' | append: link.title | append: '"}' 
    unless forloop.last
      assign menu_json = menu_json | append: ','
    endunless
  endfor
  assign menu_json = menu_json | append: ']}'

%}


<svg xmlns="http://www.w3.org/2000/svg"  class="hidden svelte-ti29kk">
  <symbol id="icon-search" viewbox="0 0 18 19" fill="none">
    <path fill-rule="evenodd" clip-rule="evenodd" d="M11.03 11.68A5.784 5.784 0 112.85 3.5a5.784 5.784 0 018.18 8.18zm.26 1.12a6.78 6.78 0 11.72-.7l5.4 5.4a.5.5 0 11-.71.7l-5.41-5.4z" fill="currentColor"/>
  </symbol>

  <symbol id="icon-close"  class="icon icon-close svelte-ti29kk" fill="none" viewBox="0 0 18 17">
    <path d="M.865 15.978a.5.5 0 00.707.707l7.433-7.431 7.579 7.282a.501.501 0 00.846-.37.5.5 0 00-.153-.351L9.712 8.546l7.417-7.416a.5.5 0 10-.707-.708L8.991 7.853 1.413.573a.5.5 0 10-.693.72l7.563 7.268-7.418 7.417z" fill="currentColor">
  </symbol>
</svg>

  
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props %}resizable-kvsp--prsp-left-kvsp--prsp-reveal-kvsp--prsp-swipe-kvsp--prsp-swipeOnlyClose-kvsp-{true}{% endcapture %}

{% capture slot_content_Panel %}
    
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props %}undefined-kvsp-{% endcapture %}

{% capture slot_content_View %}
      
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props %}undefined-kvsp-{% endcapture %}

{% capture slot_content_Page %}
        
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props %}undefined-kvsp-{% endcapture %}

{% capture slot_content_Block %} Left panel content {% endcapture %}
{% assign slot_contents = slot_contents | append: '-scs-' | append: 'framework7-liquivelte-block' | append: '-scvs-' | append: slot_content_Block %}
{% assign modulename = basename | append: 'framework7-liquivelte-block' %}
{% include modulename, liquivelte: true, props: props, sub_include: true, slot_contents: slot_contents, basename: 'framework7-liquivelte-' %}
{% assign props = '' %}
      {% endcapture %}
{% assign slot_contents = slot_contents | append: '-scs-' | append: 'framework7-liquivelte-page' | append: '-scvs-' | append: slot_content_Page %}
{% assign modulename = basename | append: 'framework7-liquivelte-page' %}
{% include modulename, liquivelte: true, props: props, sub_include: true, slot_contents: slot_contents, basename: 'framework7-liquivelte-' %}
{% assign props = '' %}
    {% endcapture %}
{% assign slot_contents = slot_contents | append: '-scs-' | append: 'framework7-liquivelte-view' | append: '-scvs-' | append: slot_content_View %}
{% assign modulename = basename | append: 'framework7-liquivelte-view' %}
{% include modulename, liquivelte: true, props: props, sub_include: true, slot_contents: slot_contents, basename: 'framework7-liquivelte-' %}
{% assign props = '' %}
  {% endcapture %}
{% assign slot_contents = slot_contents | append: '-scs-' | append: 'framework7-liquivelte-panel' | append: '-scvs-' | append: slot_content_Panel %}
{% assign modulename = basename | append: 'framework7-liquivelte-panel' %}
{% include modulename, liquivelte: true, props: props, sub_include: true, slot_contents: slot_contents, basename: 'framework7-liquivelte-' %}
{% assign props = '' %}
  
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props %}class-kvsp-cart-popup-prsp-resizable-kvsp--prsp-right-kvsp--prsp-reveal-kvsp--prsp-swipe-kvsp--prsp-swipeOnlyClose-kvsp-{true}{% endcapture %}

{% capture slot_content_Popup %}
    
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props %}undefined-kvsp-{% endcapture %}

{% capture slot_content_View %}
      
{% comment %}
  kvsp stands for "key value separator"
  prsp stands for "props separator"
{% endcomment %}
{% capture props %}{% endcapture %}
{% assign modulename = basename | append: 'cart-drawer' %}
{% include modulename, liquivelte: true, props: props, sub_include: true, basename: '' %}
{% assign props = '' %}
    {% endcapture %}
{% assign slot_contents = slot_contents | append: '-scs-' | append: 'framework7-liquivelte-view' | append: '-scvs-' | append: slot_content_View %}
{% assign modulename = basename | append: 'framework7-liquivelte-view' %}
{% include modulename, liquivelte: true, props: props, sub_include: true, slot_contents: slot_contents, basename: 'framework7-liquivelte-' %}
{% assign props = '' %}
  {% endcapture %}
{% assign slot_contents = slot_contents | append: '-scs-' | append: 'framework7-liquivelte-popup' | append: '-scvs-' | append: slot_content_Popup %}
{% assign modulename = basename | append: 'framework7-liquivelte-popup' %}
{% include modulename, liquivelte: true, props: props, sub_include: true, slot_contents: slot_contents, basename: 'framework7-liquivelte-' %}
{% assign props = '' %}
  <header> 
    
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props %}undefined-kvsp-{% endcapture %}

{% capture slot_content_Appbar %}
      <div  class="left svelte-ti29kk">
        
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props %}small-kvsp--prsp-panelToggle-kvsp-left-prsp-class-kvsp-display-flex{% endcapture %}

{% capture slot_content_Button %}
          
{% comment %}
  kvsp stands for "key value separator"
  prsp stands for "props separator"
{% endcomment %}
{% capture props %}name-kvsp-icon-hamburger-prsp-width-kvsp-15{% endcapture %}
{% assign modulename = basename | append: 'icon' %}
{% include modulename, liquivelte: true, props: props, sub_include: true, basename: '' %}
{% assign props = '' %}
        {% endcapture %}
{% assign slot_contents = slot_contents | append: '-scs-' | append: 'framework7-liquivelte-button' | append: '-scvs-' | append: slot_content_Button %}
{% assign modulename = basename | append: 'framework7-liquivelte-button' %}
{% include modulename, liquivelte: true, props: props, sub_include: true, slot_contents: slot_contents, basename: 'framework7-liquivelte-' %}
{% assign props = '' %}
      </div>
      <div  class="center svelte-ti29kk">
        
{% comment %}
  kvsp stands for "key value separator"
  prsp stands for "props separator"
{% endcomment %}
{% capture props %}{% endcapture %}
{% assign modulename = basename | append: 'logo' %}
{% include modulename, liquivelte: true, props: props, sub_include: true, basename: '' %}
{% assign props = '' %}
      </div>
      <div  class="left svelte-ti29kk">
        
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props %}small-kvsp--prsp-popupOpen-kvsp-.cart-popup-prsp-class-kvsp-display-flex{% endcapture %}

{% capture slot_content_Button %}
          
{% comment %}
  kvsp stands for "key value separator"
  prsp stands for "props separator"
{% endcomment %}
{% capture props %}name-kvsp-icon-cart-prsp-width-kvsp-40{% endcapture %}
{% assign modulename = basename | append: 'icon' %}
{% include modulename, liquivelte: true, props: props, sub_include: true, basename: '' %}
{% assign props = '' %}
        {% endcapture %}
{% assign slot_contents = slot_contents | append: '-scs-' | append: 'framework7-liquivelte-button' | append: '-scvs-' | append: slot_content_Button %}
{% assign modulename = basename | append: 'framework7-liquivelte-button' %}
{% include modulename, liquivelte: true, props: props, sub_include: true, slot_contents: slot_contents, basename: 'framework7-liquivelte-' %}
{% assign props = '' %}
      </div>
    {% endcapture %}
{% assign slot_contents = slot_contents | append: '-scs-' | append: 'framework7-liquivelte-appbar' | append: '-scvs-' | append: slot_content_Appbar %}
{% assign modulename = basename | append: 'framework7-liquivelte-appbar' %}
{% include modulename, liquivelte: true, props: props, sub_include: true, slot_contents: slot_contents, basename: 'framework7-liquivelte-' %}
{% assign props = '' %}
  </header>

{% if settings.cart_type == "notification" %}
  
    {% include 'cart-notification' , color_scheme: section.settings.color_scheme %}
    {%- capture rawinclude -%}{% include 'cart-notification' , color_scheme: section.settings.color_scheme %}{%- endcapture -%}
  <script liquivelte-keep liquivelte-eval>
  window.liquivelte_rawincludes = window.liquivelte_rawincludes || {};
  window.liquivelte_rawincludes['rawinclude_679e0e24'] = [...(window.liquivelte_rawincludes['rawinclude_679e0e24'] || []),`{{ rawinclude | escape | strip_newlines }}`];
  if(document.currentScript){
    document.currentScript.remove();
  }</script>
  {%- assign rawinclude = '' -%}
{% endif %}


    {% include 'application-ld' , type: 'shop' %}
    {%- capture rawinclude -%}{% include 'application-ld' , type: 'shop' %}{%- endcapture -%}
  <script liquivelte-keep liquivelte-eval>
  window.liquivelte_rawincludes = window.liquivelte_rawincludes || {};
  window.liquivelte_rawincludes['rawinclude_3be65912'] = [...(window.liquivelte_rawincludes['rawinclude_3be65912'] || []),`{{ rawinclude | escape | strip_newlines }}`];
  if(document.currentScript){
    document.currentScript.remove();
  }</script>
  {%- assign rawinclude = '' -%}

{% if request.page_type == 'index' %}
  
    {% include 'application-ld' , type: 'shop2' %}
    {%- capture rawinclude -%}{% include 'application-ld' , type: 'shop2' %}{%- endcapture -%}
  <script liquivelte-keep liquivelte-eval>
  window.liquivelte_rawincludes = window.liquivelte_rawincludes || {};
  window.liquivelte_rawincludes['rawinclude_602baf9d'] = [...(window.liquivelte_rawincludes['rawinclude_602baf9d'] || []),`{{ rawinclude | escape | strip_newlines }}`];
  if(document.currentScript){
    document.currentScript.remove();
  }</script>
  {%- assign rawinclude = '' -%}
{% endif %}



{% schema %}{
  "name": "t:sections.header.name",
  "class": "section-header",
  "settings": [
    {
      "type": "select",
      "id": "color_scheme",
      "options": [
        {
          "label": "t:sections.all.colors.accent_1.label",
          "value": "accent-1"
        },
        {
          "label": "t:sections.all.colors.accent_2.label",
          "value": "accent-2"
        },
        {
          "label": "t:sections.all.colors.background_1.label",
          "value": "background-1"
        },
        {
          "label": "t:sections.all.colors.background_2.label",
          "value": "background-2"
        },
        {
          "label": "t:sections.all.colors.inverse.label",
          "value": "inverse"
        }
      ],
      "default": "background-1",
      "label": "t:sections.all.colors.label"
    },
    {
      "type": "image_picker",
      "id": "logo",
      "label": "t:sections.header.settings.logo.label"
    },
    {
      "type": "range",
      "id": "logo_width",
      "min": 50,
      "max": 250,
      "step": 10,
      "default": 100,
      "unit": "t:sections.header.settings.logo_width.unit",
      "label": "t:sections.header.settings.logo_width.label"
    },
    {
      "type": "select",
      "id": "logo_position",
      "options": [
        {
          "label": "t:sections.header.settings.logo_position.options__2.label",
          "value": "top-left"
        },
        {
          "label": "t:sections.header.settings.logo_position.options__3.label",
          "value": "top-center"
        },
        {
          "label": "t:sections.header.settings.logo_position.options__1.label",
          "value": "middle-left"
        },
        {
          "label": "t:sections.header.settings.logo_position.options__4.label",
          "value": "middle-center"
        }
      ],
      "default": "middle-left",
      "label": "t:sections.header.settings.logo_position.label"
    },
    {
      "type": "link_list",
      "id": "menu",
      "default": "main-menu",
      "label": "t:sections.header.settings.menu.label"
    },
    {
      "type": "select",
      "id": "menu_type_desktop",
      "options": [
        {
          "label": "t:sections.header.settings.menu_type_desktop.options__1.label",
          "value": "dropdown"
        },
        {
          "label": "t:sections.header.settings.menu_type_desktop.options__2.label",
          "value": "mega"
        }
      ],
      "default": "dropdown",
      "label": "t:sections.header.settings.menu_type_desktop.label",
      "info": "t:sections.header.settings.menu_type_desktop.info"
    },
    {
      "type": "checkbox",
      "id": "show_line_separator",
      "default": true,
      "label": "t:sections.header.settings.show_line_separator.label"
    },
    {
      "type": "checkbox",
      "id": "enable_sticky_header",
      "default": true,
      "label": "t:sections.header.settings.enable_sticky_header.label",
      "info": "t:sections.header.settings.enable_sticky_header.info"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.mobile_layout.content"
    },
    {
      "type": "select",
      "id": "mobile_logo_position",
      "options": [
        {
          "label": "t:sections.header.settings.mobile_logo_position.options__1.label",
          "value": "center"
        },
        {
          "label": "t:sections.header.settings.mobile_logo_position.options__2.label",
          "value": "left"
        }
      ],
      "default": "center",
      "label": "t:sections.header.settings.mobile_logo_position.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.spacing"
    },
    {
      "type": "range",
      "id": "margin_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.header.settings.margin_bottom.label",
      "default": 8
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 36,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 20
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 36,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 20
    }
  ]
}{% endschema %}



	
	{%- liquid 
  assign cart_json = '{'
  assign cart_json = cart_json | append: '"attributes":'
  assign cart_attributes_json = cart.attributes | json
  assign cart_json = cart_json | append: cart_attributes_json
  assign cart_json = cart_json | append: ','
  assign cart_json = cart_json | append: '"cart_level_discount_applications":'
  assign cart_level_discount_applications_json = cart.cart_level_discount_applications | json
  assign cart_json = cart_json | append: cart_level_discount_applications_json
  assign cart_json = cart_json | append: ','
  assign cart_json = cart_json | append: '"currency":'
  assign cart_json = cart_json | append: '"' | append: cart.currency | append: '"'
  assign cart_json = cart_json | append: ','
  assign cart_json = cart_json | append: '"item_count":'
  assign cart_json = cart_json | append: '"' | append: cart.item_count | append: '"'
  assign cart_json = cart_json | append: ','
  assign cart_json = cart_json | append: '"items_subtotal_price":'
  assign cart_json = cart_json | append: '"' | append: cart.items_subtotal_price | append: '"'
  assign cart_json = cart_json | append: ','
  assign cart_json = cart_json | append: '"note":'
  assign cart_json = cart_json | append: '"' | append: cart.note | append: '"'
  assign cart_json = cart_json | append: ','
  assign cart_json = cart_json | append: '"original_total_price":'
  assign cart_json = cart_json | append: '"' | append: cart.original_total_price | append: '"'
  assign cart_json = cart_json | append: ','
  assign cart_json = cart_json | append: '"requires_shipping":'
  assign cart_json = cart_json | append: '"' | append: cart.requires_shipping | append: '"'
  assign cart_json = cart_json | append: ','
  assign cart_json = cart_json | append: '"total_discount":'
  assign cart_json = cart_json | append: '"' | append: cart.total_discount | append: '"'
  assign cart_json = cart_json | append: ','
  assign cart_json = cart_json | append: '"total_price":'
  assign cart_json = cart_json | append: '"' | append: cart.total_price | append: '"'
  assign cart_json = cart_json | append: ','
  assign cart_json = cart_json | append: '"total_weight":'
  assign cart_json = cart_json | append: '"' | append: cart.total_weight | append: '"'
  assign cart_json = cart_json | append: ','
  assign cart_json = cart_json | append: '"items": ['
  for item in cart.items
    assign item_json = item | json
    assign item_json = item_json | remove_last: '}'
    assign item_json = item_json | append: ',"product":'
    assign product_json = item.product | json
    assign item_json = item_json | append: product_json
    assign item_json = item_json | append: '}'

    assign cart_json = cart_json | append: item_json
    unless forloop.last
      assign cart_json = cart_json | append: ','
    endunless
  endfor
  assign cart_json = cart_json | append: ']'

  assign cart_json = cart_json | append: '}' 
-%}					
						
	<script type="text/noscript"  class="instance-data svelte-ti29kk">{
	"cart": {{ cart_json }}, "shop" : {{ shop | json }} , "menu_json" : {{ menu_json | json }} , "settings" : {{ settings | json }} , "logo_html" : {{ logo_html | json }} , "routes" : {{ routes | json }} , "request" : {{ request | json }} , "account_url" : {{ account_url | json }} , "account_text" : {{ account_text | json }} 
	,
	"shopƒƒname": {{ shop.name | json }} , "sectionƒƒsettings": {{ section.settings | json }} 

	}</script>
	
	<script  class="liquivelte-prop-script svelte-ti29kk">(() => {
	var propScript = Shopify.designMode && window.propScriptForDesignMode ? window.propScriptForDesignMode : document.currentScript;
	function parseProps(e){const s={};let t={bracketsOpened:0,get open(){return this.bracketsOpened>0},set open(e){!0===e?this.bracketsOpened=this.bracketsOpened+1:!1===e&&(this.bracketsOpened=this.bracketsOpened-1)}},a=` ${e} `.split(""),r=!1,c=!1,n=!1,p=!1,o="",b="";for(let e=0;e<a.length;e++){const k=a[e];switch(!0){case" "===k:p||t.open||(c=!1),!n||p||t.open||(n=!1);break;case"{"===k:t.open=!0,n||(c=!0);break;case"}"===k:t.open=!1;break;case'"'===k:p=!p;break;case"="===k:c&&(c=!1,n=!0,r=!0);break;case/[^\s]/.test(k):n||(c=!0)}!c||n||r?c||!n||r?c||n||(o&&(s[o]=b.replace(/^"/,"").replace(/"$/,"")),b="",o=""):b+=k:o+=k,r=!1}return Object.keys(s).map((e=>{if(/\{\s*\.\.\.(\w+)\s*\}/.test(e)){const[,t]=e.match(/\{\s*\.\.\.(\w+)\s*\}/);s.spread=t,delete s[e]}})),s}
	function JSONparse(n){try{return JSON.parse(n)}catch(t){try{const e=parseInt(t.message.match(/position\s+(\d+)/)[1],10),s=n.slice(0,e+1).split("\n"),i=s.length,l=n.split("\n"),r=s[s.length-1].length-1,c=l.slice(0,i).join("\n")+"\n"+new Array(r).fill(" ").join("")+"👆\n"+l.slice(i).join("\n");return console.log(c),{}}catch(n){throw t}}}
	function htmlDecode(input) {
	var doc = new DOMParser().parseFromString(input, "text/html");
	return doc.documentElement.textContent;
	}
	function componentWrapper(el) {
	if(el.classList.contains('liquivelte-component')) {
	return el;
	} else {
	return componentWrapper(el.parentElement);
	}
	}
	var wrapper = componentWrapper(propScript.parentElement);
	// console.log('wrapper', wrapper);
	// console.log('parsing props for svelte component');
	try{
	wrapper.svelteProps = { ...(wrapper.svelteProps || {}), ...(JSONparse(propScript.previousElementSibling.textContent)) };
	} catch (e) {
	const err = 'There was an error';
	console.error('there was an error parsing props json', e);
	wrapper.svelteProps = { ...wrapper.svelteProps, error: (wrapper.svelteProps.error || '') + err};
	}
	
	
	try{
	wrapper.svelteProps["rawinclude_679e0e24"] = [...(wrapper.svelteProps["rawinclude_679e0e24"] || []), ...window.liquivelte_rawincludes['rawinclude_679e0e24'].map(e => htmlDecode(e)) ];
	} catch (e) {
	const err = 'Could not grab liquid include, because it is not present in the liquid context please check for rawinclude_679e0e24 in the header.liquid file.';
	console.error(err);
	wrapper.svelteProps = { ...wrapper.svelteProps, error: (wrapper.svelteProps.error || '') + err};
	}

	;
	try{
	wrapper.svelteProps["rawinclude_3be65912"] = [...(wrapper.svelteProps["rawinclude_3be65912"] || []), ...window.liquivelte_rawincludes['rawinclude_3be65912'].map(e => htmlDecode(e)) ];
	} catch (e) {
	const err = 'Could not grab liquid include, because it is not present in the liquid context please check for rawinclude_3be65912 in the header.liquid file.';
	console.error(err);
	wrapper.svelteProps = { ...wrapper.svelteProps, error: (wrapper.svelteProps.error || '') + err};
	}

	;
	try{
	wrapper.svelteProps["rawinclude_602baf9d"] = [...(wrapper.svelteProps["rawinclude_602baf9d"] || []), ...window.liquivelte_rawincludes['rawinclude_602baf9d'].map(e => htmlDecode(e)) ];
	} catch (e) {
	const err = 'Could not grab liquid include, because it is not present in the liquid context please check for rawinclude_602baf9d in the header.liquid file.';
	console.error(err);
	wrapper.svelteProps = { ...wrapper.svelteProps, error: (wrapper.svelteProps.error || '') + err};
	}

	

	// liquid expression cache
	[...wrapper.querySelectorAll('[liquivelte-value-cache]')].forEach(el => {
	let [filter, args, value] = el.getAttribute('liquivelte-value-cache').split('§');
	args = args.split(', ');
	wrapper.liquid_expression_cache = wrapper.liquid_expression_cache || {};
	wrapper.liquid_expression_cache[filter] = wrapper.liquid_expression_cache[filter] || new Map;
	wrapper.liquid_expression_cache[filter].set(`${args.join(',')}`, value);
	});

	if(propScript){
	propScript.remove();
	}
	if(propScript.previousElementSibling) {
	propScript.previousElementSibling.remove();
	}
	})();</script>
	{%- unless sub_include -%} 
	</div>
	{%- endunless -%}
	