	{%- liquid
			
			
			-%}
	{%- liquid
	assign lv_props_arr = props | split: '-prsp-'
	for lv_prop in lv_props_arr
	assign lv_prop_and_value = lv_prop | split: '-kvsp-'
	assign lv_propName = lv_prop_and_value | first
	if lv_prop_and_value.size > 1
		assign lv_propValue = lv_prop_and_value | last | remove: '"'
	else
		assign lv_propValue = ''	
	endif
	if lv_propValue == '0'
		assign lv_propValue = lv_propValue | times: 1
	endif
	if lv_propValue contains '{' and lv_propValue contains '}'
	assign lv_propValue = lv_propValue | remove: '{' | remove: '}'
	assign lv_propValueArr = lv_propValue | split: ','
	for lv_entry in lv_propValueArr
	assign lv_key = lv_entry | split: ':' | first | strip | remove: '"'
	assign lv_value = lv_entry | split: ':' | last | strip | remove: '"'
	assign composite_key = lv_propName | append: '_' | append: lv_key
	
	endfor
	endif
	endfor
	-%}
	
			{%- liquid
				assign slot_contents_and_values = slot_contents | split: '-scs-'
				for content_and_value in slot_contents_and_values
					assign module_and_slotname = content_and_value | split: '-scvs-' | first
					assign lv_module = module_and_slotname | split: '-smns-' | first
					assign lv_name = module_and_slotname | split: '-smns-' | last
					assign lv_value = content_and_value | split: '-scvs-' | last
					
					if lv_module == 'cart-drawer'
						assign slot_default_cart-drawer = lv_value | strip
					endif
				endfor
				-%}
	{%- unless sub_include -%} 
	<div  class="liquivelte-component cart-drawer svelte-2fnp2n" data-liquivelte-component-name="cart-drawer.liquivelte">
	{%- endunless -%}
	{% liquid 
	assign min_amounts = '{'
	for item in cart.items
		assign min_amount = item.product.metafields.custom['min-amount'] | default: 0
		assign min_amounts = min_amounts | append: '"' | append: item.id | append: '":' | append: min_amount
		unless forloop.last
			assign min_amounts = min_amounts | append: ','
		endunless
	endfor
	assign min_amounts = min_amounts | append: '}'
%}

  
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_View %}classes-kvsp-cart-drawer{% endcapture %}

{%- capture slot_content_View_header -%}<div slot="header"  class="text-xl mb-4 svelte-2fnp2n">{{ item.product_title }}</div>{%- endcapture -%}
{% assign slot_content_View = slot_content_View | append: '-scs-' | append: 'framework7-liquivelte-view' | append: '-smns-' | append: 'header' | append: '-scvs-' | append: slot_content_View_header %}

{%- capture slot_content_View_after -%}<div slot="after"  class="ml-2 svelte-2fnp2n"> {{ item.price | money }} </div>{%- endcapture -%}
{% assign slot_content_View = slot_content_View | append: '-scs-' | append: 'framework7-liquivelte-view' | append: '-smns-' | append: 'after' | append: '-scvs-' | append: slot_content_View_after %}

{%- capture slot_content_View_text -%}<div slot="text"  class="cart-item-options svelte-2fnp2n">
							{% for option in item.variant_options %}
    {% assign index = forloop.index0 %}
							<span  class="text-gray-500k text-base line-item-option svelte-2fnp2n"> {{ option }} </span> <br>
							{% endfor %}
						</div>{%- endcapture -%}
{% assign slot_content_View = slot_content_View | append: '-scs-' | append: 'framework7-liquivelte-view' | append: '-smns-' | append: 'text' | append: '-scvs-' | append: slot_content_View_text %}

{%- capture slot_content_View_media -%}<div slot="media">
							{% if item.image %}
								<img src="{{ item.image | image_url: width: 120 }}" liquivelte-value-cache="image_url§{{item.image}}, {{width}}, {{120}}§{{item.image| image_url: width: 120  }}" width="80" />
							{% endif %}
						</div>{%- endcapture -%}
{% assign slot_content_View = slot_content_View | append: '-scs-' | append: 'framework7-liquivelte-view' | append: '-smns-' | append: 'media' | append: '-scvs-' | append: slot_content_View_media %}

{%- capture slot_content_View_footer -%}<div slot="footer"  class="ml-2 svelte-2fnp2n">
							
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_Loadable %}{% endcapture %}

{%- capture slot_content_def_Loadable -%} 
								
{% comment %}
  kvsp stands for "key value separator"
  prsp stands for "props separator"
{% endcomment %}
{% capture props_Stepper %}raised-kvsp-1-prsp-onChange-kvsp-{ quantityChange.bind(item) }-prsp-value-kvsp-{item.quantity}{% endcapture %}
{% assign modulename = basename | append: 'framework7-liquivelte-stepper' %}
{% include modulename, liquivelte: true, props: props_Stepper, sub_include: true, basename: 'framework7-liquivelte-' %}
{% assign props = '' %}
							{%- endcapture -%}
{% assign slot_content_Loadable = slot_content_Loadable | append: '-scs-' | append: 'loadable' | append: '-scvs-' | append: slot_content_def_Loadable %}
{% assign modulename = basename | append: 'loadable' %}
{% include modulename, liquivelte: true, props: props_Loadable, sub_include: true, slot_contents: slot_content_Loadable, basename: '' %}
{% assign props = '' %}
						</div>{%- endcapture -%}
{% assign slot_content_View = slot_content_View | append: '-scs-' | append: 'framework7-liquivelte-view' | append: '-smns-' | append: 'footer' | append: '-scvs-' | append: slot_content_View_footer %}

{%- capture slot_content_def_View -%}
    
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_Page %}undefined-kvsp-1{% endcapture %}

{%- capture slot_content_def_Page -%}
			
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_Block %}undefined-kvsp-1{% endcapture %}

{%- capture slot_content_def_Block -%}
				
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_BlockTitle %}undefined-kvsp-1{% endcapture %}

{%- capture slot_content_def_BlockTitle -%}
					Cart
				{%- endcapture -%}
{% assign slot_content_BlockTitle = slot_content_BlockTitle | append: '-scs-' | append: 'framework7-liquivelte-block-title' | append: '-scvs-' | append: slot_content_def_BlockTitle %}
{% assign modulename = basename | append: 'framework7-liquivelte-block-title' %}
{% include modulename, liquivelte: true, props: props_BlockTitle, sub_include: true, slot_contents: slot_content_BlockTitle, basename: 'framework7-liquivelte-' %}
{% assign props = '' %}
			{%- endcapture -%}
{% assign slot_content_Block = slot_content_Block | append: '-scs-' | append: 'framework7-liquivelte-block' | append: '-scvs-' | append: slot_content_def_Block %}
{% assign modulename = basename | append: 'framework7-liquivelte-block' %}
{% include modulename, liquivelte: true, props: props_Block, sub_include: true, slot_contents: slot_content_Block, basename: 'framework7-liquivelte-' %}
{% assign props = '' %}
			
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_List %}{% endcapture %}

{%- capture slot_content_def_List -%}
				{% for item in $cartStore.items  %}
    {% assign index = forloop.index0 %}
					
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_ListItem %}classes-kvsp-h-[120px]{% endcapture %}

{%- capture slot_content_def_ListItem -%}
						
						
						
						
						
					{%- endcapture -%}
{% assign slot_content_ListItem = slot_content_ListItem | append: '-scs-' | append: 'framework7-liquivelte-list-item' | append: '-scvs-' | append: slot_content_def_ListItem %}
{% assign modulename = basename | append: 'framework7-liquivelte-list-item' %}
{% include modulename, liquivelte: true, props: props_ListItem, sub_include: true, slot_contents: slot_content_ListItem, basename: 'framework7-liquivelte-' %}
{% assign props = '' %}
				{% endfor %}
			{%- endcapture -%}
{% assign slot_content_List = slot_content_List | append: '-scs-' | append: 'framework7-liquivelte-list' | append: '-scvs-' | append: slot_content_def_List %}
{% assign modulename = basename | append: 'framework7-liquivelte-list' %}
{% include modulename, liquivelte: true, props: props_List, sub_include: true, slot_contents: slot_content_List, basename: 'framework7-liquivelte-' %}
{% assign props = '' %}
			
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_Block %}classes-kvsp-cart-drawer-bottom{% endcapture %}

{%- capture slot_content_def_Block -%}
					<div  class="cart-drawer-subtotal svelte-2fnp2n">
						<span  class="text-gray text-base float-left svelte-2fnp2n" data-t="{{ 'general.cart.subtotal' | t }}" liquivelte-value-cache="t§{{'general.cart.subtotal'}}§{{'general.cart.subtotal'| t  }}"> {{ 'general.cart.subtotal' | t }} </span> 
						<span cart-drawer-subtotal-text  class="float-right text-black text-lg  svelte-2fnp2n">{{ cart.items_subtotal_price | money }}</span>
					</div>
					<div  class="cart-drawer-taxes-notice text-base text-black float-left svelte-2fnp2n"> Taxes and shipping calculated at checkout </div>
					<button on:click="{() _afeq__afct_ submit() }"  class="mt-10 w-full bg-indigo-600 border border-transparent rounded-md py-3 px-8 flex items-center justify-center text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 svelte-2fnp2n">
						 Checkout 
					</button>
					<a  class="mt-10 w-full bg-gray-300 border border-transparent rounded-md py-3 px-8 flex items-center justify-center text-base font-medium text-black hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 svelte-2fnp2n" href="/cart"> View Cart </a>
			{%- endcapture -%}
{% assign slot_content_Block = slot_content_Block | append: '-scs-' | append: 'framework7-liquivelte-block' | append: '-scvs-' | append: slot_content_def_Block %}
{% assign modulename = basename | append: 'framework7-liquivelte-block' %}
{% include modulename, liquivelte: true, props: props_Block, sub_include: true, slot_contents: slot_content_Block, basename: 'framework7-liquivelte-' %}
{% assign props = '' %}
    {%- endcapture -%}
{% assign slot_content_Page = slot_content_Page | append: '-scs-' | append: 'framework7-liquivelte-page' | append: '-scvs-' | append: slot_content_def_Page %}
{% assign modulename = basename | append: 'framework7-liquivelte-page' %}
{% include modulename, liquivelte: true, props: props_Page, sub_include: true, slot_contents: slot_content_Page, basename: 'framework7-liquivelte-' %}
{% assign props = '' %}
  {%- endcapture -%}
{% assign slot_content_View = slot_content_View | append: '-scs-' | append: 'framework7-liquivelte-view' | append: '-scvs-' | append: slot_content_def_View %}
{% assign modulename = basename | append: 'framework7-liquivelte-view' %}
{% include modulename, liquivelte: true, props: props_View, sub_include: true, slot_contents: slot_content_View, basename: 'framework7-liquivelte-' %}
{% assign props = '' %}

	
	
	{%- liquid 
  assign cart_json = '{'
  assign cart_json = cart_json | append: '"attributes":'
  assign cart_attributes_json = cart.attributes | json
  assign cart_json = cart_json | append: cart_attributes_json
  assign cart_json = cart_json | append: ','
  assign cart_json = cart_json | append: '"cart_level_discount_applications":'
  assign cart_level_discount_applications_json = cart.cart_level_discount_applications | json
  assign cart_json = cart_json | append: cart_level_discount_applications_json
  assign cart_json = cart_json | append: ','
  assign cart_json = cart_json | append: '"currency":'
  assign cart_json = cart_json | append: '"' | append: cart.currency | append: '"'
  assign cart_json = cart_json | append: ','
  assign cart_json = cart_json | append: '"item_count":'
  assign cart_json = cart_json | append: '"' | append: cart.item_count | append: '"'
  assign cart_json = cart_json | append: ','
  assign cart_json = cart_json | append: '"items_subtotal_price":'
  assign cart_json = cart_json | append: '"' | append: cart.items_subtotal_price | append: '"'
  assign cart_json = cart_json | append: ','
  assign cart_json = cart_json | append: '"note":'
  assign cart_json = cart_json | append: '"' | append: cart.note | append: '"'
  assign cart_json = cart_json | append: ','
  assign cart_json = cart_json | append: '"original_total_price":'
  assign cart_json = cart_json | append: '"' | append: cart.original_total_price | append: '"'
  assign cart_json = cart_json | append: ','
  assign cart_json = cart_json | append: '"requires_shipping":'
  assign cart_json = cart_json | append: '"' | append: cart.requires_shipping | append: '"'
  assign cart_json = cart_json | append: ','
  assign cart_json = cart_json | append: '"total_discount":'
  assign cart_json = cart_json | append: '"' | append: cart.total_discount | append: '"'
  assign cart_json = cart_json | append: ','
  assign cart_json = cart_json | append: '"total_price":'
  assign cart_json = cart_json | append: '"' | append: cart.total_price | append: '"'
  assign cart_json = cart_json | append: ','
  assign cart_json = cart_json | append: '"total_weight":'
  assign cart_json = cart_json | append: '"' | append: cart.total_weight | append: '"'
  assign cart_json = cart_json | append: ','
  assign cart_json = cart_json | append: '"items": ['
  for item in cart.items
    assign item_json = item | json
    assign item_json = item_json | remove_last: '}'
    assign item_json = item_json | append: ',"product":'
    assign product_json = item.product | json
    assign item_json = item_json | append: product_json
    assign item_json = item_json | append: '}'

    assign cart_json = cart_json | append: item_json
    unless forloop.last
      assign cart_json = cart_json | append: ','
    endunless
  endfor
  assign cart_json = cart_json | append: ']'

  assign cart_json = cart_json | append: '}' 
-%}					
						
	<script type="text/noscript"  class="instance-data svelte-2fnp2n">{
	"cart": {{ cart_json }}, "min_amounts" : {{ min_amounts | json }}
	
	
	}</script>
	
	<script  class="liquivelte-prop-script svelte-2fnp2n">(() => {
	var propScript = Shopify.designMode && window.propScriptForDesignMode ? window.propScriptForDesignMode : document.currentScript;
	function parseProps(e){const s={};let t={bracketsOpened:0,get open(){return this.bracketsOpened>0},set open(e){!0===e?this.bracketsOpened=this.bracketsOpened+1:!1===e&&(this.bracketsOpened=this.bracketsOpened-1)}},a=` ${e} `.split(""),r=!1,c=!1,n=!1,p=!1,o="",b="";for(let e=0;e<a.length;e++){const k=a[e];switch(!0){case" "===k:p||t.open||(c=!1),!n||p||t.open||(n=!1);break;case"{"===k:t.open=!0,n||(c=!0);break;case"}"===k:t.open=!1;break;case'"'===k:p=!p;break;case"="===k:c&&(c=!1,n=!0,r=!0);break;case/[^\s]/.test(k):n||(c=!0)}!c||n||r?c||!n||r?c||n||(o&&(s[o]=b.replace(/^"/,"").replace(/"$/,"")),b="",o=""):b+=k:o+=k,r=!1}return Object.keys(s).map((e=>{if(/\{\s*\.\.\.(\w+)\s*\}/.test(e)){const[,t]=e.match(/\{\s*\.\.\.(\w+)\s*\}/);s.spread=t,delete s[e]}})),s}
	function JSONparse(n){try{return JSON.parse(n)}catch(t){try{const e=parseInt(t.message.match(/position\s+(\d+)/)[1],10),s=n.slice(0,e+1).split("\n"),i=s.length,l=n.split("\n"),r=s[s.length-1].length-1,c=l.slice(0,i).join("\n")+"\n"+new Array(r).fill(" ").join("")+"👆\n"+l.slice(i).join("\n");return console.log(c),{}}catch(n){throw t}}}
	function htmlDecode(input) {
	var doc = new DOMParser().parseFromString(input, "text/html");
	return doc.documentElement.textContent;
	}
	function componentWrapper(el) {
	if(el.classList.contains('liquivelte-component')) {
	return el;
	} else {
	return componentWrapper(el.parentElement);
	}
	}
	var wrapper = componentWrapper(propScript.parentElement);
	// console.log('wrapper', wrapper);
	// console.log('parsing props for svelte component');
	try{
	wrapper.svelteProps = { ...(wrapper.svelteProps || {}), ...(JSONparse(propScript.previousElementSibling.textContent)) };
	} catch (e) {
	const err = 'There was an error';
	console.error('there was an error parsing props json', e);
	wrapper.svelteProps = { ...wrapper.svelteProps, error: (wrapper.svelteProps.error || '') + err};
	}
	
	

	// liquid expression cache
	[...wrapper.querySelectorAll('[liquivelte-value-cache]')].forEach(el => {
	let [filter, args, value] = el.getAttribute('liquivelte-value-cache').split('§');
	args = args.split(', ');
	wrapper.liquid_expression_cache = wrapper.liquid_expression_cache || {};
	wrapper.liquid_expression_cache[filter] = wrapper.liquid_expression_cache[filter] || new Map;
	wrapper.liquid_expression_cache[filter].set(`${args.join(',')}`, value);
	});

	if(propScript){
	propScript.remove();
	}
	if(propScript.previousElementSibling) {
	propScript.previousElementSibling.remove();
	}
	})();</script>
	{%- liquid
			
			
			-%}
	{%- liquid 
			assign slot_default_cart-drawer = null
			
			-%}
	{%- unless sub_include -%} 
	</div>
	{%- endunless -%}
	