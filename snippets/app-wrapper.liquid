	{%- liquid
			
			
			-%}
	{%- liquid
	assign lv_props_arr = props | split: '-prsp-'
	for lv_prop in lv_props_arr
	assign lv_prop_and_value = lv_prop | split: '-kvsp-'
	assign lv_propName = lv_prop_and_value | first
	if lv_prop_and_value.size > 1
		assign lv_propValue = lv_prop_and_value | last | remove: '"'
	else
		assign lv_propValue = ''	
	endif
	if lv_propValue == '0'
		assign lv_propValue = lv_propValue | times: 1
	endif
	if lv_propValue contains '{' and lv_propValue contains '}'
	assign lv_propValue = lv_propValue | remove: '{' | remove: '}'
	assign lv_propValueArr = lv_propValue | split: ','
	for lv_entry in lv_propValueArr
	assign lv_key = lv_entry | split: ':' | first | strip | remove: '"'
	assign lv_value = lv_entry | split: ':' | last | strip | remove: '"'
	assign composite_key = lv_propName | append: '_' | append: lv_key
	
	endfor
	endif
	if lv_propName == 'cart' and cart == blank
		assign cart = lv_propValue
	endif
	endfor
	-%}
	
			{%- liquid
				assign slot_contents_and_values = slot_contents | split: '-scs-'
				for content_and_value in slot_contents_and_values
					assign module_and_slotname = content_and_value | split: '-scvs-' | first
					assign lv_module = module_and_slotname | split: '-smns-' | first
					assign lv_name = module_and_slotname | split: '-smns-' | last
					assign lv_value = content_and_value | split: '-scvs-' | last
					if lv_module == 'app-wrapper' and lv_name == 'header'
						assign slot_header_app-wrapper = lv_value | strip
					endif
					if lv_module == 'app-wrapper' and lv_name == 'footer'
						assign slot_footer_app-wrapper = lv_value | strip
					endif
					
					if lv_module == 'app-wrapper'
						assign slot_default_app-wrapper = lv_value | strip
					endif
				endfor
				-%}
	{%- unless sub_include -%} 
	<div  class="liquivelte-component app-wrapper svelte-15nwoa5" data-liquivelte-component-name="app-wrapper.liquivelte">
		{% assign component_include_count_slot_offset = 0 %}
		{% assign component_include_count = 0 %}
		{% assign component_include_depth = 0 %}
		<script> window.cicR = 0; </script>
	{%- endunless -%}
	




{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_App %}theme-kvsp-auto-prsp-autoDarkMode-kvsp-{true}-prsp-iosTranslucentBars-kvsp-{false}-prsp-iosTranslucentModals-kvsp-{false}-prsp-name-kvsp-My App-prsp-id-kvsp-com.demoapp.test-prsp-routes-kvsp-{routes}-prsp-viewMainClass-kvsp-mainview{% endcapture %}
{%- assign component_include_count_before_slots = component_include_count -%}


{%- capture slot_content_def_App -%}{% assign component_include_depth = component_include_depth | plus: 1 %}
  <div  class="appbar svelte-15nwoa5" use:persistingchild="{'header'}">
    <div liveslot="header">
      
	{%- if slot_header_app-wrapper != blank -%}
		{{- slot_header_app-wrapper -}}
	{%- endif -%}

    </div>
  </div>
  
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_View %}main-kvsp-1-prsp-classes-kvsp-mainview-prsp-browserHistoryInitialMatch-kvsp-{true}-prsp-loadInitialPage-kvsp-{false}-prsp-data-url-kvsp-{{ request.path }}-prsp-browserHistory-kvsp-{true}-prsp-browserHistorySeparator-kvsp-{""}-prsp-preloadPreviousPage-kvsp-{false}{% endcapture %}
{%- assign component_include_count_before_slots = component_include_count -%}


{%- capture slot_content_def_View -%}{% assign component_include_depth = component_include_depth | plus: 1 %}
    
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_Page %}name-kvsp-main-prsp-classes-kvsp-main-page{% endcapture %}
{%- assign component_include_count_before_slots = component_include_count -%}


{%- capture slot_content_def_Page -%}{% assign component_include_depth = component_include_depth | plus: 1 %}
      <div use:persistingchild="{'main'}">
        <div liveslot="main">
          
		{%- if slot_default_app-wrapper != blank -%}
			{{- slot_default_app-wrapper -}}
		{%- endif -%}
	
        </div>
      </div>
      <SearchNavbar bind:searchClosed="{searchClosed}"
        searchBarStatusChange="{searchBarStatusChange}" 
        />
    {%- endcapture -%}{% assign component_include_depth = component_include_depth | minus: 1 %}
{%- assign component_include_count_slot_offset = component_include_count | minus: component_include_count_before_slots -%}

{% assign modulename = basename | append: 'framework7-liquivelte-page' %}
{% assign slot_content_Page = slot_content_Page | append: '-scs-' | append: modulename | append: '-scvs-' | append: slot_content_def_Page %}
{% include modulename, liquivelte: true, props: props_Page, sub_include: true, slot_contents: slot_content_Page, basename: 'framework7-liquivelte-'  %}
{% assign slot_content_Page = '' %}
{% assign props = '' %}
  {%- endcapture -%}{% assign component_include_depth = component_include_depth | minus: 1 %}
{%- assign component_include_count_slot_offset = component_include_count | minus: component_include_count_before_slots -%}

{% assign modulename = basename | append: 'framework7-liquivelte-view' %}
{% assign slot_content_View = slot_content_View | append: '-scs-' | append: modulename | append: '-scvs-' | append: slot_content_def_View %}
{% include modulename, liquivelte: true, props: props_View, sub_include: true, slot_contents: slot_content_View, basename: 'framework7-liquivelte-' , data-url:  request.path  %}
{% assign slot_content_View = '' %}
{% assign props = '' %}
  
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_Toolbar %}position-kvsp-{'bottom'}-prsp-classes-kvsp-z-[5500] toolbar-bottom{% endcapture %}
{%- assign component_include_count_before_slots = component_include_count -%}


{%- capture slot_content_def_Toolbar -%}{% assign component_include_depth = component_include_depth | plus: 1 %}
    
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_Link %}{% endcapture %}
{%- assign component_include_count_before_slots = component_include_count -%}


{%- capture slot_content_def_Link -%}{% assign component_include_depth = component_include_depth | plus: 1 %} 
      
{% comment %}
  kvsp stands for "key value separator"
  prsp stands for "props separator"
{% endcomment %}
{% capture props_Icon %}name-kvsp-giftbox-prsp-width-kvsp-25-prsp-color-kvsp-green{% endcapture %}
{% assign modulename = basename | append: 'icon' %}
{% include modulename, liquivelte: true, props: props_Icon, sub_include: true, basename: ''  %}
{% assign props = '' %}
    {%- endcapture -%}{% assign component_include_depth = component_include_depth | minus: 1 %}
{%- assign component_include_count_slot_offset = component_include_count | minus: component_include_count_before_slots -%}

{% assign modulename = basename | append: 'framework7-liquivelte-link' %}
{% assign slot_content_Link = slot_content_Link | append: '-scs-' | append: modulename | append: '-scvs-' | append: slot_content_def_Link %}
{% include modulename, liquivelte: true, props: props_Link, sub_include: true, slot_contents: slot_content_Link, basename: 'framework7-liquivelte-'  %}
{% assign slot_content_Link = '' %}
{% assign props = '' %}
    
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_Link %}small-kvsp-1-prsp-popupOpen-kvsp-.cart-popup-prsp-classes-kvsp-display-flex z-[601] w-[72px]{% endcapture %}
{%- assign component_include_count_before_slots = component_include_count -%}


{%- capture slot_content_def_Link -%}{% assign component_include_depth = component_include_depth | plus: 1 %}
      <div  class="icon cart-icon svelte-15nwoa5">
        
{% comment %}
  kvsp stands for "key value separator"
  prsp stands for "props separator"
{% endcomment %}
{% capture props_Icon %}name-kvsp-icon-cart-prsp-width-kvsp-30-prsp-color-kvsp-white{% endcapture %}
{% assign modulename = basename | append: 'icon' %}
{% include modulename, liquivelte: true, props: props_Icon, sub_include: true, basename: ''  %}
{% assign props = '' %}
        {% if cart.items %}
          
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_Badge %}color-kvsp-green{% endcapture %}
{%- assign component_include_count_before_slots = component_include_count -%}


{%- capture slot_content_def_Badge -%}{% assign component_include_depth = component_include_depth | plus: 1 %} {{ cart.items.size }} {%- endcapture -%}{% assign component_include_depth = component_include_depth | minus: 1 %}
{%- assign component_include_count_slot_offset = component_include_count | minus: component_include_count_before_slots -%}

{% assign modulename = basename | append: 'framework7-liquivelte-badge' %}
{% assign slot_content_Badge = slot_content_Badge | append: '-scs-' | append: modulename | append: '-scvs-' | append: slot_content_def_Badge %}
{% include modulename, liquivelte: true, props: props_Badge, sub_include: true, slot_contents: slot_content_Badge, basename: 'framework7-liquivelte-'  %}
{% assign slot_content_Badge = '' %}
{% assign props = '' %}
        {% endif %} 
      </div>
    {%- endcapture -%}{% assign component_include_depth = component_include_depth | minus: 1 %}
{%- assign component_include_count_slot_offset = component_include_count | minus: component_include_count_before_slots -%}

{% assign modulename = basename | append: 'framework7-liquivelte-link' %}
{% assign slot_content_Link = slot_content_Link | append: '-scs-' | append: modulename | append: '-scvs-' | append: slot_content_def_Link %}
{% include modulename, liquivelte: true, props: props_Link, sub_include: true, slot_contents: slot_content_Link, basename: 'framework7-liquivelte-'  %}
{% assign slot_content_Link = '' %}
{% assign props = '' %}
    
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_Link %}{% endcapture %}
{%- assign component_include_count_before_slots = component_include_count -%}


{%- capture slot_content_def_Link -%}{% assign component_include_depth = component_include_depth | plus: 1 %} 
      
{% comment %}
  kvsp stands for "key value separator"
  prsp stands for "props separator"
{% endcomment %}
{% capture props_Icon %}name-kvsp-icon-account{% endcapture %}
{% assign modulename = basename | append: 'icon' %}
{% include modulename, liquivelte: true, props: props_Icon, sub_include: true, basename: ''  %}
{% assign props = '' %}
    {%- endcapture -%}{% assign component_include_depth = component_include_depth | minus: 1 %}
{%- assign component_include_count_slot_offset = component_include_count | minus: component_include_count_before_slots -%}

{% assign modulename = basename | append: 'framework7-liquivelte-link' %}
{% assign slot_content_Link = slot_content_Link | append: '-scs-' | append: modulename | append: '-scvs-' | append: slot_content_def_Link %}
{% include modulename, liquivelte: true, props: props_Link, sub_include: true, slot_contents: slot_content_Link, basename: 'framework7-liquivelte-'  %}
{% assign slot_content_Link = '' %}
{% assign props = '' %}
  {%- endcapture -%}{% assign component_include_depth = component_include_depth | minus: 1 %}
{%- assign component_include_count_slot_offset = component_include_count | minus: component_include_count_before_slots -%}

{% assign modulename = basename | append: 'framework7-liquivelte-toolbar' %}
{% assign slot_content_Toolbar = slot_content_Toolbar | append: '-scs-' | append: modulename | append: '-scvs-' | append: slot_content_def_Toolbar %}
{% include modulename, liquivelte: true, props: props_Toolbar, sub_include: true, slot_contents: slot_content_Toolbar, basename: 'framework7-liquivelte-'  %}
{% assign slot_content_Toolbar = '' %}
{% assign props = '' %}
  <div use:persistingchild="{'footer'}">
    <div liveslot="footer">
      
	{%- if slot_footer_app-wrapper != blank -%}
		{{- slot_footer_app-wrapper -}}
	{%- endif -%}

    </div>
  </div>
{%- endcapture -%}{% assign component_include_depth = component_include_depth | minus: 1 %}
{%- assign component_include_count_slot_offset = component_include_count | minus: component_include_count_before_slots -%}

{% assign modulename = basename | append: 'framework7-liquivelte-app' %}
{% assign slot_content_App = slot_content_App | append: '-scs-' | append: modulename | append: '-scvs-' | append: slot_content_def_App %}
{% include modulename, liquivelte: true, props: props_App, sub_include: true, slot_contents: slot_content_App, basename: 'framework7-liquivelte-'  %}
{% assign slot_content_App = '' %}
{% assign props = '' %}
	
	{%- liquid 
  assign cart_json = '{'
  assign cart_json = cart_json | append: '"attributes":'
  assign cart_attributes_json = cart.attributes | json
  assign cart_json = cart_json | append: cart_attributes_json
  assign cart_json = cart_json | append: ','
  assign cart_json = cart_json | append: '"cart_level_discount_applications":'
  assign cart_level_discount_applications_json = cart.cart_level_discount_applications | json
  assign cart_json = cart_json | append: cart_level_discount_applications_json
  assign cart_json = cart_json | append: ','
  assign cart_json = cart_json | append: '"currency":'
  assign cart_json = cart_json | append: '"' | append: cart.currency | append: '"'
  assign cart_json = cart_json | append: ','
  assign cart_json = cart_json | append: '"item_count":'
  assign cart_json = cart_json | append: '"' | append: cart.item_count | append: '"'
  assign cart_json = cart_json | append: ','
  assign cart_json = cart_json | append: '"items_subtotal_price":'
  assign cart_json = cart_json | append: '"' | append: cart.items_subtotal_price | append: '"'
  assign cart_json = cart_json | append: ','
  assign cart_json = cart_json | append: '"note":'
  assign cart_json = cart_json | append: '"' | append: cart.note | append: '"'
  assign cart_json = cart_json | append: ','
  assign cart_json = cart_json | append: '"original_total_price":'
  assign cart_json = cart_json | append: '"' | append: cart.original_total_price | append: '"'
  assign cart_json = cart_json | append: ','
  assign cart_json = cart_json | append: '"requires_shipping":'
  assign cart_json = cart_json | append: '"' | append: cart.requires_shipping | append: '"'
  assign cart_json = cart_json | append: ','
  assign cart_json = cart_json | append: '"total_discount":'
  assign cart_json = cart_json | append: '"' | append: cart.total_discount | append: '"'
  assign cart_json = cart_json | append: ','
  assign cart_json = cart_json | append: '"total_price":'
  assign cart_json = cart_json | append: '"' | append: cart.total_price | append: '"'
  assign cart_json = cart_json | append: ','
  assign cart_json = cart_json | append: '"total_weight":'
  assign cart_json = cart_json | append: '"' | append: cart.total_weight | append: '"'
  assign cart_json = cart_json | append: ','
  assign cart_json = cart_json | append: '"items": ['
  for item in cart.items
    assign item_json = item | json
    assign item_json = item_json | remove_last: '}'
    assign item_json = item_json | append: ',"product":'
    assign product_json = item.product | json
    assign item_json = item_json | append: product_json
    assign item_json = item_json | append: '}'

    assign cart_json = cart_json | append: item_json
    unless forloop.last
      assign cart_json = cart_json | append: ','
    endunless
  endfor
  assign cart_json = cart_json | append: ']'

  assign cart_json = cart_json | append: '}' 
-%}					
		
	<script type="text/noscript"  class="instance-data svelte-15nwoa5">
		{% assign component_include_count = component_include_count | plus: 1 %}
		{
	"cart": {{ cart_json }}
	,
	"requestƒƒpath": {{ request.path | json }}
		,
		"forloop_index": {{ forloop.index0 | default: 0 | json }},
		"component_index": {{ component_include_count | plus: component_include_depth }},
		"component_name": "app-wrapper"
	}</script>
	
	<script  class="liquivelte-prop-script svelte-15nwoa5">(() => {
	var propScript = Shopify.designMode && window.propScriptForDesignMode ? window.propScriptForDesignMode : document.currentScript;
	function parseProps(e){const s={};let t={bracketsOpened:0,get open(){return this.bracketsOpened>0},set open(e){!0===e?this.bracketsOpened=this.bracketsOpened+1:!1===e&&(this.bracketsOpened=this.bracketsOpened-1)}},a=` ${e} `.split(""),r=!1,c=!1,n=!1,p=!1,o="",b="";for(let e=0;e<a.length;e++){const k=a[e];switch(!0){case" "===k:p||t.open||(c=!1),!n||p||t.open||(n=!1);break;case"{"===k:t.open=!0,n||(c=!0);break;case"}"===k:t.open=!1;break;case'"'===k:p=!p;break;case"="===k:c&&(c=!1,n=!0,r=!0);break;case/[^\s]/.test(k):n||(c=!0)}!c||n||r?c||!n||r?c||n||(o&&(s[o]=b.replace(/^"/,"").replace(/"$/,"")),b="",o=""):b+=k:o+=k,r=!1}return Object.keys(s).map((e=>{if(/\{\s*\.\.\.(\w+)\s*\}/.test(e)){const[,t]=e.match(/\{\s*\.\.\.(\w+)\s*\}/);s.spread=t,delete s[e]}})),s}
	function JSONparse(n){try{return JSON.parse(n)}catch(t){try{const e=parseInt(t.message.match(/position\s+(\d+)/)[1],10),s=n.slice(0,e+1).split("\n"),i=s.length,l=n.split("\n"),r=s[s.length-1].length-1,c=l.slice(0,i).join("\n")+"\n"+new Array(r).fill(" ").join("")+"👆\n"+l.slice(i).join("\n");return console.log(c),{}}catch(n){throw t}}}
	function htmlDecode(input) {
	var doc = new DOMParser().parseFromString(input, "text/html");
	return doc.documentElement.textContent;
	}
	function componentWrapper(el) {
	if(el.classList.contains('liquivelte-component')) {
	return el;
	} else {
	return componentWrapper(el.parentElement);
	}
	}
	var wrapper = componentWrapper(propScript.parentElement);
	// console.log('wrapper', wrapper);
	// console.log('parsing props for svelte component');
	try{
		const themeImports = (JSONparse(propScript.previousElementSibling.textContent));
		wrapper.svelteProps = wrapper.svelteProps || {};
		Object.keys(themeImports).forEach(key => {
			if(key == 'forloop_index' || key == 'component_index' || key == 'component_name') return;
			wrapper.svelteProps[key] = [
				...(wrapper.svelteProps[key] || []),
				{ forloop_index: themeImports.index, component_index: themeImports.component_index, component_name: themeImports.component_name, value: themeImports[key] }
			];
		});
	} catch (e) {
	const err = 'There was an error';
	console.error('there was an error parsing props json', e);
	wrapper.svelteProps = { ...wrapper.svelteProps, error: (wrapper.svelteProps.error || '') + err};
	}
	
	

	// liquid expression cache
	[...wrapper.querySelectorAll('[liquivelte-value-cache]')].forEach(el => {
	let [filter, args, value] = el.getAttribute('liquivelte-value-cache').split('§');
	args = args.split(', ');
	args[0] = args[0].replace(/^"|\\|"$/g, '');
	wrapper.liquid_expression_cache = wrapper.liquid_expression_cache || {};
	wrapper.liquid_expression_cache[filter] = wrapper.liquid_expression_cache[filter] || new Map;
	wrapper.liquid_expression_cache[filter].set(`${args.join(',')}`, value);
	});

	if(propScript){
	propScript.remove();
	}
	if(propScript.previousElementSibling) {
	propScript.previousElementSibling.remove();
	}
	})();</script>
	{%- liquid
			
			
			-%}
	{%- liquid 
			assign slot_default_app-wrapper = null
			assign slot_header_app-wrapper = null
			assign slot_footer_app-wrapper = null
			
			-%}
	
	{%- unless sub_include -%} 
	</div>
	{% assign component_include_count = 0 %}
	{%- endunless -%}
	