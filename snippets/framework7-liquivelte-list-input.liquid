	{%- liquid
			
			
			assign classes = null
			assign sortable = null
			assign sortableOpposite = null
			assign media = null
			assign dropdown = null
			assign wrap = null
			assign input = null
			assign type = null
			assign name = null
			assign value = null
			assign inputmode = null
			assign readonly = null
			assign required = null
			assign disabled = null
			assign placeholder = null
			assign inputId = null
			assign size = null
			assign accept = null
			assign autocomplete = null
			assign autocorrect = null
			assign autocapitalize = null
			assign spellcheck = null
			assign autofocus = null
			assign autosave = null
			assign max = null
			assign min = null
			assign step = null
			assign maxlength = null
			assign minlength = null
			assign multiple = null
			assign inputStyle = null
			assign pattern = null
			assign validate = null
			assign validateOnBlur = null
			assign onValidate = null
			assign tabindex = null
			assign resizable = null
			assign clearButton = null
			assign noFormStoreData = null
			assign noStoreData = null
			assign ignoreStoreData = null
			assign errorMessage = null
			assign errorMessageForce = null
			assign info = null
			assign outline = null
			assign label = null
			assign inlineLabel = null
			assign floatingLabel = null
			assign calendarParams = null
			assign colorPickerParams = null
			assign textEditorParams = null
			-%}
	{%- liquid
	assign lv_props_arr = props | split: '-prsp-'
	for lv_prop in lv_props_arr
	assign lv_prop_and_value = lv_prop | split: '-kvsp-'
	assign lv_propName = lv_prop_and_value | first
	if lv_prop_and_value.size > 1
		assign lv_propValue = lv_prop_and_value | last | remove: '"'
	else
		assign lv_propValue = ''	
	endif
	if lv_propValue == '0'
		assign lv_propValue = lv_propValue | times: 1
	endif
	if lv_propValue contains '{' and lv_propValue contains '}'
	assign lv_propValue = lv_propValue | remove: '{' | remove: '}'
	assign lv_propValueArr = lv_propValue | split: ','
	for lv_entry in lv_propValueArr
	assign lv_key = lv_entry | split: ':' | first | strip | remove: '"'
	assign lv_value = lv_entry | split: ':' | last | strip | remove: '"'
	assign composite_key = lv_propName | append: '_' | append: lv_key
	
	endfor
	endif
	if lv_propName == 'classes'
		assign classes = lv_propValue
	endif
	if lv_propName == 'sortable'
		assign sortable = lv_propValue
	endif
	if lv_propName == 'sortableOpposite'
		assign sortableOpposite = lv_propValue
	endif
	if lv_propName == 'media'
		assign media = lv_propValue
	endif
	if lv_propName == 'dropdown'
		assign dropdown = lv_propValue
	endif
	if lv_propName == 'wrap'
		assign wrap = lv_propValue
	endif
	if lv_propName == 'input'
		assign input = lv_propValue
	endif
	if lv_propName == 'type'
		assign type = lv_propValue
	endif
	if lv_propName == 'name'
		assign name = lv_propValue
	endif
	if lv_propName == 'value'
		assign value = lv_propValue
	endif
	if lv_propName == 'inputmode'
		assign inputmode = lv_propValue
	endif
	if lv_propName == 'readonly'
		assign readonly = lv_propValue
	endif
	if lv_propName == 'required'
		assign required = lv_propValue
	endif
	if lv_propName == 'disabled'
		assign disabled = lv_propValue
	endif
	if lv_propName == 'placeholder'
		assign placeholder = lv_propValue
	endif
	if lv_propName == 'inputId'
		assign inputId = lv_propValue
	endif
	if lv_propName == 'size'
		assign size = lv_propValue
	endif
	if lv_propName == 'accept'
		assign accept = lv_propValue
	endif
	if lv_propName == 'autocomplete'
		assign autocomplete = lv_propValue
	endif
	if lv_propName == 'autocorrect'
		assign autocorrect = lv_propValue
	endif
	if lv_propName == 'autocapitalize'
		assign autocapitalize = lv_propValue
	endif
	if lv_propName == 'spellcheck'
		assign spellcheck = lv_propValue
	endif
	if lv_propName == 'autofocus'
		assign autofocus = lv_propValue
	endif
	if lv_propName == 'autosave'
		assign autosave = lv_propValue
	endif
	if lv_propName == 'max'
		assign max = lv_propValue
	endif
	if lv_propName == 'min'
		assign min = lv_propValue
	endif
	if lv_propName == 'step'
		assign step = lv_propValue
	endif
	if lv_propName == 'maxlength'
		assign maxlength = lv_propValue
	endif
	if lv_propName == 'minlength'
		assign minlength = lv_propValue
	endif
	if lv_propName == 'multiple'
		assign multiple = lv_propValue
	endif
	if lv_propName == 'inputStyle'
		assign inputStyle = lv_propValue
	endif
	if lv_propName == 'pattern'
		assign pattern = lv_propValue
	endif
	if lv_propName == 'validate'
		assign validate = lv_propValue
	endif
	if lv_propName == 'validateOnBlur'
		assign validateOnBlur = lv_propValue
	endif
	if lv_propName == 'onValidate'
		assign onValidate = lv_propValue
	endif
	if lv_propName == 'tabindex'
		assign tabindex = lv_propValue
	endif
	if lv_propName == 'resizable'
		assign resizable = lv_propValue
	endif
	if lv_propName == 'clearButton'
		assign clearButton = lv_propValue
	endif
	if lv_propName == 'noFormStoreData'
		assign noFormStoreData = lv_propValue
	endif
	if lv_propName == 'noStoreData'
		assign noStoreData = lv_propValue
	endif
	if lv_propName == 'ignoreStoreData'
		assign ignoreStoreData = lv_propValue
	endif
	if lv_propName == 'errorMessage'
		assign errorMessage = lv_propValue
	endif
	if lv_propName == 'errorMessageForce'
		assign errorMessageForce = lv_propValue
	endif
	if lv_propName == 'info'
		assign info = lv_propValue
	endif
	if lv_propName == 'outline'
		assign outline = lv_propValue
	endif
	if lv_propName == 'label'
		assign label = lv_propValue
	endif
	if lv_propName == 'inlineLabel'
		assign inlineLabel = lv_propValue
	endif
	if lv_propName == 'floatingLabel'
		assign floatingLabel = lv_propValue
	endif
	if lv_propName == 'calendarParams'
		assign calendarParams = lv_propValue
	endif
	if lv_propName == 'colorPickerParams'
		assign colorPickerParams = lv_propValue
	endif
	if lv_propName == 'textEditorParams'
		assign textEditorParams = lv_propValue
	endif
	endfor
	-%}
	
			{%- liquid
				assign slot_contents_and_values = slot_contents | split: '-scs-'
				for content_and_value in slot_contents_and_values
					assign module_and_slotname = content_and_value | split: '-scvs-' | first
					assign lv_module = module_and_slotname | split: '-smns-' | first
					assign lv_name = module_and_slotname | split: '-smns-' | last
					assign lv_value = content_and_value | split: '-scvs-' | last
					if lv_module == 'framework7-liquivelte-list-input' and lv_name == 'root-start'
						assign slot_root-start_framework7-liquivelte_list-input = lv_value | strip
					endif
					if lv_module == 'framework7-liquivelte-list-input' and lv_name == 'content-start'
						assign slot_content-start_framework7-liquivelte_list-input = lv_value | strip
					endif
					if lv_module == 'framework7-liquivelte-list-input' and lv_name == 'media'
						assign slot_media_framework7-liquivelte_list-input = lv_value | strip
					endif
					if lv_module == 'framework7-liquivelte-list-input' and lv_name == 'inner-start'
						assign slot_inner-start_framework7-liquivelte_list-input = lv_value | strip
					endif
					if lv_module == 'framework7-liquivelte-list-input' and lv_name == 'label'
						assign slot_label_framework7-liquivelte_list-input = lv_value | strip
					endif
					if lv_module == 'framework7-liquivelte-list-input' and lv_name == 'input'
						assign slot_input_framework7-liquivelte_list-input = lv_value | strip
					endif
					if lv_module == 'framework7-liquivelte-list-input' and lv_name == 'error-message'
						assign slot_error-message_framework7-liquivelte_list-input = lv_value | strip
					endif
					if lv_module == 'framework7-liquivelte-list-input' and lv_name == 'info'
						assign slot_info_framework7-liquivelte_list-input = lv_value | strip
					endif
					if lv_module == 'framework7-liquivelte-list-input' and lv_name == 'inner'
						assign slot_inner_framework7-liquivelte_list-input = lv_value | strip
					endif
					if lv_module == 'framework7-liquivelte-list-input' and lv_name == 'inner-end'
						assign slot_inner-end_framework7-liquivelte_list-input = lv_value | strip
					endif
					if lv_module == 'framework7-liquivelte-list-input' and lv_name == 'content'
						assign slot_content_framework7-liquivelte_list-input = lv_value | strip
					endif
					if lv_module == 'framework7-liquivelte-list-input' and lv_name == 'content-end'
						assign slot_content-end_framework7-liquivelte_list-input = lv_value | strip
					endif
					if lv_module == 'framework7-liquivelte-list-input' and lv_name == 'root'
						assign slot_root_framework7-liquivelte_list-input = lv_value | strip
					endif
					if lv_module == 'framework7-liquivelte-list-input' and lv_name == 'root-end'
						assign slot_root-end_framework7-liquivelte_list-input = lv_value | strip
					endif
					if lv_module == 'framework7-liquivelte-list-input' and lv_name == 'content-start'
						assign slot_content-start_framework7-liquivelte_list-input = lv_value | strip
					endif
					if lv_module == 'framework7-liquivelte-list-input' and lv_name == 'media'
						assign slot_media_framework7-liquivelte_list-input = lv_value | strip
					endif
					if lv_module == 'framework7-liquivelte-list-input' and lv_name == 'inner-start'
						assign slot_inner-start_framework7-liquivelte_list-input = lv_value | strip
					endif
					if lv_module == 'framework7-liquivelte-list-input' and lv_name == 'label'
						assign slot_label_framework7-liquivelte_list-input = lv_value | strip
					endif
					if lv_module == 'framework7-liquivelte-list-input' and lv_name == 'input'
						assign slot_input_framework7-liquivelte_list-input = lv_value | strip
					endif
					if lv_module == 'framework7-liquivelte-list-input' and lv_name == 'error-message'
						assign slot_error-message_framework7-liquivelte_list-input = lv_value | strip
					endif
					if lv_module == 'framework7-liquivelte-list-input' and lv_name == 'info'
						assign slot_info_framework7-liquivelte_list-input = lv_value | strip
					endif
					if lv_module == 'framework7-liquivelte-list-input' and lv_name == 'inner'
						assign slot_inner_framework7-liquivelte_list-input = lv_value | strip
					endif
					if lv_module == 'framework7-liquivelte-list-input' and lv_name == 'inner-end'
						assign slot_inner-end_framework7-liquivelte_list-input = lv_value | strip
					endif
					if lv_module == 'framework7-liquivelte-list-input' and lv_name == 'content'
						assign slot_content_framework7-liquivelte_list-input = lv_value | strip
					endif
					if lv_module == 'framework7-liquivelte-list-input' and lv_name == 'content-end'
						assign slot_content-end_framework7-liquivelte_list-input = lv_value | strip
					endif
					
					if lv_module == 'framework7-liquivelte-list-input'
						assign slot_default_framework7-liquivelte_list-input = lv_value | strip
					endif
				endfor
				-%}
	{%- unless sub_include -%} 
	<div class="liquivelte-component list-input" data-liquivelte-component-name="list-input.liquivelte">
	{%- endunless -%}
	

<!-- svelte-ignore a11y-autofocus -->
<!-- svelte-ignore a11y-missing-attribute -->
{% if wrap %}
  <li class="{{ classes }}" {...restProps($$restProps)}>
    
	{%- if slot_root-start_framework7-liquivelte_list-input != blank -%}
		{{- slot_root-start_framework7-liquivelte_list-input -}}
	{%- endif -%}

    <div class="item-content item-input {{ itemContentClasses }}">
      
	{%- if slot_content-start_framework7-liquivelte_list-input != blank -%}
		{{- slot_content-start_framework7-liquivelte_list-input -}}
	{%- endif -%}

      {% if isSortable and isSortableOpposite %}
        <div class="sortable-handler" />
      {% endif %}

      {% if media or hasMediaSlots %}
        <div class="item-media">
          {% if media != blank %}<img src={media} />{% endif %}
          
	{%- if slot_media_framework7-liquivelte_list-input != blank -%}
		{{- slot_media_framework7-liquivelte_list-input -}}
	{%- endif -%}

        </div>
      {% endif %}
      <div class="item-inner">
        
	{%- if slot_inner-start_framework7-liquivelte_list-input != blank -%}
		{{- slot_inner-start_framework7-liquivelte_list-input -}}
	{%- endif -%}

        {% if label != blank or hasLabelSlots %}
          <div class="item-title item-label {{ labelClasses }}">
            {{ label | default: '' }}
            
	{%- if slot_label_framework7-liquivelte_list-input != blank -%}
		{{- slot_label_framework7-liquivelte_list-input -}}
	{%- endif -%}

          </div>
        {% endif %}
        <div class="item-input-wrap {{ inputWrapClasses }}">
          {% if input %}
            {% if type == 'select' %}
              <select
                bind:this="{inputEl}"
                style="{inputStyle}"
                name="{name}"
                placeholder="{{ placeholder }}"
                id="{inputId}"
                {size}
                {accept}
                {autocomplete}
                {autocorrect}
                {autocapitalize}
                {spellcheck}
                {autofocus}
                {autosave}
                {disabled}
                {max}
                {maxlength}
                {min}
                {minlength}
                {step}
                {multiple}
                {readonly}
                {required}
                {pattern}
                validate="{typeof validate === 'string' && validate.length ? validate : undefined}"
                data-validate="{validate === true ||
                validate === '' ||
                validateOnBlur === true ||
                validateOnBlur === ''
                  ? true
                  : undefined}"
                data-validate-on-blur="{validateOnBlur === true || validateOnBlur === ''
                  ? true
                  : undefined}"
                {tabindex}
                data-error-message="{errorMessageForce ? undefined : errorMessage}"
                class="{inputClasses}"
                on:focus="{onFocus}"
                on:blur="{onBlur}"
                on:input="{onInput}"
                on:change="{onChange}"
                value="{inputValue}"
              >
                
		{%- if slot_default_framework7-liquivelte_list-input != blank -%}
			{{- slot_default_framework7-liquivelte_list-input -}}
		{%- endif -%}
	
              </select>
            {% elsif type == 'textarea' %}
              <textarea
                bind:this="{inputEl}"
                style="{inputStyle}"
                {name}
                {placeholder}
                id="{inputId}"
                {size}
                {inputmode}
                {accept}
                {autocomplete}
                {autocorrect}
                {autocapitalize}
                {spellcheck}
                {autofocus}
                {autosave}
                {disabled}
                {max}
                {maxlength}
                {min}
                {minlength}
                {step}
                {multiple}
                {readonly}
                {required}
                {pattern}
                validate="{typeof validate === 'string' && validate.length ? validate : undefined}"
                data-validate="{validate === true ||
                validate === '' ||
                validateOnBlur === true ||
                validateOnBlur === ''
                  ? true
                  : undefined}"
                data-validate-on-blur="{validateOnBlur === true || validateOnBlur === ''
                  ? true
                  : undefined}"
                {tabindex}
                data-error-message="{errorMessageForce ? undefined : errorMessage}"
                class="{inputClasses}"
                on:focus="{onFocus}"
                on:blur="{onBlur}"
                on:input="{onInput}"
                on:change="{onChange}"
                value="{inputValue}"
              />
            {% elsif type == 'texteditor' %}
              
{% comment %}
  kvsp stands for "key value separator"
  prsp stands for "props separator"
{% endcomment %}
{% capture props_TextEditor %}value-kvsp-{typeof value === 'undefined' ? '' : value}-prsp-{resizable}-kvsp-1-prsp-{placeholder}-kvsp-1-prsp-onTextEditorFocus-kvsp-{onFocus}-prsp-onTextEditorBlur-kvsp-{onBlur}-prsp-onTextEditorInput-kvsp-{onInput}-prsp-onTextEditorChange-kvsp-{onChange}{% endcapture %}
{% assign modulename = basename | append: 'text-editor' %}
{% include modulename, liquivelte: true, props: props_TextEditor, sub_include: true, basename: '' %}
{% assign props = '' %}
            {% else %}
              <input
                bind:this="{inputEl}"
                style="{inputStyle}"
                {name}
                type="{inputType}"
                {inputmode}
                {placeholder}
                id="{inputId}"
                {size}
                {accept}
                {autocomplete}
                {autocorrect}
                {autocapitalize}
                {spellcheck}
                {autofocus}
                {autosave}
                {disabled}
                {max}
                {maxlength}
                {min}
                {minlength}
                {step}
                {multiple}
                {readonly}
                {required}
                {pattern}
                validate="{typeof validate === 'string' && validate.length ? validate : undefined}"
                data-validate="{validate === true ||
                validate === '' ||
                validateOnBlur === true ||
                validateOnBlur === ''
                  ? true
                  : undefined}"
                data-validate-on-blur="{validateOnBlur === true || validateOnBlur === ''
                  ? true
                  : undefined}"
                tabIndex="{tabindex}"
                data-error-message="{errorMessageForce ? undefined : errorMessage}"
                class="{inputClasses}"
                on:focus="{onFocus}"
                on:blur="{onBlur}"
                on:input="{onInput}"
                on:change="{onChange}"
                value="{type === 'datepicker' || type === 'colorpicker' || type === 'file'
                  ? ''
                  : inputValue}"
              />
            {% endif %}
          {% endif %}
          
	{%- if slot_input_framework7-liquivelte_list-input != blank -%}
		{{- slot_input_framework7-liquivelte_list-input -}}
	{%- endif -%}

          {% if hasErrorMessage && errorMessageForce %}
            <div class="item-input-error-message">
              {{ errorMessage | default: '' }}
              
	{%- if slot_error-message_framework7-liquivelte_list-input != blank -%}
		{{- slot_error-message_framework7-liquivelte_list-input -}}
	{%- endif -%}

            </div>
          {% endif %}
          {% if clearButton %}<span class="input-clear-button" />{% endif %}
          {% if info != blank or hasInfoSlots %}
            <div class="item-input-info">
              {{ info | default: '' }}
              
	{%- if slot_info_framework7-liquivelte_list-input != blank -%}
		{{- slot_info_framework7-liquivelte_list-input -}}
	{%- endif -%}

            </div>
          {% endif %}
        </div>
        
	{%- if slot_inner_framework7-liquivelte_list-input != blank -%}
		{{- slot_inner_framework7-liquivelte_list-input -}}
	{%- endif -%}

        
	{%- if slot_inner-end_framework7-liquivelte_list-input != blank -%}
		{{- slot_inner-end_framework7-liquivelte_list-input -}}
	{%- endif -%}

      </div>
      
	{%- if slot_content_framework7-liquivelte_list-input != blank -%}
		{{- slot_content_framework7-liquivelte_list-input -}}
	{%- endif -%}

      
	{%- if slot_content-end_framework7-liquivelte_list-input != blank -%}
		{{- slot_content-end_framework7-liquivelte_list-input -}}
	{%- endif -%}

    </div>
    {% if isSortable and isSortableOpposite == blank %}
      <div class="sortable-handler" />
    {% endif %}
    
	{%- if slot_root_framework7-liquivelte_list-input != blank -%}
		{{- slot_root_framework7-liquivelte_list-input -}}
	{%- endif -%}

    
	{%- if slot_root-end_framework7-liquivelte_list-input != blank -%}
		{{- slot_root-end_framework7-liquivelte_list-input -}}
	{%- endif -%}

  </li>
{% else %}
  <div class="{itemContentClasses}" {...restProps($$restProps)}>
    
	{%- if slot_content-start_framework7-liquivelte_list-input != blank -%}
		{{- slot_content-start_framework7-liquivelte_list-input -}}
	{%- endif -%}

    {% if isSortable and isSortableOpposite %}
      <div class="sortable-handler" />
    {% endif %}

    {% if media or hasMediaSlots %}
      <div class="item-media">
        {% if media != blank %}<img src={media} />{% endif %}
        
	{%- if slot_media_framework7-liquivelte_list-input != blank -%}
		{{- slot_media_framework7-liquivelte_list-input -}}
	{%- endif -%}

      </div>
    {% endif %}
    <div class="item-inner">
      
	{%- if slot_inner-start_framework7-liquivelte_list-input != blank -%}
		{{- slot_inner-start_framework7-liquivelte_list-input -}}
	{%- endif -%}

      {% if label != blank or hasLabelSlots %}
        <div class="item-title item-label {{ labelClasses }}">
          {{ label | default: '' }}
          
	{%- if slot_label_framework7-liquivelte_list-input != blank -%}
		{{- slot_label_framework7-liquivelte_list-input -}}
	{%- endif -%}

        </div>
      {% endif %}
      <div class="item-input-wrap {{ inputWrapClasses }}">
        {% if input %}
          {% if type == 'select' %}
            <select
              bind:this="{inputEl}"
              style="{inputStyle}"
              {name}
              {placeholder}
              id="{inputId}"
              {size}
              {accept}
              {autocomplete}
              {autocorrect}
              {autocapitalize}
              {spellcheck}
              {autofocus}
              {autosave}
              {disabled}
              {max}
              {maxlength}
              {min}
              {minlength}
              {step}
              {multiple}
              {readonly}
              {required}
              {pattern}
              validate="{typeof validate === 'string' && validate.length ? validate : undefined}"
              data-validate="{validate === true ||
              validate === '' ||
              validateOnBlur === true ||
              validateOnBlur === ''
                ? true
                : undefined}"
              data-validate-on-blur="{validateOnBlur === true || validateOnBlur === ''
                ? true
                : undefined}"
              {tabindex}
              data-error-message="{errorMessageForce ? undefined : errorMessage}"
              class="{inputClasses}"
              on:focus="{onFocus}"
              on:blur="{onBlur}"
              on:input="{onInput}"
              on:change="{onChange}"
              value="{inputValue}"
            >
              
		{%- if slot_default_framework7-liquivelte_list-input != blank -%}
			{{- slot_default_framework7-liquivelte_list-input -}}
		{%- endif -%}
	
            </select>
          {% elsif type == 'textarea' %}
            <textarea
              bind:this="{inputEl}"
              style="{inputStyle}"
              {name}
              {placeholder}
              id="{inputId}"
              {size}
              {inputmode}
              {accept}
              {autocomplete}
              {autocorrect}
              {autocapitalize}
              {spellcheck}
              {autofocus}
              {autosave}
              {disabled}
              {max}
              {maxlength}
              {min}
              {minlength}
              {step}
              {multiple}
              {readonly}
              {required}
              {pattern}
              validate="{typeof validate === 'string' && validate.length ? validate : undefined}"
              data-validate="{validate === true ||
              validate === '' ||
              validateOnBlur === true ||
              validateOnBlur === ''
                ? true
                : undefined}"
              data-validate-on-blur="{validateOnBlur === true || validateOnBlur === ''
                ? true
                : undefined}"
              {tabindex}
              data-error-message="{errorMessageForce ? undefined : errorMessage}"
              class="{inputClasses}"
              on:focus="{onFocus}"
              on:blur="{onBlur}"
              on:input="{onInput}"
              on:change="{onChange}"
              value="{inputValue}"
            />
          {% elsif type == 'texteditor' %}
            
{% comment %}
  kvsp stands for "key value separator"
  prsp stands for "props separator"
{% endcomment %}
{% capture props_TextEditor %}value-kvsp-{typeof value === 'undefined' ? '' : value}-prsp-{resizable}-kvsp-1-prsp-{placeholder}-kvsp-1-prsp-onTextEditorFocus-kvsp-{onFocus}-prsp-onTextEditorBlur-kvsp-{onBlur}-prsp-onTextEditorInput-kvsp-{onInput}-prsp-onTextEditorChange-kvsp-{onChange}{% endcapture %}
{% assign modulename = basename | append: 'text-editor' %}
{% include modulename, liquivelte: true, props: props_TextEditor, sub_include: true, basename: '' %}
{% assign props = '' %}
          {% else %}
            <input
              bind:this="{inputEl}"
              style="{inputStyle}"
              {name}
              type="{inputType}"
              {inputmode}
              {placeholder}
              id="{inputId}"
              {size}
              {accept}
              {autocomplete}
              {autocorrect}
              {autocapitalize}
              {spellcheck}
              {autofocus}
              {autosave}
              {disabled}
              {max}
              {maxlength}
              {min}
              {minlength}
              {step}
              {multiple}
              {readonly}
              {required}
              {pattern}
              validate="{typeof validate === 'string' && validate.length ? validate : undefined}"
              data-validate="{validate === true ||
              validate === '' ||
              validateOnBlur === true ||
              validateOnBlur === ''
                ? true
                : undefined}"
              data-validate-on-blur="{validateOnBlur === true || validateOnBlur === ''
                ? true
                : undefined}"
              tabIndex="{tabindex}"
              data-error-message="{errorMessageForce ? undefined : errorMessage}"
              class="{inputClasses}"
              on:focus="{onFocus}"
              on:blur="{onBlur}"
              on:input="{onInput}"
              on:change="{onChange}"
              value="{type === 'datepicker' || type === 'colorpicker' || type === 'file'
                ? ''
                : inputValue}"
            />
          {% endif %}
        {% endif %}
        
	{%- if slot_input_framework7-liquivelte_list-input != blank -%}
		{{- slot_input_framework7-liquivelte_list-input -}}
	{%- endif -%}

        {% if hasErrorMessage and errorMessageForce %}
          <div class="item-input-error-message">
            {{ errorMessage | default: '' }}
            
	{%- if slot_error-message_framework7-liquivelte_list-input != blank -%}
		{{- slot_error-message_framework7-liquivelte_list-input -}}
	{%- endif -%}

          </div>
        {% endif %}
        {% if clearButton %}<span class="input-clear-button" />{% endif %}
        {% if info != blank or hasInfoSlots %}
          <div class="item-input-info">
            {{ info | default: '' }}
            
	{%- if slot_info_framework7-liquivelte_list-input != blank -%}
		{{- slot_info_framework7-liquivelte_list-input -}}
	{%- endif -%}

          </div>
        {% endif %}
      </div>
      
	{%- if slot_inner_framework7-liquivelte_list-input != blank -%}
		{{- slot_inner_framework7-liquivelte_list-input -}}
	{%- endif -%}

      
	{%- if slot_inner-end_framework7-liquivelte_list-input != blank -%}
		{{- slot_inner-end_framework7-liquivelte_list-input -}}
	{%- endif -%}

    </div>
    
	{%- if slot_content_framework7-liquivelte_list-input != blank -%}
		{{- slot_content_framework7-liquivelte_list-input -}}
	{%- endif -%}

    
	{%- if slot_content-end_framework7-liquivelte_list-input != blank -%}
		{{- slot_content-end_framework7-liquivelte_list-input -}}
	{%- endif -%}

  </div>
{% endif %}

	
						
						
	<script type="text/noscript" class="instance-data">{
	
	
	
	}</script>
	
	<script class="liquivelte-prop-script">(() => {
	var propScript = Shopify.designMode && window.propScriptForDesignMode ? window.propScriptForDesignMode : document.currentScript;
	function parseProps(e){const s={};let t={bracketsOpened:0,get open(){return this.bracketsOpened>0},set open(e){!0===e?this.bracketsOpened=this.bracketsOpened+1:!1===e&&(this.bracketsOpened=this.bracketsOpened-1)}},a=` ${e} `.split(""),r=!1,c=!1,n=!1,p=!1,o="",b="";for(let e=0;e<a.length;e++){const k=a[e];switch(!0){case" "===k:p||t.open||(c=!1),!n||p||t.open||(n=!1);break;case"{"===k:t.open=!0,n||(c=!0);break;case"}"===k:t.open=!1;break;case'"'===k:p=!p;break;case"="===k:c&&(c=!1,n=!0,r=!0);break;case/[^\s]/.test(k):n||(c=!0)}!c||n||r?c||!n||r?c||n||(o&&(s[o]=b.replace(/^"/,"").replace(/"$/,"")),b="",o=""):b+=k:o+=k,r=!1}return Object.keys(s).map((e=>{if(/\{\s*\.\.\.(\w+)\s*\}/.test(e)){const[,t]=e.match(/\{\s*\.\.\.(\w+)\s*\}/);s.spread=t,delete s[e]}})),s}
	function JSONparse(n){try{return JSON.parse(n)}catch(t){try{const e=parseInt(t.message.match(/position\s+(\d+)/)[1],10),s=n.slice(0,e+1).split("\n"),i=s.length,l=n.split("\n"),r=s[s.length-1].length-1,c=l.slice(0,i).join("\n")+"\n"+new Array(r).fill(" ").join("")+"👆\n"+l.slice(i).join("\n");return console.log(c),{}}catch(n){throw t}}}
	function htmlDecode(input) {
	var doc = new DOMParser().parseFromString(input, "text/html");
	return doc.documentElement.textContent;
	}
	function componentWrapper(el) {
	if(el.classList.contains('liquivelte-component')) {
	return el;
	} else {
	return componentWrapper(el.parentElement);
	}
	}
	var wrapper = componentWrapper(propScript.parentElement);
	// console.log('wrapper', wrapper);
	// console.log('parsing props for svelte component');
	try{
	wrapper.svelteProps = { ...(wrapper.svelteProps || {}), ...(JSONparse(propScript.previousElementSibling.textContent)) };
	} catch (e) {
	const err = 'There was an error';
	console.error('there was an error parsing props json', e);
	wrapper.svelteProps = { ...wrapper.svelteProps, error: (wrapper.svelteProps.error || '') + err};
	}
	
	

	// liquid expression cache
	[...wrapper.querySelectorAll('[liquivelte-value-cache]')].forEach(el => {
	let [filter, args, value] = el.getAttribute('liquivelte-value-cache').split('§');
	args = args.split(', ');
	args[0] = args[0].replace(/^"|\\|"$/g, '');
	wrapper.liquid_expression_cache = wrapper.liquid_expression_cache || {};
	wrapper.liquid_expression_cache[filter] = wrapper.liquid_expression_cache[filter] || new Map;
	wrapper.liquid_expression_cache[filter].set(`${args.join(',')}`, value);
	});

	if(propScript){
	propScript.remove();
	}
	if(propScript.previousElementSibling) {
	propScript.previousElementSibling.remove();
	}
	})();</script>
	{%- liquid
			
			
			assign classes = null
			assign sortable = null
			assign sortableOpposite = null
			assign media = null
			assign dropdown = null
			assign wrap = null
			assign input = null
			assign type = null
			assign name = null
			assign value = null
			assign inputmode = null
			assign readonly = null
			assign required = null
			assign disabled = null
			assign placeholder = null
			assign inputId = null
			assign size = null
			assign accept = null
			assign autocomplete = null
			assign autocorrect = null
			assign autocapitalize = null
			assign spellcheck = null
			assign autofocus = null
			assign autosave = null
			assign max = null
			assign min = null
			assign step = null
			assign maxlength = null
			assign minlength = null
			assign multiple = null
			assign inputStyle = null
			assign pattern = null
			assign validate = null
			assign validateOnBlur = null
			assign onValidate = null
			assign tabindex = null
			assign resizable = null
			assign clearButton = null
			assign noFormStoreData = null
			assign noStoreData = null
			assign ignoreStoreData = null
			assign errorMessage = null
			assign errorMessageForce = null
			assign info = null
			assign outline = null
			assign label = null
			assign inlineLabel = null
			assign floatingLabel = null
			assign calendarParams = null
			assign colorPickerParams = null
			assign textEditorParams = null
			-%}
	{%- liquid 
			assign slot_default_framework7-liquivelte_list-input = null
			assign slot_root-start_framework7-liquivelte_list-input = null
			assign slot_content-start_framework7-liquivelte_list-input = null
			assign slot_media_framework7-liquivelte_list-input = null
			assign slot_inner-start_framework7-liquivelte_list-input = null
			assign slot_label_framework7-liquivelte_list-input = null
			assign slot_input_framework7-liquivelte_list-input = null
			assign slot_error-message_framework7-liquivelte_list-input = null
			assign slot_info_framework7-liquivelte_list-input = null
			assign slot_inner_framework7-liquivelte_list-input = null
			assign slot_inner-end_framework7-liquivelte_list-input = null
			assign slot_content_framework7-liquivelte_list-input = null
			assign slot_content-end_framework7-liquivelte_list-input = null
			assign slot_root_framework7-liquivelte_list-input = null
			assign slot_root-end_framework7-liquivelte_list-input = null
			assign slot_content-start_framework7-liquivelte_list-input = null
			assign slot_media_framework7-liquivelte_list-input = null
			assign slot_inner-start_framework7-liquivelte_list-input = null
			assign slot_label_framework7-liquivelte_list-input = null
			assign slot_input_framework7-liquivelte_list-input = null
			assign slot_error-message_framework7-liquivelte_list-input = null
			assign slot_info_framework7-liquivelte_list-input = null
			assign slot_inner_framework7-liquivelte_list-input = null
			assign slot_inner-end_framework7-liquivelte_list-input = null
			assign slot_content_framework7-liquivelte_list-input = null
			assign slot_content-end_framework7-liquivelte_list-input = null
			
			-%}
	{%- unless sub_include -%} 
	</div>
	{%- endunless -%}
	