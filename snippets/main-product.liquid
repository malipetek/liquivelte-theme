
{%- liquid
	assign props_arr = props | split: '-prsp-'
	for prop in props_arr
		assign propName = prop | split: '-kvsp-' | first
		assign propValue = prop | split: '-kvsp-' | last | remove: '"'
		if propValue contains '{' and propValue contains '}'
			assign propValue = propValue | remove: '{' | remove: '}'
			assign propValueArr = propValue | split: ','
			for entry in propValueArr
				assign key = entry | split: ':' | first | strip | remove: '"'
				assign value = entry | split: ':' | last | strip | remove: '"'
				assign composite_key = propName | append: '_' | append: key
			
			endfor
		endif
	endfor
-%}
	{%- unless sub_include -%} 
		<div  class="liquivelte-component main-product svelte-2ur791">
	{%- endunless -%}



{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props %}bind:title-kvsp-"{title}"{% endcapture %}

{% capture slot_content_ProductTitle %}
    {% if product.available %}
      <Bagde> Available </Bagde>
    {% endif %}
{% endcapture %}
{% assign slot_contents = slot_contents | append: '-scs-' | append: 'product-title' | append: '-scvs-' | append: slot_content_ProductTitle %}

{% include 'liquivelte', module: 'product-title', props: props, sub_include: true %}
{% assign props = '' %}

{% for image in product.images %}
    {% assign index = forloop.index0 %}
  <div  class="icon svelte-2ur791"> 
    
    {%- capture rawinclude -%}{% include 'icon-pin'  %}{%- endcapture -%}
  <script liquivelte-keep>
  window.liquivelte_rawincludes = window.liquivelte_rawincludes || {};
  window.liquivelte_rawincludes['rawinclude_5b6b3cdffe9'] = [...(window.liquivelte_rawincludes['rawinclude_5b6b3cdffe9'] || []),`{{ rawinclude | escape | strip_newlines }}`];
  document.currentScript.remove();
</script>
  {%- assign rawinclude = '' -%}
  </div> 
{% endfor %}

{% capture form_content %}
    {% form 'product', product %}%FC%{% endform %}
    {% endcapture %}
    {% liquid 
      assign form_props = form_content | split: '<form' | last | split: '>' | first
      assign additional_inputs = ''
      assign pieces = form_content | split: '>'
      for piece in pieces
        if piece contains '<input'
          assign additional_inputs = additional_inputs | append: piece | append: '>'
        endif
      endfor
    %}
  <form  class="form svelte-2ur791"  product {{- form_props -}}>
  {{- additional_inputs -}}
  <script liquivelte-keep> 
    window.liquivelte_form_inputs = window.liquivelte_form_inputs || {};
    window.liquivelte_form_props = window.liquivelte_form_props || {};
    window.liquivelte_form_inputs['form_inputs_f25b6b3cdffe'] = [...(window.liquivelte_form_inputs['form_inputs_f25b6b3cdffe'] || []),`{{ additional_inputs | escape }}`];
    window.liquivelte_form_props['form_props_f25b6b3cdffe'] = [...(window.liquivelte_form_props['form_props_f25b6b3cdffe'] || []),`{{ form_props }}`];
    document.currentScript.remove();
  </script>
  {% assign additional_inputs = '' %}
  <div  class="icon svelte-2ur791">
    
    {%- capture rawinclude -%}{% include 'icon-close'  %}{%- endcapture -%}
  <script liquivelte-keep>
  window.liquivelte_rawincludes = window.liquivelte_rawincludes || {};
  window.liquivelte_rawincludes['rawinclude_b6b3cdffe99'] = [...(window.liquivelte_rawincludes['rawinclude_b6b3cdffe99'] || []),`{{ rawinclude | escape | strip_newlines }}`];
  document.currentScript.remove();
</script>
  {%- assign rawinclude = '' -%}
  </div>
  <input bind:value="{title}" type="text" />
  <input type="button" value="Add to cart" on:click="{ () _afeq__afct_ window.alert('hydrated') }" />
  <button type="button" on:click="{alertValue}"> Click Meh </button>
</form>


<script type="text/noscript"  class="instance-data svelte-2ur791">{
			"product" : {{ product | json }} 
			,
			"product$title": {{ product.title | json }} , "shop$name": {{ shop.name | json }} , "product$id": {{ product.id | json }} 
			}</script>

<script>(() => {
	var propScript = Shopify.designMode && window.propScriptForDesignMode ? window.propScriptForDesignMode : document.currentScript;
	function parseProps(e){const s={};let t={bracketsOpened:0,get open(){return this.bracketsOpened>0},set open(e){!0===e?this.bracketsOpened=this.bracketsOpened+1:!1===e&&(this.bracketsOpened=this.bracketsOpened-1)}},a=` ${e} `.split(""),n=!1,c=!1,r=!1,p=!1,b="",k="";for(let e=0;e<a.length;e++){const o=a[e];switch(!0){case" "===o:p||t.open||(c=!1),!r||p||t.open||(r=!1);break;case"{"===o:t.open=!0,r||(c=!0);break;case"}"===o:t.open=!1;break;case'"'===o:p=!p;break;case"="===o:c&&(c=!1,r=!0,n=!0);break;case/[^\s]/.test(o):r||(c=!0)}!c||r||n?c||!r||n?c||r||(b&&(s[b]=k),k="",b=""):k+=o:b+=o,n=!1}return Object.keys(s).map((e=>{if(/\{\s*\.\.\.(\w+)\s*\}/.test(e)){const[,t]=e.match(/\{\s*\.\.\.(\w+)\s*\}/);s.spread=t,delete s[e]}})),s}
	function JSONparse(n){try{return JSON.parse(n)}catch(t){try{const e=parseInt(t.message.match(/position\s+(\d+)/)[1],10),s=n.slice(0,e+1).split("\n"),i=s.length,l=n.split("\n"),r=s[s.length-1].length-1,c=l.slice(0,i).join("\n")+"\n"+new Array(r).fill(" ").join("")+"ðŸ‘†\n"+l.slice(i).join("\n");return console.log(c),{}}catch(n){throw t}}}
	function htmlDecode(input) {
		var doc = new DOMParser().parseFromString(input, "text/html");
		return doc.documentElement.textContent;
		}
	function componentWrapper(el) {
			if(el.classList.contains('liquivelte-component')) {
			return el;
			} else {
			return componentWrapper(el.parentElement);
			}
	}
	var wrapper = componentWrapper(propScript.parentElement);
	// console.log('wrapper', wrapper);
	// console.log('parsing props for svelte component');
	try{
			wrapper.svelteProps = { ...(wrapper.svelteProps || {}), ...(JSONparse(propScript.previousElementSibling.innerText)) };
	
	
		wrapper.svelteProps["form_inputs_f25b6b3cdffe"] = [...(wrapper.svelteProps["form_inputs_f25b6b3cdffe"] || []), htmlDecode(window.liquivelte_form_inputs['form_inputs_f25b6b3cdffe']) ];
		wrapper.svelteProps["form_props_f25b6b3cdffe"] = [...(wrapper.svelteProps["form_props_f25b6b3cdffe"] || []), parseProps(window.liquivelte_form_props['form_props_f25b6b3cdffe']) ];
	
	
		wrapper.svelteProps["rawinclude_5b6b3cdffe9"] = [...(wrapper.svelteProps["rawinclude_5b6b3cdffe9"] || []), htmlDecode(window.liquivelte_rawincludes['rawinclude_5b6b3cdffe9']) ];
	;
		wrapper.svelteProps["rawinclude_b6b3cdffe99"] = [...(wrapper.svelteProps["rawinclude_b6b3cdffe99"] || []), htmlDecode(window.liquivelte_rawincludes['rawinclude_b6b3cdffe99']) ];
	
	} catch (e) {
			console.error('there was an error parsing props json', e);
			wrapper.svelteProps = { error: 'there was an error parsing props json'};
	}
	propScript.previousElementSibling.remove();
	propScript.remove();
	})();</script>
	{%- unless sub_include -%} 
		</div>
	{%- endunless -%}
