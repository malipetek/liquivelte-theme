
	{%- liquid
	assign props_arr = props | split: '-prsp-'
	for prop in props_arr
	assign propName = prop | split: '-kvsp-' | first
	assign propValue = prop | split: '-kvsp-' | last | remove: '"'
	if propValue contains '{' and propValue contains '}'
	assign propValue = propValue | remove: '{' | remove: '}'
	assign propValueArr = propValue | split: ','
	for entry in propValueArr
	assign key = entry | split: ':' | first | strip | remove: '"'
	assign value = entry | split: ':' | last | strip | remove: '"'
	assign composite_key = propName | append: '_' | append: key
	
	endfor
	endif
	if propName == 'links'
	assign links = propValue
	endif
	endfor
	-%}
	{%- unless sub_include -%} 
	<div class="liquivelte-component navigation" data-liquivelte-component-name="navigation.liquivelte">
	{%- endunless -%}
	
<div class="hidden">
  
    {%- capture rawinclude -%}{% include 'icon-arrow'  %}{%- endcapture -%}
  <script liquivelte-keep liquivelte-eval>
  window.liquivelte_rawincludes = window.liquivelte_rawincludes || {};
  window.liquivelte_rawincludes['rawinclude_b7c846d6'] = [...(window.liquivelte_rawincludes['rawinclude_b7c846d6'] || []),`{{ rawinclude | escape | strip_newlines }}`];
  if(document.currentScript){
    document.currentScript.remove();
  }</script>
  {%- assign rawinclude = '' -%}
  
    {%- capture rawinclude -%}{% include 'icon-caret'  %}{%- endcapture -%}
  <script liquivelte-keep liquivelte-eval>
  window.liquivelte_rawincludes = window.liquivelte_rawincludes || {};
  window.liquivelte_rawincludes['rawinclude_5513f9e2'] = [...(window.liquivelte_rawincludes['rawinclude_5513f9e2'] || []),`{{ rawinclude | escape | strip_newlines }}`];
  if(document.currentScript){
    document.currentScript.remove();
  }</script>
  {%- assign rawinclude = '' -%}
</div>
<ul class="menu-drawer__menu has-submenu list-menu" role="list">
  {% for lnk in links %}
    {% assign index = forloop.index0 %}
    <li>
      {% if lnk.links %}
      <details id="Details-menu-drawer-menu-item-{{ forloop.index }}">
        
	{%- liquid 
	assign dynamic_classes = ''
	  if lnk.child_active
	assign dynamic_classes = dynamic_classes | append: ' menu-drawer__menu-item--active'
	endif
	-%}
	<summary  class="menu-drawer__menu-item list-menu__item link link--text focus-inset{{ dynamic_classes }}" >
          <svelte:self links="{lnk.links}" />  
        </summary>
      </details>
      {% endif %}
      
	{%- liquid 
	assign dynamic_classes = ''
	  if lnk.current
	assign dynamic_classes = dynamic_classes | append: ' menu-drawer__menu-item--active'
	endif
	-%}
	<a  href="{{ lnk.url }}" class="menu-drawer__menu-item list-menu__item link link--text focus-inset{{ dynamic_classes }}">
        {{ lnk.title | escape }}
      </a>
    </li>
  {% endfor %}

 <!-- <details id="Details-menu-drawer-menu-item-{{ forloop.index }}">
          
	{%- liquid 
	assign dynamic_classes = ''
	  if lnk.child_active
	assign dynamic_classes = dynamic_classes | append: ' menu-drawer__menu-item--active'
	endif
	-%}
	<summary  class="menu-drawer__menu-item list-menu__item link link--text focus-inset{{ dynamic_classes }}" >
            {{ link.title | escape }}
            
    {%- capture rawinclude -%}{% include 'icon-arrow'  %}{%- endcapture -%}
  <script liquivelte-keep liquivelte-eval>
  window.liquivelte_rawincludes = window.liquivelte_rawincludes || {};
  window.liquivelte_rawincludes['rawinclude_b7c846d6'] = [...(window.liquivelte_rawincludes['rawinclude_b7c846d6'] || []),`{{ rawinclude | escape | strip_newlines }}`];
  if(document.currentScript){
    document.currentScript.remove();
  }</script>
  {%- assign rawinclude = '' -%}
            
    {%- capture rawinclude -%}{% include 'icon-caret'  %}{%- endcapture -%}
  <script liquivelte-keep liquivelte-eval>
  window.liquivelte_rawincludes = window.liquivelte_rawincludes || {};
  window.liquivelte_rawincludes['rawinclude_5513f9e2'] = [...(window.liquivelte_rawincludes['rawinclude_5513f9e2'] || []),`{{ rawinclude | escape | strip_newlines }}`];
  if(document.currentScript){
    document.currentScript.remove();
  }</script>
  {%- assign rawinclude = '' -%}
          </summary>
          <div id="link-{{ lnk.handle | escape }}" class="menu-drawer__submenu has-submenu gradient motion-reduce" tabindex="-1">
            <div class="menu-drawer__inner-submenu">
              <button class="menu-drawer__close-button link link--text focus-inset" aria-expanded="true">
                
    {%- capture rawinclude -%}{% include 'icon-arrow'  %}{%- endcapture -%}
  <script liquivelte-keep liquivelte-eval>
  window.liquivelte_rawincludes = window.liquivelte_rawincludes || {};
  window.liquivelte_rawincludes['rawinclude_b7c846d6'] = [...(window.liquivelte_rawincludes['rawinclude_b7c846d6'] || []),`{{ rawinclude | escape | strip_newlines }}`];
  if(document.currentScript){
    document.currentScript.remove();
  }</script>
  {%- assign rawinclude = '' -%}
                {{ lnk.title | escape }}
              </button>
              <ul class="menu-drawer__menu list-menu" role="list" tabindex="-1">
                {% for childlk in link.links %}
    {% assign index = forloop.index0 %}
                  <li>
                    {% if childlink.links %}
                      
	{%- liquid 
	assign dynamic_classes = ''
	  if childlink.current
	assign dynamic_classes = dynamic_classes | append: ' menu-drawer__menu-item--active'
	endif
	-%}
	<a  href="{{ childlink.url }}" class="menu-drawer__menu-item link link--text list-menu__item focus-inset{{ dynamic_classes }}" >
                        {{ childlink.title | escape }}
                      </a>
                    {% else %}
                      <details id="Details-menu-drawer-submenu-{{ forloop.index }}">
                        <summary class="menu-drawer__menu-item link link--text list-menu__item focus-inset">
                          {{ childlink.title | escape }}
                          
    {%- capture rawinclude -%}{% include 'icon-arrow'  %}{%- endcapture -%}
  <script liquivelte-keep liquivelte-eval>
  window.liquivelte_rawincludes = window.liquivelte_rawincludes || {};
  window.liquivelte_rawincludes['rawinclude_b7c846d6'] = [...(window.liquivelte_rawincludes['rawinclude_b7c846d6'] || []),`{{ rawinclude | escape | strip_newlines }}`];
  if(document.currentScript){
    document.currentScript.remove();
  }</script>
  {%- assign rawinclude = '' -%}
                          
    {%- capture rawinclude -%}{% include 'icon-caret'  %}{%- endcapture -%}
  <script liquivelte-keep liquivelte-eval>
  window.liquivelte_rawincludes = window.liquivelte_rawincludes || {};
  window.liquivelte_rawincludes['rawinclude_5513f9e2'] = [...(window.liquivelte_rawincludes['rawinclude_5513f9e2'] || []),`{{ rawinclude | escape | strip_newlines }}`];
  if(document.currentScript){
    document.currentScript.remove();
  }</script>
  {%- assign rawinclude = '' -%}
                        </summary>
                        <div id="childlink-{{ childlink.handle | escape }}" class="menu-drawer__submenu has-submenu gradient motion-reduce">
                          <button class="menu-drawer__close-button link link--text focus-inset" aria-expanded="true">
                            
    {%- capture rawinclude -%}{% include 'icon-arrow'  %}{%- endcapture -%}
  <script liquivelte-keep liquivelte-eval>
  window.liquivelte_rawincludes = window.liquivelte_rawincludes || {};
  window.liquivelte_rawincludes['rawinclude_b7c846d6'] = [...(window.liquivelte_rawincludes['rawinclude_b7c846d6'] || []),`{{ rawinclude | escape | strip_newlines }}`];
  if(document.currentScript){
    document.currentScript.remove();
  }</script>
  {%- assign rawinclude = '' -%}
                            {{ childlink.title | escape }}
                          </button>
                          <ul class="menu-drawer__menu list-menu" role="list" tabindex="-1">
                            {% for grandchildlink in childlink.links %}
    {% assign index = forloop.index0 %}
                              <li>
                                
	{%- liquid 
	assign dynamic_classes = ''
	  if grandchildlink.current
	assign dynamic_classes = dynamic_classes | append: ' menu-drawer__menu-item--active'
	endif
	-%}
	<a  href="{{ grandchildlink.url }}" class="menu-drawer__menu-item link link--text list-menu__item focus-inset{{ dynamic_classes }}" >
                                  {{ grandchildlink.title | escape }}
                                </a>
                              </li>
                            {% endfor %}
                          </ul>
                        </div>
                      </details>
                    {% endif %}
                  </li>
                {% endfor %}
              </ul>
            </div>
          </div>
        </details> -->
</ul>
	
						
						
	<script type="text/noscript" class="instance-data">{
	
	
	

	}</script>
	
	<script class="liquivelte-prop-script">(() => {
	var propScript = Shopify.designMode && window.propScriptForDesignMode ? window.propScriptForDesignMode : document.currentScript;
	function parseProps(e){const s={};let t={bracketsOpened:0,get open(){return this.bracketsOpened>0},set open(e){!0===e?this.bracketsOpened=this.bracketsOpened+1:!1===e&&(this.bracketsOpened=this.bracketsOpened-1)}},a=` ${e} `.split(""),r=!1,c=!1,n=!1,p=!1,o="",b="";for(let e=0;e<a.length;e++){const k=a[e];switch(!0){case" "===k:p||t.open||(c=!1),!n||p||t.open||(n=!1);break;case"{"===k:t.open=!0,n||(c=!0);break;case"}"===k:t.open=!1;break;case'"'===k:p=!p;break;case"="===k:c&&(c=!1,n=!0,r=!0);break;case/[^\s]/.test(k):n||(c=!0)}!c||n||r?c||!n||r?c||n||(o&&(s[o]=b.replace(/^"/,"").replace(/"$/,"")),b="",o=""):b+=k:o+=k,r=!1}return Object.keys(s).map((e=>{if(/\{\s*\.\.\.(\w+)\s*\}/.test(e)){const[,t]=e.match(/\{\s*\.\.\.(\w+)\s*\}/);s.spread=t,delete s[e]}})),s}
	function JSONparse(n){try{return JSON.parse(n)}catch(t){try{const e=parseInt(t.message.match(/position\s+(\d+)/)[1],10),s=n.slice(0,e+1).split("\n"),i=s.length,l=n.split("\n"),r=s[s.length-1].length-1,c=l.slice(0,i).join("\n")+"\n"+new Array(r).fill(" ").join("")+"👆\n"+l.slice(i).join("\n");return console.log(c),{}}catch(n){throw t}}}
	function htmlDecode(input) {
	var doc = new DOMParser().parseFromString(input, "text/html");
	return doc.documentElement.textContent;
	}
	function componentWrapper(el) {
	if(el.classList.contains('liquivelte-component')) {
	return el;
	} else {
	return componentWrapper(el.parentElement);
	}
	}
	var wrapper = componentWrapper(propScript.parentElement);
	// console.log('wrapper', wrapper);
	// console.log('parsing props for svelte component');
	try{
	wrapper.svelteProps = { ...(wrapper.svelteProps || {}), ...(JSONparse(propScript.previousElementSibling.textContent)) };
	} catch (e) {
	const err = 'There was an error';
	console.error('there was an error parsing props json', e);
	wrapper.svelteProps = { ...wrapper.svelteProps, error: (wrapper.svelteProps.error || '') + err};
	}
	
	
	try{
	wrapper.svelteProps["rawinclude_b7c846d6"] = [...(wrapper.svelteProps["rawinclude_b7c846d6"] || []), ...window.liquivelte_rawincludes['rawinclude_b7c846d6'].map(e => htmlDecode(e)) ];
	} catch (e) {
	const err = 'Could not grab liquid include, because it is not present in the liquid context please check for rawinclude_b7c846d6 in the navigation.liquivelte file.';
	console.error(err);
	wrapper.svelteProps = { ...wrapper.svelteProps, error: (wrapper.svelteProps.error || '') + err};
	}

	;
	try{
	wrapper.svelteProps["rawinclude_5513f9e2"] = [...(wrapper.svelteProps["rawinclude_5513f9e2"] || []), ...window.liquivelte_rawincludes['rawinclude_5513f9e2'].map(e => htmlDecode(e)) ];
	} catch (e) {
	const err = 'Could not grab liquid include, because it is not present in the liquid context please check for rawinclude_5513f9e2 in the navigation.liquivelte file.';
	console.error(err);
	wrapper.svelteProps = { ...wrapper.svelteProps, error: (wrapper.svelteProps.error || '') + err};
	}

	

	// liquid expression cache
	[...wrapper.querySelectorAll('[liquivelte-value-cache]')].forEach(el => {
	let [filter, args, value] = el.getAttribute('liquivelte-value-cache').split('§');
	args = args.split(', ');
	wrapper.liquid_expression_cache = wrapper.liquid_expression_cache || {};
	wrapper.liquid_expression_cache[filter] = wrapper.liquid_expression_cache[filter] || new Map;
	wrapper.liquid_expression_cache[filter].set(`${args.join(',')}`, value);
	});

	if(propScript){
	propScript.remove();
	}
	if(propScript.previousElementSibling) {
	propScript.previousElementSibling.remove();
	}
	})();</script>
	{%- unless sub_include -%} 
	</div>
	{%- endunless -%}
	