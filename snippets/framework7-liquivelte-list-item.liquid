
	{%- liquid
	assign props_arr = props | split: '-prsp-'
	for prop in props_arr
	assign propName = prop | split: '-kvsp-' | first
	assign propValue = prop | split: '-kvsp-' | last | remove: '"'
	if propValue contains '{' and propValue contains '}'
	assign propValue = propValue | remove: '{' | remove: '}'
	assign propValueArr = propValue | split: ','
	for entry in propValueArr
	assign key = entry | split: ':' | first | strip | remove: '"'
	assign value = entry | split: ':' | last | strip | remove: '"'
	assign composite_key = propName | append: '_' | append: key
	
	endfor
	endif
	if propName == 'title'
	assign title = propValue
	endif
	if propName == 'text'
	assign text = propValue
	endif
	if propName == 'media'
	assign media = propValue
	endif
	if propName == 'subtitle'
	assign subtitle = propValue
	endif
	if propName == 'header'
	assign header = propValue
	endif
	if propName == 'footer'
	assign footer = propValue
	endif
	if propName == 'tooltip'
	assign tooltip = propValue
	endif
	if propName == 'tooltipTrigger'
	assign tooltipTrigger = propValue
	endif
	if propName == 'link'
	assign link = propValue
	endif
	if propName == 'tabLink'
	assign tabLink = propValue
	endif
	if propName == 'tabLinkActive'
	assign tabLinkActive = propValue
	endif
	if propName == 'selected'
	assign selected = propValue
	endif
	if propName == 'href'
	assign href = propValue
	endif
	if propName == 'target'
	assign target = propValue
	endif
	if propName == 'after'
	assign after = propValue
	endif
	if propName == 'badge'
	assign badge = propValue
	endif
	if propName == 'badgeColor'
	assign badgeColor = propValue
	endif
	if propName == 'mediaItem'
	assign mediaItem = propValue
	endif
	if propName == 'mediaList'
	assign mediaList = propValue
	endif
	if propName == 'divider'
	assign divider = propValue
	endif
	if propName == 'groupTitle'
	assign groupTitle = propValue
	endif
	if propName == 'swipeout'
	assign swipeout = propValue
	endif
	if propName == 'swipeoutOpened'
	assign swipeoutOpened = propValue
	endif
	if propName == 'sortable'
	assign sortable = propValue
	endif
	if propName == 'sortableOpposite'
	assign sortableOpposite = propValue
	endif
	if propName == 'accordionItem'
	assign accordionItem = propValue
	endif
	if propName == 'accordionItemOpened'
	assign accordionItemOpened = propValue
	endif
	if propName == 'smartSelect'
	assign smartSelect = propValue
	endif
	if propName == 'smartSelectParams'
	assign smartSelectParams = propValue
	endif
	if propName == 'noChevron'
	assign noChevron = propValue
	endif
	if propName == 'chevronCenter'
	assign chevronCenter = propValue
	endif
	if propName == 'checkbox'
	assign checkbox = propValue
	endif
	if propName == 'radio'
	assign radio = propValue
	endif
	if propName == 'radioIcon'
	assign radioIcon = propValue
	endif
	if propName == 'checked'
	assign checked = propValue
	endif
	if propName == 'indeterminate'
	assign indeterminate = propValue
	endif
	if propName == 'name'
	assign name = propValue
	endif
	if propName == 'value'
	assign value = propValue
	endif
	if propName == 'readonly'
	assign readonly = propValue
	endif
	if propName == 'required'
	assign required = propValue
	endif
	if propName == 'disabled'
	assign disabled = propValue
	endif
	if propName == 'virtualListIndex'
	assign virtualListIndex = propValue
	endif
	if propName == 'routeProps'
	assign routeProps = propValue
	endif
	endfor
	-%}
	{%- unless sub_include -%} 
	<div class="liquivelte-component list-item" data-liquivelte-component-name="list-item.liquivelte">
	{%- endunless -%}
	

<!-- svelte-ignore a11y-missing-attribute -->
{#if divider || groupTitle}
  <li
    on:click={onClick}
    bind:this={el}
    use:useTooltip={{ tooltip, tooltipTrigger }}
    class={liClasses}
    data-virtual-list-index={virtualListIndex}
    {...restProps($$restProps)}
  >
    <span><slot>{plainText(title)}</slot></span>
  </li>
{:else if isSimple}
  <li
    on:click={onClick}
    bind:this={el}
    use:useTooltip={{ tooltip, tooltipTrigger }}
    class={liClasses}
    data-virtual-list-index={virtualListIndex}
    {...restProps($$restProps)}
  >
    {plainText(title)}
    {%- liquid 
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module = content_and_value | split: '-scvs-' | first
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item'
	assign children = value | strip
	endif
	endfor
	-%}
	{%- if children != blank -%}
	{{- children -}}
	{%- endif -%}
	{%- assign children = '' -%}
	
  </li>
{:else}
  <li
    bind:this={el}
    use:useTooltip={{ tooltip, tooltipTrigger }}
    class={liClasses}
    data-virtual-list-index={virtualListIndex}
    {...restProps($$restProps)}
  >
    {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'root-start'
	assign children_root-start = value | strip
	endif
	endfor
	-%}
	{%- if children_root-start != blank -%}
	{{- children_root-start -}}
	{%- endif -%}
	{%- assign children_root-start = '' -%}
	
    {#if swipeout}
      <div class="swipeout-content">
        {#if isLink}
          <a
            bind:this={linkEl}
            use:useRouteProps={routeProps}
            class={linkClasses}
            {...linkAttrs}
            on:click={onClick}
          >
            <!-- Item content start -->
            <div class={contentClasses}>
              {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'content-start'
	assign children_content-start = value | strip
	endif
	endfor
	-%}
	{%- if children_content-start != blank -%}
	{{- children_content-start -}}
	{%- endif -%}
	{%- assign children_content-start = '' -%}
	
              {#if isSortable && sortable !== false && isSortableOpposite}
                <div class="sortable-handler" />
              {/if}
              {#if hasMedia}
                <div class="item-media">
                  {#if typeof media !== 'undefined'}
                    <img src={media} />
                  {/if}
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'media'
	assign children_media = value | strip
	endif
	endfor
	-%}
	{%- if children_media != blank -%}
	{{- children_media -}}
	{%- endif -%}
	{%- assign children_media = '' -%}
	
                </div>
              {/if}
              <div bind:this={innerEl} class="item-inner">
                {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'inner-start'
	assign children_inner-start = value | strip
	endif
	endfor
	-%}
	{%- if children_inner-start != blank -%}
	{{- children_inner-start -}}
	{%- endif -%}
	{%- assign children_inner-start = '' -%}
	
                {#if isMedia}
                  {#if hasHeader}
                    <div class="item-header">
                      {plainText(header)}
                      {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'header'
	assign children_header = value | strip
	endif
	endfor
	-%}
	{%- if children_header != blank -%}
	{{- children_header -}}
	{%- endif -%}
	{%- assign children_header = '' -%}
	
                    </div>
                  {/if}
                  <div class="item-title-row">
                    {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'before-title'
	assign children_before-title = value | strip
	endif
	endfor
	-%}
	{%- if children_before-title != blank -%}
	{{- children_before-title -}}
	{%- endif -%}
	{%- assign children_before-title = '' -%}
	
                    {#if hasTitle}
                      <div class="item-title">
                        {plainText(title)}
                        {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'title'
	assign children_title = value | strip
	endif
	endfor
	-%}
	{%- if children_title != blank -%}
	{{- children_title -}}
	{%- endif -%}
	{%- assign children_title = '' -%}
	
                      </div>
                    {/if}
                    {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-title'
	assign children_after-title = value | strip
	endif
	endfor
	-%}
	{%- if children_after-title != blank -%}
	{{- children_after-title -}}
	{%- endif -%}
	{%- assign children_after-title = '' -%}
	
                    {#if hasAfter}
                      <div class="item-after">
                        {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-start'
	assign children_after-start = value | strip
	endif
	endfor
	-%}
	{%- if children_after-start != blank -%}
	{{- children_after-start -}}
	{%- endif -%}
	{%- assign children_after-start = '' -%}
	
                        {#if typeof after !== 'undefined'}
                          <span>{plainText(after)}</span>
                        {/if}
                        {#if typeof badge !== 'undefined'}
                          
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props %}color-kvsp-{badgeColor}{% endcapture %}

{% capture slot_content_Badge %}{plainText(badge)}{% endcapture %}
{% assign slot_contents = slot_contents | append: '-scs-' | append: 'badge' | append: '-scvs-' | append: slot_content_Badge %}

{% include 'badge', liquivelte: true, props: props, sub_include: true %}
{% assign props = '' %}
                        {/if}
                        {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after'
	assign children_after = value | strip
	endif
	endfor
	-%}
	{%- if children_after != blank -%}
	{{- children_after -}}
	{%- endif -%}
	{%- assign children_after = '' -%}
	
                        {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-end'
	assign children_after-end = value | strip
	endif
	endfor
	-%}
	{%- if children_after-end != blank -%}
	{{- children_after-end -}}
	{%- endif -%}
	{%- assign children_after-end = '' -%}
	
                      </div>
                    {/if}
                  </div>
                  {#if hasSubtitle}
                    <div class="item-subtitle">
                      {plainText(subtitle)}
                      {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'subtitle'
	assign children_subtitle = value | strip
	endif
	endfor
	-%}
	{%- if children_subtitle != blank -%}
	{{- children_subtitle -}}
	{%- endif -%}
	{%- assign children_subtitle = '' -%}
	
                    </div>
                  {/if}
                  {#if hasText}
                    <div class="item-text">
                      {plainText(text)}
                      {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'text'
	assign children_text = value | strip
	endif
	endfor
	-%}
	{%- if children_text != blank -%}
	{{- children_text -}}
	{%- endif -%}
	{%- assign children_text = '' -%}
	
                    </div>
                  {/if}
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'inner'
	assign children_inner = value | strip
	endif
	endfor
	-%}
	{%- if children_inner != blank -%}
	{{- children_inner -}}
	{%- endif -%}
	{%- assign children_inner = '' -%}
	
                  {#if !(swipeout || accordionItem)}
                    {%- liquid 
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module = content_and_value | split: '-scvs-' | first
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item'
	assign children = value | strip
	endif
	endfor
	-%}
	{%- if children != blank -%}
	{{- children -}}
	{%- endif -%}
	{%- assign children = '' -%}
	
                  {/if}
                  {#if hasFooter}
                    <div class="item-footer">
                      {plainText(footer)}
                      {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'footer'
	assign children_footer = value | strip
	endif
	endfor
	-%}
	{%- if children_footer != blank -%}
	{{- children_footer -}}
	{%- endif -%}
	{%- assign children_footer = '' -%}
	
                    </div>
                  {/if}
                {:else}
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'before-title'
	assign children_before-title = value | strip
	endif
	endfor
	-%}
	{%- if children_before-title != blank -%}
	{{- children_before-title -}}
	{%- endif -%}
	{%- assign children_before-title = '' -%}
	
                  {#if hasTitle || hasHeader || hasFooter}
                    <div class="item-title">
                      {#if hasHeader}
                        <div class="item-header">
                          {plainText(header)}
                          {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'header'
	assign children_header = value | strip
	endif
	endfor
	-%}
	{%- if children_header != blank -%}
	{{- children_header -}}
	{%- endif -%}
	{%- assign children_header = '' -%}
	
                        </div>
                      {/if}
                      {plainText(title)}
                      {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'title'
	assign children_title = value | strip
	endif
	endfor
	-%}
	{%- if children_title != blank -%}
	{{- children_title -}}
	{%- endif -%}
	{%- assign children_title = '' -%}
	
                      {#if hasFooter}
                        <div class="item-footer">
                          {plainText(footer)}
                          {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'footer'
	assign children_footer = value | strip
	endif
	endfor
	-%}
	{%- if children_footer != blank -%}
	{{- children_footer -}}
	{%- endif -%}
	{%- assign children_footer = '' -%}
	
                        </div>
                      {/if}
                    </div>
                  {/if}
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-title'
	assign children_after-title = value | strip
	endif
	endfor
	-%}
	{%- if children_after-title != blank -%}
	{{- children_after-title -}}
	{%- endif -%}
	{%- assign children_after-title = '' -%}
	
                  {#if hasAfter}
                    <div class="item-after">
                      {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-start'
	assign children_after-start = value | strip
	endif
	endfor
	-%}
	{%- if children_after-start != blank -%}
	{{- children_after-start -}}
	{%- endif -%}
	{%- assign children_after-start = '' -%}
	
                      {#if typeof after !== 'undefined'}
                        <span>{plainText(after)}</span>
                      {/if}
                      {#if typeof badge !== 'undefined'}
                        
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props %}color-kvsp-{badgeColor}{% endcapture %}

{% capture slot_content_Badge %}{plainText(badge)}{% endcapture %}
{% assign slot_contents = slot_contents | append: '-scs-' | append: 'badge' | append: '-scvs-' | append: slot_content_Badge %}

{% include 'badge', liquivelte: true, props: props, sub_include: true %}
{% assign props = '' %}
                      {/if}
                      {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after'
	assign children_after = value | strip
	endif
	endfor
	-%}
	{%- if children_after != blank -%}
	{{- children_after -}}
	{%- endif -%}
	{%- assign children_after = '' -%}
	
                      {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-end'
	assign children_after-end = value | strip
	endif
	endfor
	-%}
	{%- if children_after-end != blank -%}
	{{- children_after-end -}}
	{%- endif -%}
	{%- assign children_after-end = '' -%}
	
                    </div>
                  {/if}
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'inner'
	assign children_inner = value | strip
	endif
	endfor
	-%}
	{%- if children_inner != blank -%}
	{{- children_inner -}}
	{%- endif -%}
	{%- assign children_inner = '' -%}
	
                  {#if !(swipeout || accordionItem)}
                    {%- liquid 
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module = content_and_value | split: '-scvs-' | first
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item'
	assign children = value | strip
	endif
	endfor
	-%}
	{%- if children != blank -%}
	{{- children -}}
	{%- endif -%}
	{%- assign children = '' -%}
	
                  {/if}
                {/if}
                {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'inner-end'
	assign children_inner-end = value | strip
	endif
	endfor
	-%}
	{%- if children_inner-end != blank -%}
	{{- children_inner-end -}}
	{%- endif -%}
	{%- assign children_inner-end = '' -%}
	
              </div>
              {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'content'
	assign children_content = value | strip
	endif
	endfor
	-%}
	{%- if children_content != blank -%}
	{{- children_content -}}
	{%- endif -%}
	{%- assign children_content = '' -%}
	
              {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'content-end'
	assign children_content-end = value | strip
	endif
	endfor
	-%}
	{%- if children_content-end != blank -%}
	{{- children_content-end -}}
	{%- endif -%}
	{%- assign children_content-end = '' -%}
	
            </div>
            <!-- Item content end -->
          </a>
        {:else}
          <!-- Item content start -->
          {#if checkbox || radio}
            <label class={contentClasses} on:click={onClick}>
              {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'content-start'
	assign children_content-start = value | strip
	endif
	endfor
	-%}
	{%- if children_content-start != blank -%}
	{{- children_content-start -}}
	{%- endif -%}
	{%- assign children_content-start = '' -%}
	
              {#if isSortable && sortable !== false && isSortableOpposite}
                <div class="sortable-handler" />
              {/if}
              <input
                bind:this={inputEl}
                value={typeof value === 'undefined' ? '' : value}
                {name}
                {checked}
                {readonly}
                {disabled}
                {required}
                type={radio ? 'radio' : 'checkbox'}
                on:change={onChange}
              />
              <i class={`icon icon-${radio ? 'radio' : 'checkbox'}`} />
              {#if hasMedia}
                <div class="item-media">
                  {#if typeof media !== 'undefined'}
                    <img src={media} />
                  {/if}
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'media'
	assign children_media = value | strip
	endif
	endfor
	-%}
	{%- if children_media != blank -%}
	{{- children_media -}}
	{%- endif -%}
	{%- assign children_media = '' -%}
	
                </div>
              {/if}
              <div bind:this={innerEl} class="item-inner">
                {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'inner-start'
	assign children_inner-start = value | strip
	endif
	endfor
	-%}
	{%- if children_inner-start != blank -%}
	{{- children_inner-start -}}
	{%- endif -%}
	{%- assign children_inner-start = '' -%}
	
                {#if isMedia}
                  {#if hasHeader}
                    <div class="item-header">
                      {plainText(header)}
                      {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'header'
	assign children_header = value | strip
	endif
	endfor
	-%}
	{%- if children_header != blank -%}
	{{- children_header -}}
	{%- endif -%}
	{%- assign children_header = '' -%}
	
                    </div>
                  {/if}
                  <div class="item-title-row">
                    {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'before-title'
	assign children_before-title = value | strip
	endif
	endfor
	-%}
	{%- if children_before-title != blank -%}
	{{- children_before-title -}}
	{%- endif -%}
	{%- assign children_before-title = '' -%}
	
                    {#if hasTitle}
                      <div class="item-title">
                        {plainText(title)}
                        {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'title'
	assign children_title = value | strip
	endif
	endfor
	-%}
	{%- if children_title != blank -%}
	{{- children_title -}}
	{%- endif -%}
	{%- assign children_title = '' -%}
	
                      </div>
                    {/if}
                    {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-title'
	assign children_after-title = value | strip
	endif
	endfor
	-%}
	{%- if children_after-title != blank -%}
	{{- children_after-title -}}
	{%- endif -%}
	{%- assign children_after-title = '' -%}
	
                    {#if hasAfter}
                      <div class="item-after">
                        {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-start'
	assign children_after-start = value | strip
	endif
	endfor
	-%}
	{%- if children_after-start != blank -%}
	{{- children_after-start -}}
	{%- endif -%}
	{%- assign children_after-start = '' -%}
	
                        {#if typeof after !== 'undefined'}
                          <span>{plainText(after)}</span>
                        {/if}
                        {#if typeof badge !== 'undefined'}
                          
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props %}color-kvsp-{badgeColor}{% endcapture %}

{% capture slot_content_Badge %}{plainText(badge)}{% endcapture %}
{% assign slot_contents = slot_contents | append: '-scs-' | append: 'badge' | append: '-scvs-' | append: slot_content_Badge %}

{% include 'badge', liquivelte: true, props: props, sub_include: true %}
{% assign props = '' %}
                        {/if}
                        {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after'
	assign children_after = value | strip
	endif
	endfor
	-%}
	{%- if children_after != blank -%}
	{{- children_after -}}
	{%- endif -%}
	{%- assign children_after = '' -%}
	
                        {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-end'
	assign children_after-end = value | strip
	endif
	endfor
	-%}
	{%- if children_after-end != blank -%}
	{{- children_after-end -}}
	{%- endif -%}
	{%- assign children_after-end = '' -%}
	
                      </div>
                    {/if}
                  </div>
                  {#if hasSubtitle}
                    <div class="item-subtitle">
                      {plainText(subtitle)}
                      {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'subtitle'
	assign children_subtitle = value | strip
	endif
	endfor
	-%}
	{%- if children_subtitle != blank -%}
	{{- children_subtitle -}}
	{%- endif -%}
	{%- assign children_subtitle = '' -%}
	
                    </div>
                  {/if}
                  {#if hasText}
                    <div class="item-text">
                      {plainText(text)}
                      {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'text'
	assign children_text = value | strip
	endif
	endfor
	-%}
	{%- if children_text != blank -%}
	{{- children_text -}}
	{%- endif -%}
	{%- assign children_text = '' -%}
	
                    </div>
                  {/if}
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'inner'
	assign children_inner = value | strip
	endif
	endfor
	-%}
	{%- if children_inner != blank -%}
	{{- children_inner -}}
	{%- endif -%}
	{%- assign children_inner = '' -%}
	
                  {#if !(swipeout || accordionItem)}
                    {%- liquid 
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module = content_and_value | split: '-scvs-' | first
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item'
	assign children = value | strip
	endif
	endfor
	-%}
	{%- if children != blank -%}
	{{- children -}}
	{%- endif -%}
	{%- assign children = '' -%}
	
                  {/if}
                  {#if hasFooter}
                    <div class="item-footer">
                      {plainText(footer)}
                      {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'footer'
	assign children_footer = value | strip
	endif
	endfor
	-%}
	{%- if children_footer != blank -%}
	{{- children_footer -}}
	{%- endif -%}
	{%- assign children_footer = '' -%}
	
                    </div>
                  {/if}
                {:else}
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'before-title'
	assign children_before-title = value | strip
	endif
	endfor
	-%}
	{%- if children_before-title != blank -%}
	{{- children_before-title -}}
	{%- endif -%}
	{%- assign children_before-title = '' -%}
	
                  {#if hasTitle || hasHeader || hasFooter}
                    <div class="item-title">
                      {#if hasHeader}
                        <div class="item-header">
                          {plainText(header)}
                          {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'header'
	assign children_header = value | strip
	endif
	endfor
	-%}
	{%- if children_header != blank -%}
	{{- children_header -}}
	{%- endif -%}
	{%- assign children_header = '' -%}
	
                        </div>
                      {/if}
                      {plainText(title)}
                      {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'title'
	assign children_title = value | strip
	endif
	endfor
	-%}
	{%- if children_title != blank -%}
	{{- children_title -}}
	{%- endif -%}
	{%- assign children_title = '' -%}
	
                      {#if hasFooter}
                        <div class="item-footer">
                          {plainText(footer)}
                          {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'footer'
	assign children_footer = value | strip
	endif
	endfor
	-%}
	{%- if children_footer != blank -%}
	{{- children_footer -}}
	{%- endif -%}
	{%- assign children_footer = '' -%}
	
                        </div>
                      {/if}
                    </div>
                  {/if}
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-title'
	assign children_after-title = value | strip
	endif
	endfor
	-%}
	{%- if children_after-title != blank -%}
	{{- children_after-title -}}
	{%- endif -%}
	{%- assign children_after-title = '' -%}
	
                  {#if hasAfter}
                    <div class="item-after">
                      {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-start'
	assign children_after-start = value | strip
	endif
	endfor
	-%}
	{%- if children_after-start != blank -%}
	{{- children_after-start -}}
	{%- endif -%}
	{%- assign children_after-start = '' -%}
	
                      {#if typeof after !== 'undefined'}
                        <span>{plainText(after)}</span>
                      {/if}
                      {#if typeof badge !== 'undefined'}
                        
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props %}color-kvsp-{badgeColor}{% endcapture %}

{% capture slot_content_Badge %}{plainText(badge)}{% endcapture %}
{% assign slot_contents = slot_contents | append: '-scs-' | append: 'badge' | append: '-scvs-' | append: slot_content_Badge %}

{% include 'badge', liquivelte: true, props: props, sub_include: true %}
{% assign props = '' %}
                      {/if}
                      {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after'
	assign children_after = value | strip
	endif
	endfor
	-%}
	{%- if children_after != blank -%}
	{{- children_after -}}
	{%- endif -%}
	{%- assign children_after = '' -%}
	
                      {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-end'
	assign children_after-end = value | strip
	endif
	endfor
	-%}
	{%- if children_after-end != blank -%}
	{{- children_after-end -}}
	{%- endif -%}
	{%- assign children_after-end = '' -%}
	
                    </div>
                  {/if}
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'inner'
	assign children_inner = value | strip
	endif
	endfor
	-%}
	{%- if children_inner != blank -%}
	{{- children_inner -}}
	{%- endif -%}
	{%- assign children_inner = '' -%}
	
                  {#if !(swipeout || accordionItem)}
                    {%- liquid 
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module = content_and_value | split: '-scvs-' | first
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item'
	assign children = value | strip
	endif
	endfor
	-%}
	{%- if children != blank -%}
	{{- children -}}
	{%- endif -%}
	{%- assign children = '' -%}
	
                  {/if}
                {/if}
                {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'inner-end'
	assign children_inner-end = value | strip
	endif
	endfor
	-%}
	{%- if children_inner-end != blank -%}
	{{- children_inner-end -}}
	{%- endif -%}
	{%- assign children_inner-end = '' -%}
	
              </div>
              {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'content'
	assign children_content = value | strip
	endif
	endfor
	-%}
	{%- if children_content != blank -%}
	{{- children_content -}}
	{%- endif -%}
	{%- assign children_content = '' -%}
	
              {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'content-end'
	assign children_content-end = value | strip
	endif
	endfor
	-%}
	{%- if children_content-end != blank -%}
	{{- children_content-end -}}
	{%- endif -%}
	{%- assign children_content-end = '' -%}
	
            </label>
          {:else}
            <div class={contentClasses} on:click={onClick}>
              {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'content-start'
	assign children_content-start = value | strip
	endif
	endfor
	-%}
	{%- if children_content-start != blank -%}
	{{- children_content-start -}}
	{%- endif -%}
	{%- assign children_content-start = '' -%}
	
              {#if isSortable && sortable !== false && isSortableOpposite}
                <div class="sortable-handler" />
              {/if}
              {#if hasMedia}
                <div class="item-media">
                  {#if typeof media !== 'undefined'}
                    <img src={media} />
                  {/if}
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'media'
	assign children_media = value | strip
	endif
	endfor
	-%}
	{%- if children_media != blank -%}
	{{- children_media -}}
	{%- endif -%}
	{%- assign children_media = '' -%}
	
                </div>
              {/if}
              <div bind:this={innerEl} class="item-inner">
                {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'inner-start'
	assign children_inner-start = value | strip
	endif
	endfor
	-%}
	{%- if children_inner-start != blank -%}
	{{- children_inner-start -}}
	{%- endif -%}
	{%- assign children_inner-start = '' -%}
	
                {#if isMedia}
                  {#if hasHeader}
                    <div class="item-header">
                      {plainText(header)}
                      {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'header'
	assign children_header = value | strip
	endif
	endfor
	-%}
	{%- if children_header != blank -%}
	{{- children_header -}}
	{%- endif -%}
	{%- assign children_header = '' -%}
	
                    </div>
                  {/if}
                  <div class="item-title-row">
                    {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'before-title'
	assign children_before-title = value | strip
	endif
	endfor
	-%}
	{%- if children_before-title != blank -%}
	{{- children_before-title -}}
	{%- endif -%}
	{%- assign children_before-title = '' -%}
	
                    {#if hasTitle}
                      <div class="item-title">
                        {plainText(title)}
                        {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'title'
	assign children_title = value | strip
	endif
	endfor
	-%}
	{%- if children_title != blank -%}
	{{- children_title -}}
	{%- endif -%}
	{%- assign children_title = '' -%}
	
                      </div>
                    {/if}
                    {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-title'
	assign children_after-title = value | strip
	endif
	endfor
	-%}
	{%- if children_after-title != blank -%}
	{{- children_after-title -}}
	{%- endif -%}
	{%- assign children_after-title = '' -%}
	
                    {#if hasAfter}
                      <div class="item-after">
                        {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-start'
	assign children_after-start = value | strip
	endif
	endfor
	-%}
	{%- if children_after-start != blank -%}
	{{- children_after-start -}}
	{%- endif -%}
	{%- assign children_after-start = '' -%}
	
                        {#if typeof after !== 'undefined'}
                          <span>{plainText(after)}</span>
                        {/if}
                        {#if typeof badge !== 'undefined'}
                          
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props %}color-kvsp-{badgeColor}{% endcapture %}

{% capture slot_content_Badge %}{plainText(badge)}{% endcapture %}
{% assign slot_contents = slot_contents | append: '-scs-' | append: 'badge' | append: '-scvs-' | append: slot_content_Badge %}

{% include 'badge', liquivelte: true, props: props, sub_include: true %}
{% assign props = '' %}
                        {/if}
                        {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after'
	assign children_after = value | strip
	endif
	endfor
	-%}
	{%- if children_after != blank -%}
	{{- children_after -}}
	{%- endif -%}
	{%- assign children_after = '' -%}
	
                        {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-end'
	assign children_after-end = value | strip
	endif
	endfor
	-%}
	{%- if children_after-end != blank -%}
	{{- children_after-end -}}
	{%- endif -%}
	{%- assign children_after-end = '' -%}
	
                      </div>
                    {/if}
                  </div>
                  {#if hasSubtitle}
                    <div class="item-subtitle">
                      {plainText(subtitle)}
                      {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'subtitle'
	assign children_subtitle = value | strip
	endif
	endfor
	-%}
	{%- if children_subtitle != blank -%}
	{{- children_subtitle -}}
	{%- endif -%}
	{%- assign children_subtitle = '' -%}
	
                    </div>
                  {/if}
                  {#if hasText}
                    <div class="item-text">
                      {plainText(text)}
                      {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'text'
	assign children_text = value | strip
	endif
	endfor
	-%}
	{%- if children_text != blank -%}
	{{- children_text -}}
	{%- endif -%}
	{%- assign children_text = '' -%}
	
                    </div>
                  {/if}
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'inner'
	assign children_inner = value | strip
	endif
	endfor
	-%}
	{%- if children_inner != blank -%}
	{{- children_inner -}}
	{%- endif -%}
	{%- assign children_inner = '' -%}
	
                  {#if !(swipeout || accordionItem)}
                    {%- liquid 
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module = content_and_value | split: '-scvs-' | first
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item'
	assign children = value | strip
	endif
	endfor
	-%}
	{%- if children != blank -%}
	{{- children -}}
	{%- endif -%}
	{%- assign children = '' -%}
	
                  {/if}
                  {#if hasFooter}
                    <div class="item-footer">
                      {plainText(footer)}
                      {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'footer'
	assign children_footer = value | strip
	endif
	endfor
	-%}
	{%- if children_footer != blank -%}
	{{- children_footer -}}
	{%- endif -%}
	{%- assign children_footer = '' -%}
	
                    </div>
                  {/if}
                {:else}
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'before-title'
	assign children_before-title = value | strip
	endif
	endfor
	-%}
	{%- if children_before-title != blank -%}
	{{- children_before-title -}}
	{%- endif -%}
	{%- assign children_before-title = '' -%}
	
                  {#if hasTitle || hasHeader || hasFooter}
                    <div class="item-title">
                      {#if hasHeader}
                        <div class="item-header">
                          {plainText(header)}
                          {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'header'
	assign children_header = value | strip
	endif
	endfor
	-%}
	{%- if children_header != blank -%}
	{{- children_header -}}
	{%- endif -%}
	{%- assign children_header = '' -%}
	
                        </div>
                      {/if}
                      {plainText(title)}
                      {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'title'
	assign children_title = value | strip
	endif
	endfor
	-%}
	{%- if children_title != blank -%}
	{{- children_title -}}
	{%- endif -%}
	{%- assign children_title = '' -%}
	
                      {#if hasFooter}
                        <div class="item-footer">
                          {plainText(footer)}
                          {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'footer'
	assign children_footer = value | strip
	endif
	endfor
	-%}
	{%- if children_footer != blank -%}
	{{- children_footer -}}
	{%- endif -%}
	{%- assign children_footer = '' -%}
	
                        </div>
                      {/if}
                    </div>
                  {/if}
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-title'
	assign children_after-title = value | strip
	endif
	endfor
	-%}
	{%- if children_after-title != blank -%}
	{{- children_after-title -}}
	{%- endif -%}
	{%- assign children_after-title = '' -%}
	
                  {#if hasAfter}
                    <div class="item-after">
                      {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-start'
	assign children_after-start = value | strip
	endif
	endfor
	-%}
	{%- if children_after-start != blank -%}
	{{- children_after-start -}}
	{%- endif -%}
	{%- assign children_after-start = '' -%}
	
                      {#if typeof after !== 'undefined'}
                        <span>{plainText(after)}</span>
                      {/if}
                      {#if typeof badge !== 'undefined'}
                        
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props %}color-kvsp-{badgeColor}{% endcapture %}

{% capture slot_content_Badge %}{plainText(badge)}{% endcapture %}
{% assign slot_contents = slot_contents | append: '-scs-' | append: 'badge' | append: '-scvs-' | append: slot_content_Badge %}

{% include 'badge', liquivelte: true, props: props, sub_include: true %}
{% assign props = '' %}
                      {/if}
                      {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after'
	assign children_after = value | strip
	endif
	endfor
	-%}
	{%- if children_after != blank -%}
	{{- children_after -}}
	{%- endif -%}
	{%- assign children_after = '' -%}
	
                      {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-end'
	assign children_after-end = value | strip
	endif
	endfor
	-%}
	{%- if children_after-end != blank -%}
	{{- children_after-end -}}
	{%- endif -%}
	{%- assign children_after-end = '' -%}
	
                    </div>
                  {/if}
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'inner'
	assign children_inner = value | strip
	endif
	endfor
	-%}
	{%- if children_inner != blank -%}
	{{- children_inner -}}
	{%- endif -%}
	{%- assign children_inner = '' -%}
	
                  {#if !(swipeout || accordionItem)}
                    {%- liquid 
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module = content_and_value | split: '-scvs-' | first
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item'
	assign children = value | strip
	endif
	endfor
	-%}
	{%- if children != blank -%}
	{{- children -}}
	{%- endif -%}
	{%- assign children = '' -%}
	
                  {/if}
                {/if}
                {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'inner-end'
	assign children_inner-end = value | strip
	endif
	endfor
	-%}
	{%- if children_inner-end != blank -%}
	{{- children_inner-end -}}
	{%- endif -%}
	{%- assign children_inner-end = '' -%}
	
              </div>
              {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'content'
	assign children_content = value | strip
	endif
	endfor
	-%}
	{%- if children_content != blank -%}
	{{- children_content -}}
	{%- endif -%}
	{%- assign children_content = '' -%}
	
              {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'content-end'
	assign children_content-end = value | strip
	endif
	endfor
	-%}
	{%- if children_content-end != blank -%}
	{{- children_content-end -}}
	{%- endif -%}
	{%- assign children_content-end = '' -%}
	
            </div>
          {/if}
          <!-- Item content end -->
        {/if}
      </div>
    {:else if isLink}
      <a
        bind:this={linkEl}
        use:useRouteProps={routeProps}
        class={linkClasses}
        {...linkAttrs}
        on:click={onClick}
      >
        <!-- Item content start -->
        <div class={contentClasses}>
          {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'content-start'
	assign children_content-start = value | strip
	endif
	endfor
	-%}
	{%- if children_content-start != blank -%}
	{{- children_content-start -}}
	{%- endif -%}
	{%- assign children_content-start = '' -%}
	
          {#if isSortable && sortable !== false && isSortableOpposite}
            <div class="sortable-handler" />
          {/if}
          {#if hasMedia}
            <div class="item-media">
              {#if typeof media !== 'undefined'}
                <img src={media} />
              {/if}
              {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'media'
	assign children_media = value | strip
	endif
	endfor
	-%}
	{%- if children_media != blank -%}
	{{- children_media -}}
	{%- endif -%}
	{%- assign children_media = '' -%}
	
            </div>
          {/if}
          <div bind:this={innerEl} class="item-inner">
            {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'inner-start'
	assign children_inner-start = value | strip
	endif
	endfor
	-%}
	{%- if children_inner-start != blank -%}
	{{- children_inner-start -}}
	{%- endif -%}
	{%- assign children_inner-start = '' -%}
	
            {#if isMedia}
              {#if hasHeader}
                <div class="item-header">
                  {plainText(header)}
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'header'
	assign children_header = value | strip
	endif
	endfor
	-%}
	{%- if children_header != blank -%}
	{{- children_header -}}
	{%- endif -%}
	{%- assign children_header = '' -%}
	
                </div>
              {/if}
              <div class="item-title-row">
                {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'before-title'
	assign children_before-title = value | strip
	endif
	endfor
	-%}
	{%- if children_before-title != blank -%}
	{{- children_before-title -}}
	{%- endif -%}
	{%- assign children_before-title = '' -%}
	
                {#if hasTitle}
                  <div class="item-title">
                    {plainText(title)}
                    {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'title'
	assign children_title = value | strip
	endif
	endfor
	-%}
	{%- if children_title != blank -%}
	{{- children_title -}}
	{%- endif -%}
	{%- assign children_title = '' -%}
	
                  </div>
                {/if}
                {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-title'
	assign children_after-title = value | strip
	endif
	endfor
	-%}
	{%- if children_after-title != blank -%}
	{{- children_after-title -}}
	{%- endif -%}
	{%- assign children_after-title = '' -%}
	
                {#if hasAfter}
                  <div class="item-after">
                    {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-start'
	assign children_after-start = value | strip
	endif
	endfor
	-%}
	{%- if children_after-start != blank -%}
	{{- children_after-start -}}
	{%- endif -%}
	{%- assign children_after-start = '' -%}
	
                    {#if typeof after !== 'undefined'}
                      <span>{plainText(after)}</span>
                    {/if}
                    {#if typeof badge !== 'undefined'}
                      
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props %}color-kvsp-{badgeColor}{% endcapture %}

{% capture slot_content_Badge %}{plainText(badge)}{% endcapture %}
{% assign slot_contents = slot_contents | append: '-scs-' | append: 'badge' | append: '-scvs-' | append: slot_content_Badge %}

{% include 'badge', liquivelte: true, props: props, sub_include: true %}
{% assign props = '' %}
                    {/if}
                    {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after'
	assign children_after = value | strip
	endif
	endfor
	-%}
	{%- if children_after != blank -%}
	{{- children_after -}}
	{%- endif -%}
	{%- assign children_after = '' -%}
	
                    {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-end'
	assign children_after-end = value | strip
	endif
	endfor
	-%}
	{%- if children_after-end != blank -%}
	{{- children_after-end -}}
	{%- endif -%}
	{%- assign children_after-end = '' -%}
	
                  </div>
                {/if}
              </div>
              {#if hasSubtitle}
                <div class="item-subtitle">
                  {plainText(subtitle)}
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'subtitle'
	assign children_subtitle = value | strip
	endif
	endfor
	-%}
	{%- if children_subtitle != blank -%}
	{{- children_subtitle -}}
	{%- endif -%}
	{%- assign children_subtitle = '' -%}
	
                </div>
              {/if}
              {#if hasText}
                <div class="item-text">
                  {plainText(text)}
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'text'
	assign children_text = value | strip
	endif
	endfor
	-%}
	{%- if children_text != blank -%}
	{{- children_text -}}
	{%- endif -%}
	{%- assign children_text = '' -%}
	
                </div>
              {/if}
              {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'inner'
	assign children_inner = value | strip
	endif
	endfor
	-%}
	{%- if children_inner != blank -%}
	{{- children_inner -}}
	{%- endif -%}
	{%- assign children_inner = '' -%}
	
              {#if !(swipeout || accordionItem)}
                {%- liquid 
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module = content_and_value | split: '-scvs-' | first
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item'
	assign children = value | strip
	endif
	endfor
	-%}
	{%- if children != blank -%}
	{{- children -}}
	{%- endif -%}
	{%- assign children = '' -%}
	
              {/if}
              {#if hasFooter}
                <div class="item-footer">
                  {plainText(footer)}
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'footer'
	assign children_footer = value | strip
	endif
	endfor
	-%}
	{%- if children_footer != blank -%}
	{{- children_footer -}}
	{%- endif -%}
	{%- assign children_footer = '' -%}
	
                </div>
              {/if}
            {:else}
              {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'before-title'
	assign children_before-title = value | strip
	endif
	endfor
	-%}
	{%- if children_before-title != blank -%}
	{{- children_before-title -}}
	{%- endif -%}
	{%- assign children_before-title = '' -%}
	
              {#if hasTitle || hasHeader || hasFooter}
                <div class="item-title">
                  {#if hasHeader}
                    <div class="item-header">
                      {plainText(header)}
                      {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'header'
	assign children_header = value | strip
	endif
	endfor
	-%}
	{%- if children_header != blank -%}
	{{- children_header -}}
	{%- endif -%}
	{%- assign children_header = '' -%}
	
                    </div>
                  {/if}
                  {plainText(title)}
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'title'
	assign children_title = value | strip
	endif
	endfor
	-%}
	{%- if children_title != blank -%}
	{{- children_title -}}
	{%- endif -%}
	{%- assign children_title = '' -%}
	
                  {#if hasFooter}
                    <div class="item-footer">
                      {plainText(footer)}
                      {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'footer'
	assign children_footer = value | strip
	endif
	endfor
	-%}
	{%- if children_footer != blank -%}
	{{- children_footer -}}
	{%- endif -%}
	{%- assign children_footer = '' -%}
	
                    </div>
                  {/if}
                </div>
              {/if}
              {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-title'
	assign children_after-title = value | strip
	endif
	endfor
	-%}
	{%- if children_after-title != blank -%}
	{{- children_after-title -}}
	{%- endif -%}
	{%- assign children_after-title = '' -%}
	
              {#if hasAfter}
                <div class="item-after">
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-start'
	assign children_after-start = value | strip
	endif
	endfor
	-%}
	{%- if children_after-start != blank -%}
	{{- children_after-start -}}
	{%- endif -%}
	{%- assign children_after-start = '' -%}
	
                  {#if typeof after !== 'undefined'}
                    <span>{plainText(after)}</span>
                  {/if}
                  {#if typeof badge !== 'undefined'}
                    
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props %}color-kvsp-{badgeColor}{% endcapture %}

{% capture slot_content_Badge %}{plainText(badge)}{% endcapture %}
{% assign slot_contents = slot_contents | append: '-scs-' | append: 'badge' | append: '-scvs-' | append: slot_content_Badge %}

{% include 'badge', liquivelte: true, props: props, sub_include: true %}
{% assign props = '' %}
                  {/if}
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after'
	assign children_after = value | strip
	endif
	endfor
	-%}
	{%- if children_after != blank -%}
	{{- children_after -}}
	{%- endif -%}
	{%- assign children_after = '' -%}
	
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-end'
	assign children_after-end = value | strip
	endif
	endfor
	-%}
	{%- if children_after-end != blank -%}
	{{- children_after-end -}}
	{%- endif -%}
	{%- assign children_after-end = '' -%}
	
                </div>
              {/if}
              {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'inner'
	assign children_inner = value | strip
	endif
	endfor
	-%}
	{%- if children_inner != blank -%}
	{{- children_inner -}}
	{%- endif -%}
	{%- assign children_inner = '' -%}
	
              {#if !(swipeout || accordionItem)}
                {%- liquid 
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module = content_and_value | split: '-scvs-' | first
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item'
	assign children = value | strip
	endif
	endfor
	-%}
	{%- if children != blank -%}
	{{- children -}}
	{%- endif -%}
	{%- assign children = '' -%}
	
              {/if}
            {/if}
            {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'inner-end'
	assign children_inner-end = value | strip
	endif
	endfor
	-%}
	{%- if children_inner-end != blank -%}
	{{- children_inner-end -}}
	{%- endif -%}
	{%- assign children_inner-end = '' -%}
	
          </div>
          {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'content'
	assign children_content = value | strip
	endif
	endfor
	-%}
	{%- if children_content != blank -%}
	{{- children_content -}}
	{%- endif -%}
	{%- assign children_content = '' -%}
	
          {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'content-end'
	assign children_content-end = value | strip
	endif
	endfor
	-%}
	{%- if children_content-end != blank -%}
	{{- children_content-end -}}
	{%- endif -%}
	{%- assign children_content-end = '' -%}
	
        </div>
        <!-- Item content end -->
      </a>
    {:else}
      <!-- Item content start -->
      {#if checkbox || radio}
        <label class={contentClasses} on:click={onClick}>
          {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'content-start'
	assign children_content-start = value | strip
	endif
	endfor
	-%}
	{%- if children_content-start != blank -%}
	{{- children_content-start -}}
	{%- endif -%}
	{%- assign children_content-start = '' -%}
	
          {#if isSortable && sortable !== false && isSortableOpposite}
            <div class="sortable-handler" />
          {/if}
          <input
            bind:this={inputEl}
            value={typeof value === 'undefined' ? '' : value}
            {name}
            {checked}
            {readonly}
            {disabled}
            {required}
            type={radio ? 'radio' : 'checkbox'}
            on:change={onChange}
          />
          <i class={`icon icon-${radio ? 'radio' : 'checkbox'}`} />
          {#if hasMedia}
            <div class="item-media">
              {#if typeof media !== 'undefined'}
                <img src={media} />
              {/if}
              {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'media'
	assign children_media = value | strip
	endif
	endfor
	-%}
	{%- if children_media != blank -%}
	{{- children_media -}}
	{%- endif -%}
	{%- assign children_media = '' -%}
	
            </div>
          {/if}
          <div bind:this={innerEl} class="item-inner">
            {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'inner-start'
	assign children_inner-start = value | strip
	endif
	endfor
	-%}
	{%- if children_inner-start != blank -%}
	{{- children_inner-start -}}
	{%- endif -%}
	{%- assign children_inner-start = '' -%}
	
            {#if isMedia}
              {#if hasHeader}
                <div class="item-header">
                  {plainText(header)}
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'header'
	assign children_header = value | strip
	endif
	endfor
	-%}
	{%- if children_header != blank -%}
	{{- children_header -}}
	{%- endif -%}
	{%- assign children_header = '' -%}
	
                </div>
              {/if}
              <div class="item-title-row">
                {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'before-title'
	assign children_before-title = value | strip
	endif
	endfor
	-%}
	{%- if children_before-title != blank -%}
	{{- children_before-title -}}
	{%- endif -%}
	{%- assign children_before-title = '' -%}
	
                {#if hasTitle}
                  <div class="item-title">
                    {plainText(title)}
                    {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'title'
	assign children_title = value | strip
	endif
	endfor
	-%}
	{%- if children_title != blank -%}
	{{- children_title -}}
	{%- endif -%}
	{%- assign children_title = '' -%}
	
                  </div>
                {/if}
                {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-title'
	assign children_after-title = value | strip
	endif
	endfor
	-%}
	{%- if children_after-title != blank -%}
	{{- children_after-title -}}
	{%- endif -%}
	{%- assign children_after-title = '' -%}
	
                {#if hasAfter}
                  <div class="item-after">
                    {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-start'
	assign children_after-start = value | strip
	endif
	endfor
	-%}
	{%- if children_after-start != blank -%}
	{{- children_after-start -}}
	{%- endif -%}
	{%- assign children_after-start = '' -%}
	
                    {#if typeof after !== 'undefined'}
                      <span>{plainText(after)}</span>
                    {/if}
                    {#if typeof badge !== 'undefined'}
                      
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props %}color-kvsp-{badgeColor}{% endcapture %}

{% capture slot_content_Badge %}{plainText(badge)}{% endcapture %}
{% assign slot_contents = slot_contents | append: '-scs-' | append: 'badge' | append: '-scvs-' | append: slot_content_Badge %}

{% include 'badge', liquivelte: true, props: props, sub_include: true %}
{% assign props = '' %}
                    {/if}
                    {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after'
	assign children_after = value | strip
	endif
	endfor
	-%}
	{%- if children_after != blank -%}
	{{- children_after -}}
	{%- endif -%}
	{%- assign children_after = '' -%}
	
                    {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-end'
	assign children_after-end = value | strip
	endif
	endfor
	-%}
	{%- if children_after-end != blank -%}
	{{- children_after-end -}}
	{%- endif -%}
	{%- assign children_after-end = '' -%}
	
                  </div>
                {/if}
              </div>
              {#if hasSubtitle}
                <div class="item-subtitle">
                  {plainText(subtitle)}
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'subtitle'
	assign children_subtitle = value | strip
	endif
	endfor
	-%}
	{%- if children_subtitle != blank -%}
	{{- children_subtitle -}}
	{%- endif -%}
	{%- assign children_subtitle = '' -%}
	
                </div>
              {/if}
              {#if hasText}
                <div class="item-text">
                  {plainText(text)}
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'text'
	assign children_text = value | strip
	endif
	endfor
	-%}
	{%- if children_text != blank -%}
	{{- children_text -}}
	{%- endif -%}
	{%- assign children_text = '' -%}
	
                </div>
              {/if}
              {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'inner'
	assign children_inner = value | strip
	endif
	endfor
	-%}
	{%- if children_inner != blank -%}
	{{- children_inner -}}
	{%- endif -%}
	{%- assign children_inner = '' -%}
	
              {#if !(swipeout || accordionItem)}
                {%- liquid 
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module = content_and_value | split: '-scvs-' | first
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item'
	assign children = value | strip
	endif
	endfor
	-%}
	{%- if children != blank -%}
	{{- children -}}
	{%- endif -%}
	{%- assign children = '' -%}
	
              {/if}
              {#if hasFooter}
                <div class="item-footer">
                  {plainText(footer)}
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'footer'
	assign children_footer = value | strip
	endif
	endfor
	-%}
	{%- if children_footer != blank -%}
	{{- children_footer -}}
	{%- endif -%}
	{%- assign children_footer = '' -%}
	
                </div>
              {/if}
            {:else}
              {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'before-title'
	assign children_before-title = value | strip
	endif
	endfor
	-%}
	{%- if children_before-title != blank -%}
	{{- children_before-title -}}
	{%- endif -%}
	{%- assign children_before-title = '' -%}
	
              {#if hasTitle || hasHeader || hasFooter}
                <div class="item-title">
                  {#if hasHeader}
                    <div class="item-header">
                      {plainText(header)}
                      {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'header'
	assign children_header = value | strip
	endif
	endfor
	-%}
	{%- if children_header != blank -%}
	{{- children_header -}}
	{%- endif -%}
	{%- assign children_header = '' -%}
	
                    </div>
                  {/if}
                  {plainText(title)}
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'title'
	assign children_title = value | strip
	endif
	endfor
	-%}
	{%- if children_title != blank -%}
	{{- children_title -}}
	{%- endif -%}
	{%- assign children_title = '' -%}
	
                  {#if hasFooter}
                    <div class="item-footer">
                      {plainText(footer)}
                      {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'footer'
	assign children_footer = value | strip
	endif
	endfor
	-%}
	{%- if children_footer != blank -%}
	{{- children_footer -}}
	{%- endif -%}
	{%- assign children_footer = '' -%}
	
                    </div>
                  {/if}
                </div>
              {/if}
              {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-title'
	assign children_after-title = value | strip
	endif
	endfor
	-%}
	{%- if children_after-title != blank -%}
	{{- children_after-title -}}
	{%- endif -%}
	{%- assign children_after-title = '' -%}
	
              {#if hasAfter}
                <div class="item-after">
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-start'
	assign children_after-start = value | strip
	endif
	endfor
	-%}
	{%- if children_after-start != blank -%}
	{{- children_after-start -}}
	{%- endif -%}
	{%- assign children_after-start = '' -%}
	
                  {#if typeof after !== 'undefined'}
                    <span>{plainText(after)}</span>
                  {/if}
                  {#if typeof badge !== 'undefined'}
                    
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props %}color-kvsp-{badgeColor}{% endcapture %}

{% capture slot_content_Badge %}{plainText(badge)}{% endcapture %}
{% assign slot_contents = slot_contents | append: '-scs-' | append: 'badge' | append: '-scvs-' | append: slot_content_Badge %}

{% include 'badge', liquivelte: true, props: props, sub_include: true %}
{% assign props = '' %}
                  {/if}
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after'
	assign children_after = value | strip
	endif
	endfor
	-%}
	{%- if children_after != blank -%}
	{{- children_after -}}
	{%- endif -%}
	{%- assign children_after = '' -%}
	
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-end'
	assign children_after-end = value | strip
	endif
	endfor
	-%}
	{%- if children_after-end != blank -%}
	{{- children_after-end -}}
	{%- endif -%}
	{%- assign children_after-end = '' -%}
	
                </div>
              {/if}
              {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'inner'
	assign children_inner = value | strip
	endif
	endfor
	-%}
	{%- if children_inner != blank -%}
	{{- children_inner -}}
	{%- endif -%}
	{%- assign children_inner = '' -%}
	
              {#if !(swipeout || accordionItem)}
                {%- liquid 
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module = content_and_value | split: '-scvs-' | first
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item'
	assign children = value | strip
	endif
	endfor
	-%}
	{%- if children != blank -%}
	{{- children -}}
	{%- endif -%}
	{%- assign children = '' -%}
	
              {/if}
            {/if}
            {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'inner-end'
	assign children_inner-end = value | strip
	endif
	endfor
	-%}
	{%- if children_inner-end != blank -%}
	{{- children_inner-end -}}
	{%- endif -%}
	{%- assign children_inner-end = '' -%}
	
          </div>
          {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'content'
	assign children_content = value | strip
	endif
	endfor
	-%}
	{%- if children_content != blank -%}
	{{- children_content -}}
	{%- endif -%}
	{%- assign children_content = '' -%}
	
          {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'content-end'
	assign children_content-end = value | strip
	endif
	endfor
	-%}
	{%- if children_content-end != blank -%}
	{{- children_content-end -}}
	{%- endif -%}
	{%- assign children_content-end = '' -%}
	
        </label>
      {:else}
        <div class={contentClasses} on:click={onClick}>
          {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'content-start'
	assign children_content-start = value | strip
	endif
	endfor
	-%}
	{%- if children_content-start != blank -%}
	{{- children_content-start -}}
	{%- endif -%}
	{%- assign children_content-start = '' -%}
	
          {#if isSortable && sortable !== false && isSortableOpposite}
            <div class="sortable-handler" />
          {/if}
          {#if hasMedia}
            <div class="item-media">
              {#if typeof media !== 'undefined'}
                <img src={media} />
              {/if}
              {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'media'
	assign children_media = value | strip
	endif
	endfor
	-%}
	{%- if children_media != blank -%}
	{{- children_media -}}
	{%- endif -%}
	{%- assign children_media = '' -%}
	
            </div>
          {/if}
          <div bind:this={innerEl} class="item-inner">
            {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'inner-start'
	assign children_inner-start = value | strip
	endif
	endfor
	-%}
	{%- if children_inner-start != blank -%}
	{{- children_inner-start -}}
	{%- endif -%}
	{%- assign children_inner-start = '' -%}
	
            {#if isMedia}
              {#if hasHeader}
                <div class="item-header">
                  {plainText(header)}
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'header'
	assign children_header = value | strip
	endif
	endfor
	-%}
	{%- if children_header != blank -%}
	{{- children_header -}}
	{%- endif -%}
	{%- assign children_header = '' -%}
	
                </div>
              {/if}
              <div class="item-title-row">
                {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'before-title'
	assign children_before-title = value | strip
	endif
	endfor
	-%}
	{%- if children_before-title != blank -%}
	{{- children_before-title -}}
	{%- endif -%}
	{%- assign children_before-title = '' -%}
	
                {#if hasTitle}
                  <div class="item-title">
                    {plainText(title)}
                    {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'title'
	assign children_title = value | strip
	endif
	endfor
	-%}
	{%- if children_title != blank -%}
	{{- children_title -}}
	{%- endif -%}
	{%- assign children_title = '' -%}
	
                  </div>
                {/if}
                {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-title'
	assign children_after-title = value | strip
	endif
	endfor
	-%}
	{%- if children_after-title != blank -%}
	{{- children_after-title -}}
	{%- endif -%}
	{%- assign children_after-title = '' -%}
	
                {#if hasAfter}
                  <div class="item-after">
                    {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-start'
	assign children_after-start = value | strip
	endif
	endfor
	-%}
	{%- if children_after-start != blank -%}
	{{- children_after-start -}}
	{%- endif -%}
	{%- assign children_after-start = '' -%}
	
                    {#if typeof after !== 'undefined'}
                      <span>{plainText(after)}</span>
                    {/if}
                    {#if typeof badge !== 'undefined'}
                      
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props %}color-kvsp-{badgeColor}{% endcapture %}

{% capture slot_content_Badge %}{plainText(badge)}{% endcapture %}
{% assign slot_contents = slot_contents | append: '-scs-' | append: 'badge' | append: '-scvs-' | append: slot_content_Badge %}

{% include 'badge', liquivelte: true, props: props, sub_include: true %}
{% assign props = '' %}
                    {/if}
                    {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after'
	assign children_after = value | strip
	endif
	endfor
	-%}
	{%- if children_after != blank -%}
	{{- children_after -}}
	{%- endif -%}
	{%- assign children_after = '' -%}
	
                    {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-end'
	assign children_after-end = value | strip
	endif
	endfor
	-%}
	{%- if children_after-end != blank -%}
	{{- children_after-end -}}
	{%- endif -%}
	{%- assign children_after-end = '' -%}
	
                  </div>
                {/if}
              </div>
              {#if hasSubtitle}
                <div class="item-subtitle">
                  {plainText(subtitle)}
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'subtitle'
	assign children_subtitle = value | strip
	endif
	endfor
	-%}
	{%- if children_subtitle != blank -%}
	{{- children_subtitle -}}
	{%- endif -%}
	{%- assign children_subtitle = '' -%}
	
                </div>
              {/if}
              {#if hasText}
                <div class="item-text">
                  {plainText(text)}
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'text'
	assign children_text = value | strip
	endif
	endfor
	-%}
	{%- if children_text != blank -%}
	{{- children_text -}}
	{%- endif -%}
	{%- assign children_text = '' -%}
	
                </div>
              {/if}
              {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'inner'
	assign children_inner = value | strip
	endif
	endfor
	-%}
	{%- if children_inner != blank -%}
	{{- children_inner -}}
	{%- endif -%}
	{%- assign children_inner = '' -%}
	
              {#if !(swipeout || accordionItem)}
                {%- liquid 
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module = content_and_value | split: '-scvs-' | first
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item'
	assign children = value | strip
	endif
	endfor
	-%}
	{%- if children != blank -%}
	{{- children -}}
	{%- endif -%}
	{%- assign children = '' -%}
	
              {/if}
              {#if hasFooter}
                <div class="item-footer">
                  {plainText(footer)}
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'footer'
	assign children_footer = value | strip
	endif
	endfor
	-%}
	{%- if children_footer != blank -%}
	{{- children_footer -}}
	{%- endif -%}
	{%- assign children_footer = '' -%}
	
                </div>
              {/if}
            {:else}
              {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'before-title'
	assign children_before-title = value | strip
	endif
	endfor
	-%}
	{%- if children_before-title != blank -%}
	{{- children_before-title -}}
	{%- endif -%}
	{%- assign children_before-title = '' -%}
	
              {#if hasTitle || hasHeader || hasFooter}
                <div class="item-title">
                  {#if hasHeader}
                    <div class="item-header">
                      {plainText(header)}
                      {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'header'
	assign children_header = value | strip
	endif
	endfor
	-%}
	{%- if children_header != blank -%}
	{{- children_header -}}
	{%- endif -%}
	{%- assign children_header = '' -%}
	
                    </div>
                  {/if}
                  {plainText(title)}
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'title'
	assign children_title = value | strip
	endif
	endfor
	-%}
	{%- if children_title != blank -%}
	{{- children_title -}}
	{%- endif -%}
	{%- assign children_title = '' -%}
	
                  {#if hasFooter}
                    <div class="item-footer">
                      {plainText(footer)}
                      {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'footer'
	assign children_footer = value | strip
	endif
	endfor
	-%}
	{%- if children_footer != blank -%}
	{{- children_footer -}}
	{%- endif -%}
	{%- assign children_footer = '' -%}
	
                    </div>
                  {/if}
                </div>
              {/if}
              {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-title'
	assign children_after-title = value | strip
	endif
	endfor
	-%}
	{%- if children_after-title != blank -%}
	{{- children_after-title -}}
	{%- endif -%}
	{%- assign children_after-title = '' -%}
	
              {#if hasAfter}
                <div class="item-after">
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-start'
	assign children_after-start = value | strip
	endif
	endfor
	-%}
	{%- if children_after-start != blank -%}
	{{- children_after-start -}}
	{%- endif -%}
	{%- assign children_after-start = '' -%}
	
                  {#if typeof after !== 'undefined'}
                    <span>{plainText(after)}</span>
                  {/if}
                  {#if typeof badge !== 'undefined'}
                    
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props %}color-kvsp-{badgeColor}{% endcapture %}

{% capture slot_content_Badge %}{plainText(badge)}{% endcapture %}
{% assign slot_contents = slot_contents | append: '-scs-' | append: 'badge' | append: '-scvs-' | append: slot_content_Badge %}

{% include 'badge', liquivelte: true, props: props, sub_include: true %}
{% assign props = '' %}
                  {/if}
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after'
	assign children_after = value | strip
	endif
	endfor
	-%}
	{%- if children_after != blank -%}
	{{- children_after -}}
	{%- endif -%}
	{%- assign children_after = '' -%}
	
                  {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'after-end'
	assign children_after-end = value | strip
	endif
	endfor
	-%}
	{%- if children_after-end != blank -%}
	{{- children_after-end -}}
	{%- endif -%}
	{%- assign children_after-end = '' -%}
	
                </div>
              {/if}
              {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'inner'
	assign children_inner = value | strip
	endif
	endfor
	-%}
	{%- if children_inner != blank -%}
	{{- children_inner -}}
	{%- endif -%}
	{%- assign children_inner = '' -%}
	
              {#if !(swipeout || accordionItem)}
                {%- liquid 
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module = content_and_value | split: '-scvs-' | first
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item'
	assign children = value | strip
	endif
	endfor
	-%}
	{%- if children != blank -%}
	{{- children -}}
	{%- endif -%}
	{%- assign children = '' -%}
	
              {/if}
            {/if}
            {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'inner-end'
	assign children_inner-end = value | strip
	endif
	endfor
	-%}
	{%- if children_inner-end != blank -%}
	{{- children_inner-end -}}
	{%- endif -%}
	{%- assign children_inner-end = '' -%}
	
          </div>
          {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'content'
	assign children_content = value | strip
	endif
	endfor
	-%}
	{%- if children_content != blank -%}
	{{- children_content -}}
	{%- endif -%}
	{%- assign children_content = '' -%}
	
          {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'content-end'
	assign children_content-end = value | strip
	endif
	endfor
	-%}
	{%- if children_content-end != blank -%}
	{{- children_content-end -}}
	{%- endif -%}
	{%- assign children_content-end = '' -%}
	
        </div>
      {/if}
      <!-- Item content end -->
    {/if}
    {#if isSortable && sortable !== false && !isSortableOpposite}
      <div class="sortable-handler" />
    {/if}
    {#if swipeout || accordionItem}
      {%- liquid 
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module = content_and_value | split: '-scvs-' | first
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item'
	assign children = value | strip
	endif
	endfor
	-%}
	{%- if children != blank -%}
	{{- children -}}
	{%- endif -%}
	{%- assign children = '' -%}
	
    {/if}
    {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'root'
	assign children_root = value | strip
	endif
	endfor
	-%}
	{%- if children_root != blank -%}
	{{- children_root -}}
	{%- endif -%}
	{%- assign children_root = '' -%}
	
    {%- liquid
	assign slot_contents_and_values = slot_contents | split: '-scs-'
	for content_and_value in slot_contents_and_values
	assign module_and_slotname = content_and_value | split: '-scvs-' | first
	assign module = module_and_slotname | split: '-smns-' | first
	assign name = module_and_slotname | split: '-smns-' | last
	assign value = content_and_value | split: '-scvs-' | last
	if module == 'list-item' and name == 'root-end'
	assign children_root-end = value | strip
	endif
	endfor
	-%}
	{%- if children_root-end != blank -%}
	{{- children_root-end -}}
	{%- endif -%}
	{%- assign children_root-end = '' -%}
	
  </li>
{/if}

	
						
						
	<script type="text/noscript" class="instance-data">{
	
	
	

	}</script>
	
	<script class="liquivelte-prop-script">(() => {
	var propScript = Shopify.designMode && window.propScriptForDesignMode ? window.propScriptForDesignMode : document.currentScript;
	function parseProps(e){const s={};let t={bracketsOpened:0,get open(){return this.bracketsOpened>0},set open(e){!0===e?this.bracketsOpened=this.bracketsOpened+1:!1===e&&(this.bracketsOpened=this.bracketsOpened-1)}},a=` ${e} `.split(""),r=!1,c=!1,n=!1,p=!1,o="",b="";for(let e=0;e<a.length;e++){const k=a[e];switch(!0){case" "===k:p||t.open||(c=!1),!n||p||t.open||(n=!1);break;case"{"===k:t.open=!0,n||(c=!0);break;case"}"===k:t.open=!1;break;case'"'===k:p=!p;break;case"="===k:c&&(c=!1,n=!0,r=!0);break;case/[^\s]/.test(k):n||(c=!0)}!c||n||r?c||!n||r?c||n||(o&&(s[o]=b.replace(/^"/,"").replace(/"$/,"")),b="",o=""):b+=k:o+=k,r=!1}return Object.keys(s).map((e=>{if(/\{\s*\.\.\.(\w+)\s*\}/.test(e)){const[,t]=e.match(/\{\s*\.\.\.(\w+)\s*\}/);s.spread=t,delete s[e]}})),s}
	function JSONparse(n){try{return JSON.parse(n)}catch(t){try{const e=parseInt(t.message.match(/position\s+(\d+)/)[1],10),s=n.slice(0,e+1).split("\n"),i=s.length,l=n.split("\n"),r=s[s.length-1].length-1,c=l.slice(0,i).join("\n")+"\n"+new Array(r).fill(" ").join("")+"👆\n"+l.slice(i).join("\n");return console.log(c),{}}catch(n){throw t}}}
	function htmlDecode(input) {
	var doc = new DOMParser().parseFromString(input, "text/html");
	return doc.documentElement.textContent;
	}
	function componentWrapper(el) {
	if(el.classList.contains('liquivelte-component')) {
	return el;
	} else {
	return componentWrapper(el.parentElement);
	}
	}
	var wrapper = componentWrapper(propScript.parentElement);
	// console.log('wrapper', wrapper);
	// console.log('parsing props for svelte component');
	try{
	wrapper.svelteProps = { ...(wrapper.svelteProps || {}), ...(JSONparse(propScript.previousElementSibling.textContent)) };
	} catch (e) {
	const err = 'There was an error';
	console.error('there was an error parsing props json', e);
	wrapper.svelteProps = { ...wrapper.svelteProps, error: (wrapper.svelteProps.error || '') + err};
	}
	
	

	// liquid expression cache
	[...wrapper.querySelectorAll('[liquivelte-value-cache]')].forEach(el => {
	let [filter, args, value] = el.getAttribute('liquivelte-value-cache').split('§');
	args = args.split(', ');
	wrapper.liquid_expression_cache = wrapper.liquid_expression_cache || {};
	wrapper.liquid_expression_cache[filter] = wrapper.liquid_expression_cache[filter] || new Map;
	wrapper.liquid_expression_cache[filter].set(`${args.join(',')}`, value);
	});

	if(propScript){
	propScript.remove();
	}
	if(propScript.previousElementSibling) {
	propScript.previousElementSibling.remove();
	}
	})();</script>
	{%- unless sub_include -%} 
	</div>
	{%- endunless -%}
	