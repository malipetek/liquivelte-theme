	{%- liquid
			
			
			assign name = null
			assign stacked = null
			assign withSubnavbar = null
			assign subnavbar = null
			assign withNavbarLarge = null
			assign navbarLarge = null
			assign noNavbar = null
			assign noToolbar = null
			assign tabs = null
			assign pageContent = null
			assign noSwipeback = null
			assign ptr = null
			assign ptrDistance = null
			assign ptrPreloader = null
			assign ptrBottom = null
			assign ptrMousewheel = null
			assign infinite = null
			assign infiniteTop = null
			assign infiniteDistance = null
			assign infinitePreloader = null
			assign hideBarsOnScroll = null
			assign hideNavbarOnScroll = null
			assign hideToolbarOnScroll = null
			assign messagesContent = null
			assign loginScreen = null
			assign classes = null
			-%}
	{%- liquid
	assign lv_props_arr = props | split: '-prsp-'
	for lv_prop in lv_props_arr
	assign lv_prop_and_value = lv_prop | split: '-kvsp-'
	assign lv_propName = lv_prop_and_value | first
	if lv_prop_and_value.size > 1
		assign lv_propValue = lv_prop_and_value | last | remove: '"'
	else
		assign lv_propValue = ''	
	endif
	if lv_propValue == '0'
		assign lv_propValue = lv_propValue | times: 1
	endif
	if lv_propValue contains '{' and lv_propValue contains '}'
	assign lv_propValue = lv_propValue | remove: '{' | remove: '}'
	assign lv_propValueArr = lv_propValue | split: ','
	for lv_entry in lv_propValueArr
	assign lv_key = lv_entry | split: ':' | first | strip | remove: '"'
	assign lv_value = lv_entry | split: ':' | last | strip | remove: '"'
	assign composite_key = lv_propName | append: '_' | append: lv_key
	
	endfor
	endif
	if lv_propName == 'name' and name == blank
		assign name = lv_propValue
	endif
	if lv_propName == 'stacked' and stacked == blank
		assign stacked = lv_propValue
	endif
	if lv_propName == 'withSubnavbar' and withSubnavbar == blank
		assign withSubnavbar = lv_propValue
	endif
	if lv_propName == 'subnavbar' and subnavbar == blank
		assign subnavbar = lv_propValue
	endif
	if lv_propName == 'withNavbarLarge' and withNavbarLarge == blank
		assign withNavbarLarge = lv_propValue
	endif
	if lv_propName == 'navbarLarge' and navbarLarge == blank
		assign navbarLarge = lv_propValue
	endif
	if lv_propName == 'noNavbar' and noNavbar == blank
		assign noNavbar = lv_propValue
	endif
	if lv_propName == 'noToolbar' and noToolbar == blank
		assign noToolbar = lv_propValue
	endif
	if lv_propName == 'tabs' and tabs == blank
		assign tabs = lv_propValue
	endif
	if lv_propName == 'pageContent' and pageContent == blank
		assign pageContent = lv_propValue
	endif
	if lv_propName == 'noSwipeback' and noSwipeback == blank
		assign noSwipeback = lv_propValue
	endif
	if lv_propName == 'ptr' and ptr == blank
		assign ptr = lv_propValue
	endif
	if lv_propName == 'ptrDistance' and ptrDistance == blank
		assign ptrDistance = lv_propValue
	endif
	if lv_propName == 'ptrPreloader' and ptrPreloader == blank
		assign ptrPreloader = lv_propValue
	endif
	if lv_propName == 'ptrBottom' and ptrBottom == blank
		assign ptrBottom = lv_propValue
	endif
	if lv_propName == 'ptrMousewheel' and ptrMousewheel == blank
		assign ptrMousewheel = lv_propValue
	endif
	if lv_propName == 'infinite' and infinite == blank
		assign infinite = lv_propValue
	endif
	if lv_propName == 'infiniteTop' and infiniteTop == blank
		assign infiniteTop = lv_propValue
	endif
	if lv_propName == 'infiniteDistance' and infiniteDistance == blank
		assign infiniteDistance = lv_propValue
	endif
	if lv_propName == 'infinitePreloader' and infinitePreloader == blank
		assign infinitePreloader = lv_propValue
	endif
	if lv_propName == 'hideBarsOnScroll' and hideBarsOnScroll == blank
		assign hideBarsOnScroll = lv_propValue
	endif
	if lv_propName == 'hideNavbarOnScroll' and hideNavbarOnScroll == blank
		assign hideNavbarOnScroll = lv_propValue
	endif
	if lv_propName == 'hideToolbarOnScroll' and hideToolbarOnScroll == blank
		assign hideToolbarOnScroll = lv_propValue
	endif
	if lv_propName == 'messagesContent' and messagesContent == blank
		assign messagesContent = lv_propValue
	endif
	if lv_propName == 'loginScreen' and loginScreen == blank
		assign loginScreen = lv_propValue
	endif
	if lv_propName == 'classes' and classes == blank
		assign classes = lv_propValue
	endif
	endfor
	-%}
	
			{%- liquid
				assign slot_contents_and_values = slot_contents | split: '-scs-'
				for content_and_value in slot_contents_and_values
					assign module_and_slotname = content_and_value | split: '-scvs-' | first
					assign lv_module = module_and_slotname | split: '-smns-' | first
					assign lv_name = module_and_slotname | split: '-smns-' | last
					assign lv_value = content_and_value | split: '-scvs-' | last
					if lv_module == 'framework7-liquivelte-page' and lv_name == 'fixed'
						assign slot_fixed_framework7-liquivelte_page = lv_value | strip
					endif
					if lv_module == 'framework7-liquivelte-page' and lv_name == 'static'
						assign slot_static_framework7-liquivelte_page = lv_value | strip
					endif
					if lv_module == 'framework7-liquivelte-page' and lv_name == 'static'
						assign slot_static_framework7-liquivelte_page = lv_value | strip
					endif
					
					if lv_module == 'framework7-liquivelte-page'
						assign slot_default_framework7-liquivelte_page = lv_value | strip
					endif
				endfor
				-%}
	{%- unless sub_include -%} 
	<div class="liquivelte-component page" data-liquivelte-component-name="page.liquivelte">
		{% assign component_include_count_slot_offset = 0 %}
		{% assign component_include_count = 0 %}
		{% assign component_include_depth = 0 %}
		<script> window.cicR = 0; </script>
	{%- endunless -%}
	{% liquid
  assign pageContent = true
  assign infinitePreloader = true
%}


<div bind:this="{el}" class="page {{ classes }} {{ computedClasses }}" data-name="{name}" {...restProps($$restProps)}>
  
	{%- if slot_fixed_framework7-liquivelte_page != blank -%}
		{{- slot_fixed_framework7-liquivelte_page -}}
	{%- endif -%}

  {% if pageContent %}
    
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_PageContent %}ptr-kvsp-{ptr}-prsp-ptrDistance-kvsp-{ptrDistance}-prsp-ptrPreloader-kvsp-{ptrPreloader}-prsp-ptrBottom-kvsp-{ptrBottom}-prsp-ptrMousewheel-kvsp-{ptrMousewheel}-prsp-infinite-kvsp-{infinite}-prsp-infiniteTop-kvsp-{infiniteTop}-prsp-infiniteDistance-kvsp-{infiniteDistance}-prsp-infinitePreloader-kvsp-{infinitePreloader}-prsp-hideBarsOnScroll-kvsp-{hideBarsOnScroll}-prsp-hideNavbarOnScroll-kvsp-{hideNavbarOnScroll}-prsp-hideToolbarOnScroll-kvsp-{hideToolbarOnScroll}-prsp-messagesContent-kvsp-{messagesContent}-prsp-loginScreen-kvsp-{loginScreen}-prsp-onPtrPullStart-kvsp-{onPtrPullStart}-prsp-onPtrPullMove-kvsp-{onPtrPullMove}-prsp-onPtrPullEnd-kvsp-{onPtrPullEnd}-prsp-onPtrRefresh-kvsp-{onPtrRefresh}-prsp-onPtrDone-kvsp-{onPtrDone}-prsp-onInfinite-kvsp-{onInfinite}{% endcapture %}
{%- assign component_include_count_before_slots = component_include_count -%}

{%- capture slot_content_def_PageContent -%}{% assign component_include_depth = component_include_depth | plus: 1 %}
      
	{%- if slot_static_framework7-liquivelte_page != blank -%}
		{{- slot_static_framework7-liquivelte_page -}}
	{%- endif -%}

      
		{%- if slot_default_framework7-liquivelte_page != blank -%}
			{{- slot_default_framework7-liquivelte_page -}}
		{%- endif -%}
	
    {%- endcapture -%}{% assign component_include_depth = component_include_depth | minus: 1 %}
{%- assign component_include_count_slot_offset = component_include_count | minus: component_include_count_before_slots -%}
{% assign modulename = basename | append: 'page-content' %}
{% assign slot_content_PageContent = slot_content_PageContent | append: '-scs-' | append: modulename | append: '-scvs-' | append: slot_content_def_PageContent %}
{% include modulename, liquivelte: true, props: props_PageContent, sub_include: true, slot_contents: slot_content_PageContent, basename: ''  %}
{% assign slot_content_PageContent = '' %}
{% assign props = '' %}
  {% else %}
    
	{%- if slot_static_framework7-liquivelte_page != blank -%}
		{{- slot_static_framework7-liquivelte_page -}}
	{%- endif -%}

    
		{%- if slot_default_framework7-liquivelte_page != blank -%}
			{{- slot_default_framework7-liquivelte_page -}}
		{%- endif -%}
	
  {% endif %}
</div>

	
						
		
	<script type="text/noscript" class="instance-data" >
		{% assign component_include_count = component_include_count | plus: 1 %}
		{
	
	
	
		
		"forloop_index": {{ forloop.index0 | default: 0 | json }},
		"component_index": {{ component_include_count | plus: component_include_depth }},
		"component_name": "framework7-liquivelte-page"
	}</script>
	
	<script class="liquivelte-prop-script">(() => {
	var propScript = Shopify.designMode && window.propScriptForDesignMode ? window.propScriptForDesignMode : document.currentScript;
	function parseProps(e){const s={};let t={bracketsOpened:0,get open(){return this.bracketsOpened>0},set open(e){!0===e?this.bracketsOpened=this.bracketsOpened+1:!1===e&&(this.bracketsOpened=this.bracketsOpened-1)}},a=` ${e} `.split(""),r=!1,c=!1,n=!1,p=!1,o="",b="";for(let e=0;e<a.length;e++){const k=a[e];switch(!0){case" "===k:p||t.open||(c=!1),!n||p||t.open||(n=!1);break;case"{"===k:t.open=!0,n||(c=!0);break;case"}"===k:t.open=!1;break;case'"'===k:p=!p;break;case"="===k:c&&(c=!1,n=!0,r=!0);break;case/[^\s]/.test(k):n||(c=!0)}!c||n||r?c||!n||r?c||n||(o&&(s[o]=b.replace(/^"/,"").replace(/"$/,"")),b="",o=""):b+=k:o+=k,r=!1}return Object.keys(s).map((e=>{if(/\{\s*\.\.\.(\w+)\s*\}/.test(e)){const[,t]=e.match(/\{\s*\.\.\.(\w+)\s*\}/);s.spread=t,delete s[e]}})),s}
	function JSONparse(n){try{return JSON.parse(n)}catch(t){try{const e=parseInt(t.message.match(/position\s+(\d+)/)[1],10),s=n.slice(0,e+1).split("\n"),i=s.length,l=n.split("\n"),r=s[s.length-1].length-1,c=l.slice(0,i).join("\n")+"\n"+new Array(r).fill(" ").join("")+"👆\n"+l.slice(i).join("\n");return console.log(c),{}}catch(n){throw t}}}
	function htmlDecode(input) {
	var doc = new DOMParser().parseFromString(input, "text/html");
	return doc.documentElement.textContent;
	}
	function componentWrapper(el) {
	if(el.classList.contains('liquivelte-component')) {
	return el;
	} else {
	return componentWrapper(el.parentElement);
	}
	}
	var wrapper = componentWrapper(propScript.parentElement);
	// console.log('wrapper', wrapper);
	// console.log('parsing props for svelte component');
	try{
		const themeImports = (JSONparse(propScript.previousElementSibling.textContent));
		wrapper.svelteProps = wrapper.svelteProps || {};
		Object.keys(themeImports).forEach(key => {
			if(key == 'forloop_index' || key == 'component_index' || key == 'component_name') return;
			wrapper.svelteProps[key] = [
				...(wrapper.svelteProps[key] || []),
				{ forloop_index: themeImports.index, component_index: themeImports.component_index, component_name: themeImports.component_name, value: themeImports[key] }
			];
		});
	} catch (e) {
	const err = 'There was an error';
	console.error('there was an error parsing props json', e);
	wrapper.svelteProps = { ...wrapper.svelteProps, error: (wrapper.svelteProps.error || '') + err};
	}
	
	

	// liquid expression cache
	[...wrapper.querySelectorAll('[liquivelte-value-cache]')].forEach(el => {
	let [filter, args, value] = el.getAttribute('liquivelte-value-cache').split('§');
	args = args.split(', ');
	args[0] = args[0].replace(/^"|\\|"$/g, '');
	wrapper.liquid_expression_cache = wrapper.liquid_expression_cache || {};
	wrapper.liquid_expression_cache[filter] = wrapper.liquid_expression_cache[filter] || new Map;
	wrapper.liquid_expression_cache[filter].set(`${args.join(',')}`, value);
	});

	if(propScript){
	propScript.remove();
	}
	if(propScript.previousElementSibling) {
	propScript.previousElementSibling.remove();
	}
	})();</script>
	{%- liquid
			
			
			assign name = null
			assign stacked = null
			assign withSubnavbar = null
			assign subnavbar = null
			assign withNavbarLarge = null
			assign navbarLarge = null
			assign noNavbar = null
			assign noToolbar = null
			assign tabs = null
			assign pageContent = null
			assign noSwipeback = null
			assign ptr = null
			assign ptrDistance = null
			assign ptrPreloader = null
			assign ptrBottom = null
			assign ptrMousewheel = null
			assign infinite = null
			assign infiniteTop = null
			assign infiniteDistance = null
			assign infinitePreloader = null
			assign hideBarsOnScroll = null
			assign hideNavbarOnScroll = null
			assign hideToolbarOnScroll = null
			assign messagesContent = null
			assign loginScreen = null
			assign classes = null
			-%}
	{%- liquid 
			assign slot_default_framework7-liquivelte_page = null
			assign slot_fixed_framework7-liquivelte_page = null
			assign slot_static_framework7-liquivelte_page = null
			assign slot_static_framework7-liquivelte_page = null
			
			-%}
	
	{%- unless sub_include -%} 
	</div>
	{% assign component_include_count = 0 %}
	{%- endunless -%}
	