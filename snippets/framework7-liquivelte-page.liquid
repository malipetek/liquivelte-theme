	{%- liquid
			
			
			assign name = null
			assign stacked = null
			assign withSubnavbar = null
			assign subnavbar = null
			assign withNavbarLarge = null
			assign navbarLarge = null
			assign noNavbar = null
			assign noToolbar = null
			assign tabs = null
			assign pageContent = null
			assign noSwipeback = null
			assign ptr = null
			assign ptrDistance = null
			assign ptrPreloader = null
			assign ptrBottom = null
			assign ptrMousewheel = null
			assign infinite = null
			assign infiniteTop = null
			assign infiniteDistance = null
			assign infinitePreloader = null
			assign hideBarsOnScroll = null
			assign hideNavbarOnScroll = null
			assign hideToolbarOnScroll = null
			assign messagesContent = null
			assign loginScreen = null
			assign classes = null
			-%}
	{%- liquid
	assign lv_props_arr = props | split: '-prsp-'
	for lv_prop in lv_props_arr
	assign lv_prop_and_value = lv_prop | split: '-kvsp-'
	assign lv_propName = lv_prop_and_value | first
	if lv_prop_and_value.size > 1
		assign lv_propValue = lv_prop_and_value | last | remove: '"'
	else
		assign lv_propValue = ''	
	endif
	if lv_propValue == '0'
		assign lv_propValue = lv_propValue | times: 1
	endif
	if lv_propValue contains '{' and lv_propValue contains '}'
	assign lv_propValue = lv_propValue | remove: '{' | remove: '}'
	assign lv_propValueArr = lv_propValue | split: ','
	for lv_entry in lv_propValueArr
	assign lv_key = lv_entry | split: ':' | first | strip | remove: '"'
	assign lv_value = lv_entry | split: ':' | last | strip | remove: '"'
	assign composite_key = lv_propName | append: '_' | append: lv_key
	
	endfor
	endif
	if lv_propName == 'name'
		assign name = lv_propValue
	endif
	if lv_propName == 'stacked'
		assign stacked = lv_propValue
	endif
	if lv_propName == 'withSubnavbar'
		assign withSubnavbar = lv_propValue
	endif
	if lv_propName == 'subnavbar'
		assign subnavbar = lv_propValue
	endif
	if lv_propName == 'withNavbarLarge'
		assign withNavbarLarge = lv_propValue
	endif
	if lv_propName == 'navbarLarge'
		assign navbarLarge = lv_propValue
	endif
	if lv_propName == 'noNavbar'
		assign noNavbar = lv_propValue
	endif
	if lv_propName == 'noToolbar'
		assign noToolbar = lv_propValue
	endif
	if lv_propName == 'tabs'
		assign tabs = lv_propValue
	endif
	if lv_propName == 'pageContent'
		assign pageContent = lv_propValue
	endif
	if lv_propName == 'noSwipeback'
		assign noSwipeback = lv_propValue
	endif
	if lv_propName == 'ptr'
		assign ptr = lv_propValue
	endif
	if lv_propName == 'ptrDistance'
		assign ptrDistance = lv_propValue
	endif
	if lv_propName == 'ptrPreloader'
		assign ptrPreloader = lv_propValue
	endif
	if lv_propName == 'ptrBottom'
		assign ptrBottom = lv_propValue
	endif
	if lv_propName == 'ptrMousewheel'
		assign ptrMousewheel = lv_propValue
	endif
	if lv_propName == 'infinite'
		assign infinite = lv_propValue
	endif
	if lv_propName == 'infiniteTop'
		assign infiniteTop = lv_propValue
	endif
	if lv_propName == 'infiniteDistance'
		assign infiniteDistance = lv_propValue
	endif
	if lv_propName == 'infinitePreloader'
		assign infinitePreloader = lv_propValue
	endif
	if lv_propName == 'hideBarsOnScroll'
		assign hideBarsOnScroll = lv_propValue
	endif
	if lv_propName == 'hideNavbarOnScroll'
		assign hideNavbarOnScroll = lv_propValue
	endif
	if lv_propName == 'hideToolbarOnScroll'
		assign hideToolbarOnScroll = lv_propValue
	endif
	if lv_propName == 'messagesContent'
		assign messagesContent = lv_propValue
	endif
	if lv_propName == 'loginScreen'
		assign loginScreen = lv_propValue
	endif
	if lv_propName == 'classes'
		assign classes = lv_propValue
	endif
	endfor
	-%}
	
			{%- liquid
				assign slot_contents_and_values = slot_contents | split: '-scs-'
				for content_and_value in slot_contents_and_values
					assign module_and_slotname = content_and_value | split: '-scvs-' | first
					assign lv_module = module_and_slotname | split: '-smns-' | first
					assign lv_name = module_and_slotname | split: '-smns-' | last
					assign lv_value = content_and_value | split: '-scvs-' | last
					if lv_module == 'framework7-liquivelte-page' and lv_name == 'fixed'
						assign slot_fixed_framework7-liquivelte_page = lv_value | strip
					endif
					if lv_module == 'framework7-liquivelte-page' and lv_name == 'static'
						assign slot_static_framework7-liquivelte_page = lv_value | strip
					endif
					if lv_module == 'framework7-liquivelte-page' and lv_name == 'static'
						assign slot_static_framework7-liquivelte_page = lv_value | strip
					endif
					
					if lv_module == 'framework7-liquivelte-page'
						assign slot_default_framework7-liquivelte_page = lv_value | strip
					endif
				endfor
				-%}
	{%- unless sub_include -%} 
	<div class="liquivelte-component page" data-liquivelte-component-name="page.liquivelte">
	{%- endunless -%}
	

<div bind:this="{el}" class="page {{ classes }} {{ computedClasses }}" data-name="{name}" {...restProps($$restProps)}>
  
	{%- if slot_fixed_framework7-liquivelte_page != blank -%}
		{{- slot_fixed_framework7-liquivelte_page -}}
	{%- endif -%}

  {% if pageContent %}
    
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_PageContent %}ptr-kvsp-{ptr}-prsp-ptrDistance-kvsp-{ptrDistance}-prsp-ptrPreloader-kvsp-{ptrPreloader}-prsp-ptrBottom-kvsp-{ptrBottom}-prsp-ptrMousewheel-kvsp-{ptrMousewheel}-prsp-infinite-kvsp-{infinite}-prsp-infiniteTop-kvsp-{infiniteTop}-prsp-infiniteDistance-kvsp-{infiniteDistance}-prsp-infinitePreloader-kvsp-{infinitePreloader}-prsp-hideBarsOnScroll-kvsp-{hideBarsOnScroll}-prsp-hideNavbarOnScroll-kvsp-{hideNavbarOnScroll}-prsp-hideToolbarOnScroll-kvsp-{hideToolbarOnScroll}-prsp-messagesContent-kvsp-{messagesContent}-prsp-loginScreen-kvsp-{loginScreen}-prsp-onPtrPullStart-kvsp-{onPtrPullStart}-prsp-onPtrPullMove-kvsp-{onPtrPullMove}-prsp-onPtrPullEnd-kvsp-{onPtrPullEnd}-prsp-onPtrRefresh-kvsp-{onPtrRefresh}-prsp-onPtrDone-kvsp-{onPtrDone}-prsp-onInfinite-kvsp-{onInfinite}{% endcapture %}

{%- capture slot_content_def_PageContent -%}
      
	{%- if slot_static_framework7-liquivelte_page != blank -%}
		{{- slot_static_framework7-liquivelte_page -}}
	{%- endif -%}

      
	{%- if sub_include -%}
		{%- if slot_default_framework7-liquivelte_page != blank -%}
			{{- slot_default_framework7-liquivelte_page -}}
		{%- endif -%}
	{%- else -%}
		{%- if main_content != blank -%}
			{{- main_content -}}
		{%- endif -%}
	{%- endif -%}
	
    {%- endcapture -%}
{% assign slot_content_PageContent = slot_content_PageContent | append: '-scs-' | append: 'page-content' | append: '-scvs-' | append: slot_content_def_PageContent %}
{% assign modulename = basename | append: 'page-content' %}
{% include modulename, liquivelte: true, props: props_PageContent, sub_include: true, slot_contents: slot_content_PageContent, basename: '' %}
{% assign props = '' %}
  {% else %}
    
	{%- if slot_static_framework7-liquivelte_page != blank -%}
		{{- slot_static_framework7-liquivelte_page -}}
	{%- endif -%}

    
	{%- if sub_include -%}
		{%- if slot_default_framework7-liquivelte_page != blank -%}
			{{- slot_default_framework7-liquivelte_page -}}
		{%- endif -%}
	{%- else -%}
		{%- if main_content != blank -%}
			{{- main_content -}}
		{%- endif -%}
	{%- endif -%}
	
  {% endif %}
</div>

	
						
						
	<script type="text/noscript" class="instance-data">{
	
	
	
	}</script>
	
	<script class="liquivelte-prop-script">(() => {
	var propScript = Shopify.designMode && window.propScriptForDesignMode ? window.propScriptForDesignMode : document.currentScript;
	function parseProps(e){const s={};let t={bracketsOpened:0,get open(){return this.bracketsOpened>0},set open(e){!0===e?this.bracketsOpened=this.bracketsOpened+1:!1===e&&(this.bracketsOpened=this.bracketsOpened-1)}},a=` ${e} `.split(""),r=!1,c=!1,n=!1,p=!1,o="",b="";for(let e=0;e<a.length;e++){const k=a[e];switch(!0){case" "===k:p||t.open||(c=!1),!n||p||t.open||(n=!1);break;case"{"===k:t.open=!0,n||(c=!0);break;case"}"===k:t.open=!1;break;case'"'===k:p=!p;break;case"="===k:c&&(c=!1,n=!0,r=!0);break;case/[^\s]/.test(k):n||(c=!0)}!c||n||r?c||!n||r?c||n||(o&&(s[o]=b.replace(/^"/,"").replace(/"$/,"")),b="",o=""):b+=k:o+=k,r=!1}return Object.keys(s).map((e=>{if(/\{\s*\.\.\.(\w+)\s*\}/.test(e)){const[,t]=e.match(/\{\s*\.\.\.(\w+)\s*\}/);s.spread=t,delete s[e]}})),s}
	function JSONparse(n){try{return JSON.parse(n)}catch(t){try{const e=parseInt(t.message.match(/position\s+(\d+)/)[1],10),s=n.slice(0,e+1).split("\n"),i=s.length,l=n.split("\n"),r=s[s.length-1].length-1,c=l.slice(0,i).join("\n")+"\n"+new Array(r).fill(" ").join("")+"ðŸ‘†\n"+l.slice(i).join("\n");return console.log(c),{}}catch(n){throw t}}}
	function htmlDecode(input) {
	var doc = new DOMParser().parseFromString(input, "text/html");
	return doc.documentElement.textContent;
	}
	function componentWrapper(el) {
	if(el.classList.contains('liquivelte-component')) {
	return el;
	} else {
	return componentWrapper(el.parentElement);
	}
	}
	var wrapper = componentWrapper(propScript.parentElement);
	// console.log('wrapper', wrapper);
	// console.log('parsing props for svelte component');
	try{
	wrapper.svelteProps = { ...(wrapper.svelteProps || {}), ...(JSONparse(propScript.previousElementSibling.textContent)) };
	} catch (e) {
	const err = 'There was an error';
	console.error('there was an error parsing props json', e);
	wrapper.svelteProps = { ...wrapper.svelteProps, error: (wrapper.svelteProps.error || '') + err};
	}
	
	

	// liquid expression cache
	[...wrapper.querySelectorAll('[liquivelte-value-cache]')].forEach(el => {
	let [filter, args, value] = el.getAttribute('liquivelte-value-cache').split('Â§');
	args = args.split(', ');
	wrapper.liquid_expression_cache = wrapper.liquid_expression_cache || {};
	wrapper.liquid_expression_cache[filter] = wrapper.liquid_expression_cache[filter] || new Map;
	wrapper.liquid_expression_cache[filter].set(`${args.join(',')}`, value);
	});

	if(propScript){
	propScript.remove();
	}
	if(propScript.previousElementSibling) {
	propScript.previousElementSibling.remove();
	}
	})();</script>
	{%- liquid
			
			
			assign name = null
			assign stacked = null
			assign withSubnavbar = null
			assign subnavbar = null
			assign withNavbarLarge = null
			assign navbarLarge = null
			assign noNavbar = null
			assign noToolbar = null
			assign tabs = null
			assign pageContent = null
			assign noSwipeback = null
			assign ptr = null
			assign ptrDistance = null
			assign ptrPreloader = null
			assign ptrBottom = null
			assign ptrMousewheel = null
			assign infinite = null
			assign infiniteTop = null
			assign infiniteDistance = null
			assign infinitePreloader = null
			assign hideBarsOnScroll = null
			assign hideNavbarOnScroll = null
			assign hideToolbarOnScroll = null
			assign messagesContent = null
			assign loginScreen = null
			assign classes = null
			-%}
	{%- liquid 
			assign slot_default_framework7-liquivelte_page = null
			assign slot_fixed_framework7-liquivelte_page = null
			assign slot_static_framework7-liquivelte_page = null
			assign slot_static_framework7-liquivelte_page = null
			
			-%}
	{%- unless sub_include -%} 
	</div>
	{%- endunless -%}
	