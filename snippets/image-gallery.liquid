	{%- liquid
			
			
			-%}
	{%- liquid
	assign lv_props_arr = props | split: '-prsp-'
	for lv_prop in lv_props_arr
	assign lv_prop_and_value = lv_prop | split: '-kvsp-'
	assign lv_propName = lv_prop_and_value | first
	if lv_prop_and_value.size > 1
		assign lv_propValue = lv_prop_and_value | last | remove: '"'
	else
		assign lv_propValue = ''	
	endif
	if lv_propValue == '0'
		assign lv_propValue = lv_propValue | times: 1
	endif
	if lv_propValue contains '{' and lv_propValue contains '}'
	assign lv_propValue = lv_propValue | remove: '{' | remove: '}'
	assign lv_propValueArr = lv_propValue | split: ','
	for lv_entry in lv_propValueArr
	assign lv_key = lv_entry | split: ':' | first | strip | remove: '"'
	assign lv_value = lv_entry | split: ':' | last | strip | remove: '"'
	assign composite_key = lv_propName | append: '_' | append: lv_key
	
	endfor
	endif
	endfor
	-%}
	
			{%- liquid
				assign slot_contents_and_values = slot_contents | split: '-scs-'
				for content_and_value in slot_contents_and_values
					assign module_and_slotname = content_and_value | split: '-scvs-' | first
					assign lv_module = module_and_slotname | split: '-smns-' | first
					assign lv_name = module_and_slotname | split: '-smns-' | last
					assign lv_value = content_and_value | split: '-scvs-' | last
					
					if lv_module == 'image-gallery'
						assign slot_default_image-gallery = lv_value | strip
					endif
				endfor
				-%}
	{%- unless sub_include -%} 
	<div  class="liquivelte-component image-gallery svelte-12nb1di" data-liquivelte-component-name="image-gallery.liquivelte">
	{%- endunless -%}
	{% liquid 
  assign thumbnailsPerView = 4
  assign thumbnailSpaceBetween = 10
  assign first_image = product.images | first
  assign first_image_ratio = first_image.aspect_ratio
%}




	{%- liquid 
	assign dynamic_classes = ''
	  if initialized == true 
	assign dynamic_classes = dynamic_classes | append: ' initialized'
	endif
	  if initialized != true 
	assign dynamic_classes = dynamic_classes | append: ' uninitialized'
	endif
	-%}
	<div style="
    grid-template-columns: 100px auto;
    --swiper-navigation-color: #fff; 
    --swiper-pagination-color: #fff; 
    --aspect-ratio: {{ first_image_ratio }};
    --max-height: {{ firstImageHeight }}px;
    min-height: 300px;
    "
     class="mt-6 w-2xl max-w-2xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 flex lg:grid 
      justify-items-center lg:gap-8 image-gallery overflow-hidden relative{{ dynamic_classes }} svelte-12nb1di">
        
	{%- liquid 
	assign dynamic_classes = ''
	  if initialized == true 
	assign dynamic_classes = dynamic_classes | append: ' initialized'
	endif
	  if initialized != true 
	assign dynamic_classes = dynamic_classes | append: ' uninitialized'
	endif
	-%}
	<div  class="thumbs-wrapper hidden lg:block{{ dynamic_classes }} svelte-12nb1di"
         
         
          style="
            --slides-per-view: {{ thumbnailsPerView }};
            --space-between: {{ thumbnailSpaceBetween }}px
          ">
            
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_Swiper %}classes-kvsp-thumbs-swiper max-w-full-prsp-slidesPerView-kvsp-{thumbnailsPerView}-prsp-spaceBetween-kvsp-{thumbnailSpaceBetween}-prsp-direction-kvsp-vertical-prsp-vertical-kvsp-1-prsp-freemode-kvsp-{ { enabled: true, sticky: true } }-prsp-mousewheel-kvsp-{ { forceToAxis: true, sensitivity: 1 } }-prsp-modules-kvsp-{[FreeMode, Mousewheel, Thumbs]}-prsp-swiper-kvsp-{setThumbsSwiper}-prsp-watchSlidesProgress-kvsp-1{% endcapture %}

{%- capture slot_content_def_Swiper -%}
          {% for image in product.images %}
    {% assign index = forloop.index0 %}
            
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_SwiperSlide %}classes-kvsp-aspect-w-4 aspect-h-5 sm:rounded-lg sm:overflow-hidden lg:aspect-w-3 lg:aspect-h-4{% endcapture %}

{%- capture slot_content_def_SwiperSlide -%}
              <img src="{{ image | image_url: width: 100 }}" liquivelte-value-cache="image_url§{{image | escape -}}, {{width}}, {{100}}§{{image| image_url: width: 100  }}" alt="{{ image.alt }}"  class=" svelte-12nb1di">
            {%- endcapture -%}
{% assign slot_content_SwiperSlide = slot_content_SwiperSlide | append: '-scs-' | append: 'framework7-liquivelte-swiper-slide' | append: '-scvs-' | append: slot_content_def_SwiperSlide %}
{% assign modulename = basename | append: 'framework7-liquivelte-swiper-slide' %}
{% include modulename, liquivelte: true, props: props_SwiperSlide, sub_include: true, slot_contents: slot_content_SwiperSlide, basename: 'framework7-liquivelte-' %}
{% assign slot_content_SwiperSlide = '' %}
{% assign props = '' %}
          {% endfor %}
          {%- endcapture -%}
{% assign slot_content_Swiper = slot_content_Swiper | append: '-scs-' | append: 'framework7-liquivelte-swiper' | append: '-scvs-' | append: slot_content_def_Swiper %}
{% assign modulename = basename | append: 'framework7-liquivelte-swiper' %}
{% include modulename, liquivelte: true, props: props_Swiper, sub_include: true, slot_contents: slot_content_Swiper, basename: 'framework7-liquivelte-' %}
{% assign slot_content_Swiper = '' %}
{% assign props = '' %}
        </div>
    
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_Swiper %}classes-kvsp-product-gallery max-w-full-prsp-loop-kvsp-{true}-prsp-slidesPerView-kvsp-{1}-prsp-thumbs-kvsp-{ { swiper: thumbsSwiper } }-prsp-freemode-kvsp-{ { enabled: true, sticky: true } }-prsp-mousewheel-kvsp-{ { forceToAxis: true, sensitivity: 1 } }-prsp-modules-kvsp-{[FreeMode, Mousewheel, Thumbs]}{% endcapture %}

{%- capture slot_content_def_Swiper -%}
      {% for image in product.images %}
    {% assign index = forloop.index0 %}
        
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_SwiperSlide %}classes-kvsp-sm:rounded-lg sm:overflow-hidden{% endcapture %}

{%- capture slot_content_def_SwiperSlide -%}
          <img bind:this="{gallery_images[index]}" src="{{ image | image_url: width: 500 }}" liquivelte-value-cache="image_url§{{image | escape -}}, {{width}}, {{500}}§{{image| image_url: width: 500  }}" alt="{{ image.alt }}" 
           class="w-full object-center object-cover svelte-12nb1di">
        {%- endcapture -%}
{% assign slot_content_SwiperSlide = slot_content_SwiperSlide | append: '-scs-' | append: 'framework7-liquivelte-swiper-slide' | append: '-scvs-' | append: slot_content_def_SwiperSlide %}
{% assign modulename = basename | append: 'framework7-liquivelte-swiper-slide' %}
{% include modulename, liquivelte: true, props: props_SwiperSlide, sub_include: true, slot_contents: slot_content_SwiperSlide, basename: 'framework7-liquivelte-' %}
{% assign slot_content_SwiperSlide = '' %}
{% assign props = '' %}
      {% endfor %}
      {%- endcapture -%}
{% assign slot_content_Swiper = slot_content_Swiper | append: '-scs-' | append: 'framework7-liquivelte-swiper' | append: '-scvs-' | append: slot_content_def_Swiper %}
{% assign modulename = basename | append: 'framework7-liquivelte-swiper' %}
{% include modulename, liquivelte: true, props: props_Swiper, sub_include: true, slot_contents: slot_content_Swiper, basename: 'framework7-liquivelte-' %}
{% assign slot_content_Swiper = '' %}
{% assign props = '' %}
  </div>
  <!-- Image gallery -->
  <!-- <div  class="mt-6 max-w-2xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-3 lg:gap-8 svelte-12nb1di">
    {% for image in product.images %}
    {% assign index = forloop.index0 %}
      <div  class="aspect-w-4 aspect-h-5 sm:rounded-lg sm:overflow-hidden lg:aspect-w-3 lg:aspect-h-4 svelte-12nb1di">
        <img src="{{ image | img_url: '500x' }}" liquivelte-value-cache="img_url§{{image | escape -}}, {{'500x'}}§{{image| img_url: '500x'  }}" alt="{{ image.alt }}"  class="w-full h-full object-center object-cover svelte-12nb1di">
      </div>
    {% endfor %}
  </div> -->


	
						
						
	<script type="text/noscript"  class="instance-data svelte-12nb1di">{
	"product" : {{ product | json }} , "first_image_ratio" : {{ first_image_ratio | json }}
	
	
	}</script>
	
	<script  class="liquivelte-prop-script svelte-12nb1di">(() => {
	var propScript = Shopify.designMode && window.propScriptForDesignMode ? window.propScriptForDesignMode : document.currentScript;
	function parseProps(e){const s={};let t={bracketsOpened:0,get open(){return this.bracketsOpened>0},set open(e){!0===e?this.bracketsOpened=this.bracketsOpened+1:!1===e&&(this.bracketsOpened=this.bracketsOpened-1)}},a=` ${e} `.split(""),r=!1,c=!1,n=!1,p=!1,o="",b="";for(let e=0;e<a.length;e++){const k=a[e];switch(!0){case" "===k:p||t.open||(c=!1),!n||p||t.open||(n=!1);break;case"{"===k:t.open=!0,n||(c=!0);break;case"}"===k:t.open=!1;break;case'"'===k:p=!p;break;case"="===k:c&&(c=!1,n=!0,r=!0);break;case/[^\s]/.test(k):n||(c=!0)}!c||n||r?c||!n||r?c||n||(o&&(s[o]=b.replace(/^"/,"").replace(/"$/,"")),b="",o=""):b+=k:o+=k,r=!1}return Object.keys(s).map((e=>{if(/\{\s*\.\.\.(\w+)\s*\}/.test(e)){const[,t]=e.match(/\{\s*\.\.\.(\w+)\s*\}/);s.spread=t,delete s[e]}})),s}
	function JSONparse(n){try{return JSON.parse(n)}catch(t){try{const e=parseInt(t.message.match(/position\s+(\d+)/)[1],10),s=n.slice(0,e+1).split("\n"),i=s.length,l=n.split("\n"),r=s[s.length-1].length-1,c=l.slice(0,i).join("\n")+"\n"+new Array(r).fill(" ").join("")+"👆\n"+l.slice(i).join("\n");return console.log(c),{}}catch(n){throw t}}}
	function htmlDecode(input) {
	var doc = new DOMParser().parseFromString(input, "text/html");
	return doc.documentElement.textContent;
	}
	function componentWrapper(el) {
	if(el.classList.contains('liquivelte-component')) {
	return el;
	} else {
	return componentWrapper(el.parentElement);
	}
	}
	var wrapper = componentWrapper(propScript.parentElement);
	// console.log('wrapper', wrapper);
	// console.log('parsing props for svelte component');
	try{
	wrapper.svelteProps = { ...(wrapper.svelteProps || {}), ...(JSONparse(propScript.previousElementSibling.textContent)) };
	} catch (e) {
	const err = 'There was an error';
	console.error('there was an error parsing props json', e);
	wrapper.svelteProps = { ...wrapper.svelteProps, error: (wrapper.svelteProps.error || '') + err};
	}
	
	

	// liquid expression cache
	[...wrapper.querySelectorAll('[liquivelte-value-cache]')].forEach(el => {
	let [filter, args, value] = el.getAttribute('liquivelte-value-cache').split('§');
	args = args.split(', ');
	args[0] = args[0].replace(/^"|\\|"$/g, '');
	wrapper.liquid_expression_cache = wrapper.liquid_expression_cache || {};
	wrapper.liquid_expression_cache[filter] = wrapper.liquid_expression_cache[filter] || new Map;
	wrapper.liquid_expression_cache[filter].set(`${args.join(',')}`, value);
	});

	if(propScript){
	propScript.remove();
	}
	if(propScript.previousElementSibling) {
	propScript.previousElementSibling.remove();
	}
	})();</script>
	{%- liquid
			
			
			-%}
	{%- liquid 
			assign slot_default_image-gallery = null
			
			-%}
	{%- unless sub_include -%} 
	</div>
	{%- endunless -%}
	