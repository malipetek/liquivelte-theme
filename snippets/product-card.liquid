	{%- liquid
			
			
			assign product = null
			-%}
	{%- liquid
	assign lv_props_arr = props | split: '-prsp-'
	for lv_prop in lv_props_arr
	assign lv_prop_and_value = lv_prop | split: '-kvsp-'
	assign lv_propName = lv_prop_and_value | first
	if lv_prop_and_value.size > 1
		assign lv_propValue = lv_prop_and_value | last | remove: '"'
	else
		assign lv_propValue = ''	
	endif
	if lv_propValue == '0'
		assign lv_propValue = lv_propValue | times: 1
	endif
	if lv_propValue contains '{' and lv_propValue contains '}'
	assign lv_propValue = lv_propValue | remove: '{' | remove: '}'
	assign lv_propValueArr = lv_propValue | split: ','
	for lv_entry in lv_propValueArr
	assign lv_key = lv_entry | split: ':' | first | strip | remove: '"'
	assign lv_value = lv_entry | split: ':' | last | strip | remove: '"'
	assign composite_key = lv_propName | append: '_' | append: lv_key
	
	endfor
	endif
	if lv_propName == 'product'
		assign product = lv_propValue
	endif
	endfor
	-%}
	
			{%- liquid
				assign slot_contents_and_values = slot_contents | split: '-scs-'
				for content_and_value in slot_contents_and_values
					assign module_and_slotname = content_and_value | split: '-scvs-' | first
					assign lv_module = module_and_slotname | split: '-smns-' | first
					assign lv_name = module_and_slotname | split: '-smns-' | last
					assign lv_value = content_and_value | split: '-scvs-' | last
					
					if lv_module == 'product-card'
						assign slot_default_product-card = lv_value | strip
					endif
				endfor
				-%}
	{%- unless sub_include -%} 
	<div  class="liquivelte-component product-card svelte-3p59xp" data-liquivelte-component-name="product-card.liquivelte">
	{%- endunless -%}
	{% liquid 
  assign quantity = 0
  assign product_id = product.id
  assign cartItem = cart.items | where: 'product_id', product_id | first
  if cartItem
    assign quantity = cartItem.quantity
  endif
%}


  
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_Card %}classes-kvsp-card-header-pic-prsp-swipeToClose-kvsp-1-prsp-hideToolbarOnOpen-kvsp-1-prsp-hideNavbarOnOpen-kvsp-1-prsp-expandableOpened-kvsp-{expandableOpened}{% endcapture %}

{%- capture slot_content_def_Card -%}
    
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_Loadable %}classes-kvsp-absolute -right-[10px] -top-[10px] z-10-prsp-centered-kvsp-1{% endcapture %}

{%- capture slot_content_def_Loadable -%}
      
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_VerticalStepper %}small-kvsp-1-prsp-disabled-kvsp-{%- unless product.available -%}1{%- endunless -%}-prsp-value-kvsp-{{ quantity }}-prsp-onChange-kvsp-{ quantityChange.bind(cartItem) }-prsp-onClick-kvsp-{addToCart}{% endcapture %}

{%- capture slot_content_def_VerticalStepper -%}
      {%- endcapture -%}
{% assign slot_content_VerticalStepper = slot_content_VerticalStepper | append: '-scs-' | append: 'vertical-stepper' | append: '-scvs-' | append: slot_content_def_VerticalStepper %}
{% assign modulename = basename | append: 'vertical-stepper' %}
{% include modulename, liquivelte: true, props: props_VerticalStepper, sub_include: true, slot_contents: slot_content_VerticalStepper, basename: '' %}
{% assign slot_content_VerticalStepper = '' %}
{% assign props = '' %}
    {%- endcapture -%}
{% assign slot_content_Loadable = slot_content_Loadable | append: '-scs-' | append: 'loadable' | append: '-scvs-' | append: slot_content_def_Loadable %}
{% assign modulename = basename | append: 'loadable' %}
{% include modulename, liquivelte: true, props: props_Loadable, sub_include: true, slot_contents: slot_content_Loadable, basename: '' %}
{% assign slot_content_Loadable = '' %}
{% assign props = '' %}
    
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_CardHeader %}classes-kvsp-no-border-prsp-valign-kvsp-bottom{% endcapture %}

{%- capture slot_content_def_CardHeader -%}
    
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_Link %}href-kvsp-/products/{{ product.handle }}{% endcapture %}

{%- capture slot_content_def_Link -%}
    <img src="{{ product.media[0] | image_url: width: 300 }}" liquivelte-value-cache="image_url§{{product.media[0] | escape -}}, {{width}}, {{300}}§{{product.media[0]| image_url: width: 300  }}" 
    width="300"
    style="aspect-ratio: {{ product.media[0].aspect_ratio }}" />
    {%- endcapture -%}
{% assign slot_content_Link = slot_content_Link | append: '-scs-' | append: 'framework7-liquivelte-link' | append: '-scvs-' | append: slot_content_def_Link %}
{% assign modulename = basename | append: 'framework7-liquivelte-link' %}
{% include modulename, liquivelte: true, props: props_Link, sub_include: true, slot_contents: slot_content_Link, basename: 'framework7-liquivelte-' %}
{% assign slot_content_Link = '' %}
{% assign props = '' %}
  {%- endcapture -%}
{% assign slot_content_CardHeader = slot_content_CardHeader | append: '-scs-' | append: 'framework7-liquivelte-card-header' | append: '-scvs-' | append: slot_content_def_CardHeader %}
{% assign modulename = basename | append: 'framework7-liquivelte-card-header' %}
{% include modulename, liquivelte: true, props: props_CardHeader, sub_include: true, slot_contents: slot_content_CardHeader, basename: 'framework7-liquivelte-' %}
{% assign slot_content_CardHeader = '' %}
{% assign props = '' %}
  
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_CardContent %}undefined-kvsp-1{% endcapture %}

{%- capture slot_content_def_CardContent -%}
  <div  class="text-theme svelte-3p59xp">
   {{ product.price | money }}
  </div> 
    <h3>
      {{ product.title }}
    </h3>
  {%- endcapture -%}
{% assign slot_content_CardContent = slot_content_CardContent | append: '-scs-' | append: 'framework7-liquivelte-card-content' | append: '-scvs-' | append: slot_content_def_CardContent %}
{% assign modulename = basename | append: 'framework7-liquivelte-card-content' %}
{% include modulename, liquivelte: true, props: props_CardContent, sub_include: true, slot_contents: slot_content_CardContent, basename: 'framework7-liquivelte-' %}
{% assign slot_content_CardContent = '' %}
{% assign props = '' %}
  
      
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_CardFooter %}undefined-kvsp-1{% endcapture %}

{%- capture slot_content_def_CardFooter -%}
        
{% comment %}
kvsp stands for "key value separator"
prsp stands for "props separator"
{% endcomment %}
{% comment %}
scs stands for "slot component separator"
scvs stands for "slot component value separator"
smns stands for "slot module name separator"
{% endcomment %}
{% capture props_Link %}undefined-kvsp-1{% endcapture %}

{%- capture slot_content_def_Link -%} Add to Wishlist {%- endcapture -%}
{% assign slot_content_Link = slot_content_Link | append: '-scs-' | append: 'framework7-liquivelte-link' | append: '-scvs-' | append: slot_content_def_Link %}
{% assign modulename = basename | append: 'framework7-liquivelte-link' %}
{% include modulename, liquivelte: true, props: props_Link, sub_include: true, slot_contents: slot_content_Link, basename: 'framework7-liquivelte-' %}
{% assign slot_content_Link = '' %}
{% assign props = '' %}
      {%- endcapture -%}
{% assign slot_content_CardFooter = slot_content_CardFooter | append: '-scs-' | append: 'framework7-liquivelte-card-footer' | append: '-scvs-' | append: slot_content_def_CardFooter %}
{% assign modulename = basename | append: 'framework7-liquivelte-card-footer' %}
{% include modulename, liquivelte: true, props: props_CardFooter, sub_include: true, slot_contents: slot_content_CardFooter, basename: 'framework7-liquivelte-' %}
{% assign slot_content_CardFooter = '' %}
{% assign props = '' %}
  {%- endcapture -%}
{% assign slot_content_Card = slot_content_Card | append: '-scs-' | append: 'framework7-liquivelte-card' | append: '-scvs-' | append: slot_content_def_Card %}
{% assign modulename = basename | append: 'framework7-liquivelte-card' %}
{% include modulename, liquivelte: true, props: props_Card, sub_include: true, slot_contents: slot_content_Card, basename: 'framework7-liquivelte-' %}
{% assign slot_content_Card = '' %}
{% assign props = '' %}



	
						
						
	<script type="text/noscript"  class="instance-data svelte-3p59xp">{
	
	
	
	}</script>
	
	<script  class="liquivelte-prop-script svelte-3p59xp">(() => {
	var propScript = Shopify.designMode && window.propScriptForDesignMode ? window.propScriptForDesignMode : document.currentScript;
	function parseProps(e){const s={};let t={bracketsOpened:0,get open(){return this.bracketsOpened>0},set open(e){!0===e?this.bracketsOpened=this.bracketsOpened+1:!1===e&&(this.bracketsOpened=this.bracketsOpened-1)}},a=` ${e} `.split(""),r=!1,c=!1,n=!1,p=!1,o="",b="";for(let e=0;e<a.length;e++){const k=a[e];switch(!0){case" "===k:p||t.open||(c=!1),!n||p||t.open||(n=!1);break;case"{"===k:t.open=!0,n||(c=!0);break;case"}"===k:t.open=!1;break;case'"'===k:p=!p;break;case"="===k:c&&(c=!1,n=!0,r=!0);break;case/[^\s]/.test(k):n||(c=!0)}!c||n||r?c||!n||r?c||n||(o&&(s[o]=b.replace(/^"/,"").replace(/"$/,"")),b="",o=""):b+=k:o+=k,r=!1}return Object.keys(s).map((e=>{if(/\{\s*\.\.\.(\w+)\s*\}/.test(e)){const[,t]=e.match(/\{\s*\.\.\.(\w+)\s*\}/);s.spread=t,delete s[e]}})),s}
	function JSONparse(n){try{return JSON.parse(n)}catch(t){try{const e=parseInt(t.message.match(/position\s+(\d+)/)[1],10),s=n.slice(0,e+1).split("\n"),i=s.length,l=n.split("\n"),r=s[s.length-1].length-1,c=l.slice(0,i).join("\n")+"\n"+new Array(r).fill(" ").join("")+"👆\n"+l.slice(i).join("\n");return console.log(c),{}}catch(n){throw t}}}
	function htmlDecode(input) {
	var doc = new DOMParser().parseFromString(input, "text/html");
	return doc.documentElement.textContent;
	}
	function componentWrapper(el) {
	if(el.classList.contains('liquivelte-component')) {
	return el;
	} else {
	return componentWrapper(el.parentElement);
	}
	}
	var wrapper = componentWrapper(propScript.parentElement);
	// console.log('wrapper', wrapper);
	// console.log('parsing props for svelte component');
	try{
	wrapper.svelteProps = { ...(wrapper.svelteProps || {}), ...(JSONparse(propScript.previousElementSibling.textContent)) };
	} catch (e) {
	const err = 'There was an error';
	console.error('there was an error parsing props json', e);
	wrapper.svelteProps = { ...wrapper.svelteProps, error: (wrapper.svelteProps.error || '') + err};
	}
	
	

	// liquid expression cache
	[...wrapper.querySelectorAll('[liquivelte-value-cache]')].forEach(el => {
	let [filter, args, value] = el.getAttribute('liquivelte-value-cache').split('§');
	args = args.split(', ');
	args[0] = args[0].replace(/^"|\\|"$/g, '');
	wrapper.liquid_expression_cache = wrapper.liquid_expression_cache || {};
	wrapper.liquid_expression_cache[filter] = wrapper.liquid_expression_cache[filter] || new Map;
	wrapper.liquid_expression_cache[filter].set(`${args.join(',')}`, value);
	});

	if(propScript){
	propScript.remove();
	}
	if(propScript.previousElementSibling) {
	propScript.previousElementSibling.remove();
	}
	})();</script>
	{%- liquid
			
			
			assign product = null
			-%}
	{%- liquid 
			assign slot_default_product-card = null
			
			-%}
	{%- unless sub_include -%} 
	</div>
	{%- endunless -%}
	