import { SvelteComponent, init, safe_not_equal, element, claim_element, children, detach, attr, insert_hydration, transition_in, check_outros, transition_out, destroy_each, getContext, onMount, create_component, claim_component, mount_component, destroy_component, group_outros } from './liquivelte-svelte-hs532e1aa9.liquivelte.js';
import { f7ready } from './framework7-liquivelte-hsa0091f48.liquivelte.js';
import './framework7-liquivelte-get-params-hs6b273664.liquivelte.js';
import { Product_card } from './product-carousel-hs743bee3c.liquivelte.js';
import './framework7-liquivelte-popup-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-view-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-router-context-provider-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-login-screen-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-sheet-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-popover-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-panel-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-utils-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-params-list-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-block-title-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-block-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-swiper-slide-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-swiper-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-mount-swiper-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-get-changed-params-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-update-swiper-hs8daa1a0c.liquivelte.js';
import './liquivelte-liquid-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-card-content-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-card-footer-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-card-header-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-card-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-link-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-use-icon-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-icon-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-badge-hs8daa1a0c.liquivelte.js';
import './store.js-hs6c336c77.liquivelte.js';
import './framework7-liquivelte-button-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-preloader-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-stepper-hs8daa1a0c.liquivelte.js';
import './header-hs39c6dc7d.liquivelte.js';
import './framework7-liquivelte-accordion-content-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-list-item-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-list-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-page-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-page-content-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-appbar-hs8daa1a0c.liquivelte.js';

/* Usersmalipetek/Documents/Documents/Projects/LIQUVELTE/LIQUIVELTE TEST/src/sections/collection-product-grid.liquivelte generated by Svelte v3.50.0 */

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[4] = list[i];
	child_ctx[7] = i;

	const constants_0 = {
		first: /*index*/ child_ctx[7] === 0,
		index: /*index*/ child_ctx[7] + 1,
		index0: /*index*/ child_ctx[7],
		last: /*index*/ child_ctx[7] === /*collection*/ child_ctx[0].products.length - 1,
		rindex: /*collection*/ child_ctx[0].products.length - /*index*/ child_ctx[7],
		rindex0: /*collection*/ child_ctx[0].products.length - /*index*/ child_ctx[7] - 1,
		length: /*collection*/ child_ctx[0].products.length
	};

	child_ctx[5] = constants_0;
	return child_ctx;
}

// (30:2) {#each  collection.products as product, index   }
function create_each_block(ctx) {
	let productcard;
	let current;
	productcard = new Product_card({ props: { product: /*product*/ ctx[4] } });

	return {
		c() {
			create_component(productcard.$$.fragment);
		},
		l(nodes) {
			claim_component(productcard.$$.fragment, nodes);
		},
		m(target, anchor) {
			mount_component(productcard, target, anchor);
			current = true;
		},
		p(ctx, dirty) {
			const productcard_changes = {};
			if (dirty & /*collection*/ 1) productcard_changes.product = /*product*/ ctx[4];
			productcard.$set(productcard_changes);
		},
		i(local) {
			if (current) return;
			transition_in(productcard.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(productcard.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			destroy_component(productcard, detaching);
		}
	};
}

function create_fragment(ctx) {
	let div;
	let current;
	let each_value = /*collection*/ ctx[0].products;
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const out = i => transition_out(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	return {
		c() {
			div = element("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div_nodes);
			}

			div_nodes.forEach(detach);
			this.h();
		},
		h() {
			attr(div, "class", "grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 xl:grid-cols-8");
		},
		m(target, anchor) {
			insert_hydration(target, div, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div, null);
			}

			current = true;
		},
		p(ctx, [dirty]) {
			if (dirty & /*collection*/ 1) {
				each_value = /*collection*/ ctx[0].products;
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						transition_in(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						transition_in(each_blocks[i], 1);
						each_blocks[i].m(div, null);
					}
				}

				group_outros();

				for (i = each_value.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				check_outros();
			}
		},
		i(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			current = true;
		},
		o(local) {
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			current = false;
		},
		d(detaching) {
			if (detaching) detach(div);
			destroy_each(each_blocks, detaching);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let themeImports = getContext('svelteProps') || {};
	getContext('lec') || {};
	let collection = themeImports['collection'];
	collection.products = themeImports['collectionƒƒproducts'];

	onMount(() => {
		f7ready(f7 => {
			console.log('f7 ready', f7);
			window.f7 = f7;
		});
	});

	return [collection];
}

class Collection_product_grid extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export { Collection_product_grid as default };
