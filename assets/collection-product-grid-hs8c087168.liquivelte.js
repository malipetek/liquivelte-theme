import { SvelteComponent, init, safe_not_equal, element, claim_element, children, detach, attr, insert_hydration, update_keyed_each, check_outros, transition_in, transition_out, getContext, onMount, afterUpdate, assign, exclude_internal_props, empty, create_component, claim_component, mount_component, destroy_component, group_outros, outro_and_destroy_block } from './liquivelte-svelte-hse72de747.liquivelte.js';
import { f7ready } from './framework7-liquivelte-hs390c8ed0.liquivelte.js';
import './framework7-liquivelte-get-params-hs062c4e9e.liquivelte.js';
import { Product_card } from './product-carousel-hse8edf5c1.liquivelte.js';
import './liquivelte-liquid-hs18c7db27.liquivelte.js';
import './framework7-liquivelte-popup-hsd8245019.liquivelte.js';
import './framework7-liquivelte-view-hs49fb1780.liquivelte.js';
import './framework7-liquivelte-router-context-provider-hsbbbe962a.liquivelte.js';
import './framework7-liquivelte-login-screen-hs90018f17.liquivelte.js';
import './framework7-liquivelte-sheet-hs8e1dcad1.liquivelte.js';
import './framework7-liquivelte-popover-hs0e7569a4.liquivelte.js';
import './framework7-liquivelte-panel-hs20b1bd51.liquivelte.js';
import './framework7-liquivelte-utils-hs98d1f35e.liquivelte.js';
import './framework7-liquivelte-params-list-hsa4b1a348.liquivelte.js';
import './framework7-liquivelte-block-title-hsddbcca44.liquivelte.js';
import './framework7-liquivelte-block-hs27fbf1bd.liquivelte.js';
import './framework7-liquivelte-swiper-slide-hs3a060140.liquivelte.js';
import './framework7-liquivelte-swiper-hscfd9243b.liquivelte.js';
import './framework7-liquivelte-mount-swiper-hs2baa0651.liquivelte.js';
import './framework7-liquivelte-get-changed-params-hs0d560e93.liquivelte.js';
import './framework7-liquivelte-update-swiper-hsd551b9c5.liquivelte.js';
import './framework7-liquivelte-card-content-hs1d5a281f.liquivelte.js';
import './framework7-liquivelte-card-footer-hsdfc63116.liquivelte.js';
import './framework7-liquivelte-card-header-hs39ef0385.liquivelte.js';
import './framework7-liquivelte-card-hsb49198cb.liquivelte.js';
import './framework7-liquivelte-link-hsa52eb758.liquivelte.js';
import './framework7-liquivelte-use-icon-hs1c185042.liquivelte.js';
import './framework7-liquivelte-icon-hsf79d0b21.liquivelte.js';
import './framework7-liquivelte-badge-hse50adf9e.liquivelte.js';
import './store.js-hs5b2b91d0.liquivelte.js';
import './framework7-liquivelte-button-hs4d01f9fb.liquivelte.js';
import './framework7-liquivelte-preloader-hsee2ec6f6.liquivelte.js';
import './framework7-liquivelte-stepper-hs0ef28d1a.liquivelte.js';
import './header-hs3d0caedd.liquivelte.js';
import './framework7-liquivelte-list-item-hs36cbc300.liquivelte.js';
import './framework7-liquivelte-list-hs44e5c94b.liquivelte.js';
import './framework7-liquivelte-accordion-content-hs0c825499.liquivelte.js';
import './framework7-liquivelte-col-hs860e8dc7.liquivelte.js';
import './framework7-liquivelte-row-hs93cf9519.liquivelte.js';
import './framework7-liquivelte-appbar-hs98b8db68.liquivelte.js';
import './framework7-liquivelte-page-hsb414881c.liquivelte.js';
import './framework7-liquivelte-page-content-hs8bfb2656.liquivelte.js';

/* Usersmalipetek/Documents/Documents/Projects/LIQUVELTE/LIQUIVELTE TEST/src/sections/collection-product-grid.liquivelte generated by Svelte v3.50.0 */

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[8] = list[i];
	child_ctx[11] = i;

	const constants_0 = {
		first: /*index*/ child_ctx[11] === 0,
		index: /*index*/ child_ctx[11] + 1,
		index0: /*index*/ child_ctx[11],
		last: /*index*/ child_ctx[11] === /*collection*/ child_ctx[0].products.length - 1,
		rindex: /*collection*/ child_ctx[0].products.length - /*index*/ child_ctx[11],
		rindex0: /*collection*/ child_ctx[0].products.length - /*index*/ child_ctx[11] - 1,
		length: /*collection*/ child_ctx[0].products.length
	};

	child_ctx[9] = constants_0;
	return child_ctx;
}

// (52:2) {#each  collection.products as product, index  (product.id) }
function create_each_block(key_1, ctx) {
	let first;
	let productcard;
	let current;

	productcard = new Product_card({
			props: {
				initialRender,
				product: /*product*/ ctx[8]
			}
		});

	return {
		key: key_1,
		first: null,
		c() {
			first = empty();
			create_component(productcard.$$.fragment);
			this.h();
		},
		l(nodes) {
			first = empty();
			claim_component(productcard.$$.fragment, nodes);
			this.h();
		},
		h() {
			this.first = first;
		},
		m(target, anchor) {
			insert_hydration(target, first, anchor);
			mount_component(productcard, target, anchor);
			current = true;
		},
		p(new_ctx, dirty) {
			ctx = new_ctx;
			const productcard_changes = {};
			if (dirty & /*initialRender*/ 0) productcard_changes.initialRender = initialRender;
			if (dirty & /*collection*/ 1) productcard_changes.product = /*product*/ ctx[8];
			productcard.$set(productcard_changes);
		},
		i(local) {
			if (current) return;
			transition_in(productcard.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(productcard.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(first);
			destroy_component(productcard, detaching);
		}
	};
}

function create_fragment(ctx) {
	let div;
	let each_blocks = [];
	let each_1_lookup = new Map();
	let current;
	let each_value = /*collection*/ ctx[0].products;
	const get_key = ctx => /*product*/ ctx[8].id;

	for (let i = 0; i < each_value.length; i += 1) {
		let child_ctx = get_each_context(ctx, each_value, i);
		let key = get_key(child_ctx);
		each_1_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));
	}

	return {
		c() {
			div = element("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div_nodes);
			}

			div_nodes.forEach(detach);
			this.h();
		},
		h() {
			attr(div, "class", "grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5");
		},
		m(target, anchor) {
			insert_hydration(target, div, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div, null);
			}

			current = true;
		},
		p(ctx, [dirty]) {
			if (dirty & /*initialRender, collection*/ 1) {
				each_value = /*collection*/ ctx[0].products;
				group_outros();
				each_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx, each_value, each_1_lookup, div, outro_and_destroy_block, create_each_block, null, get_each_context);
				check_outros();
			}
		},
		i(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			current = true;
		},
		o(local) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			current = false;
		},
		d(detaching) {
			if (detaching) detach(div);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].d();
			}
		}
	};
}

let initialRender = true;

function fc(e, t, r) {
	const n = e.find(e => e === t);

	return n || e.reduce((e, n) => {
		let o = Math.abs(e - t), i = Math.abs(n - t);

		return "higher" === r
		? n > t && i <= o ? n : e
		: "lower" === r ? n < t && i <= o ? n : e : void 0;
	});
}

function instance($$self, $$props, $$invalidate) {
	let { importsSeek = 'lower' } = $$props;
	let themeImports = getContext('svelteProps') || {};
	getContext('lec') || {};
	(() => window.cicR = $$props.resetCicR ? 1 : window.cicR + 1)();
	const cic = window.cicR;
	let { collection = themeImports['collection'].find(e => e.component_index == fc(themeImports['collection'].map(e => e.component_index), cic, importsSeek)).value } = $$props;
	let { collectionƒƒproducts } = $$props;

	try {
		collection = collection || {};
	} catch(e) {
		
	} /*whatever*/

	collection.products = themeImports['collectionƒƒproducts'].find(e => e.component_index == fc(themeImports['collectionƒƒproducts'].map(e => e.component_index), cic, importsSeek)).value;

	onMount(() => {
		f7ready(f7 => {
			window.f7 = f7;

			document.addEventListener('filters-changed', async e => {
				console.log('filters event received', e);
				const { urlToFetch } = e.detail || {};

				if (urlToFetch) {
					urlToFetch.searchParams.set('view', 'data');
					const response = await fetch(urlToFetch);
					const data = await response.json();
					$$invalidate(0, collection.products = data.products, collection);
				}
			});
		});
	});

	afterUpdate(() => {
		initialRender = false;
	});

	$$self.$$set = $$new_props => {
		$$invalidate(7, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
		if ('importsSeek' in $$new_props) $$invalidate(1, importsSeek = $$new_props.importsSeek);
		if ('collection' in $$new_props) $$invalidate(0, collection = $$new_props.collection);
		if ('collectionƒƒproducts' in $$new_props) $$invalidate(2, collectionƒƒproducts = $$new_props.collectionƒƒproducts);
	};

	$$props = exclude_internal_props($$props);
	return [collection, importsSeek, collectionƒƒproducts];
}

class Collection_product_grid extends SvelteComponent {
	constructor(options) {
		super();

		init(this, options, instance, create_fragment, safe_not_equal, {
			importsSeek: 1,
			collection: 0,
			collectionƒƒproducts: 2
		});
	}
}

export { Collection_product_grid as default };
