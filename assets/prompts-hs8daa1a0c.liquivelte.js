import { SvelteComponent, init, safe_not_equal, element, claim_element, children, detach, attr, insert_hydration, noop, getContext, onMount } from './liquivelte-svelte-hs532e1aa9.liquivelte.js';
import { f7ready } from './framework7-liquivelte-hsa0091f48.liquivelte.js';
import './framework7-liquivelte-get-params-hs6b273664.liquivelte.js';
import './framework7-liquivelte-popup-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-view-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-router-context-provider-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-login-screen-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-sheet-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-popover-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-panel-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-utils-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-params-list-hs8daa1a0c.liquivelte.js';

/* Usersmalipetek/Documents/Documents/Projects/LIQUVELTE/LIQUIVELTE TEST/src/sections/prompts/index.liquivelte generated by Svelte v3.50.0 */

function create_fragment(ctx) {
	let div;

	return {
		c() {
			div = element("div");
			this.h();
		},
		l(nodes) {
			div = claim_element(nodes, "DIV", { prompts: true });
			var div_nodes = children(div);
			div_nodes.forEach(detach);
			this.h();
		},
		h() {
			attr(div, "prompts", "");
		},
		m(target, anchor) {
			insert_hydration(target, div, anchor);
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(div);
		}
	};
}

function instance($$self) {
	getContext('svelteProps') || {};
	getContext('lec') || {};

	onMount(() => {
		f7ready(() => {
			console.log('f7 ready');
		}); // notification = f7.notification.create({
		//   title: 'Newsletter',
		//   titleRightText: 'now',
		//   subtitle: 'Subscribe to newsletter to get 20% off',
	}); //   text: 'Tap on this to subscribe.',
	//   closeTimeout: 3000,
	// }); 
	// setTimeout(() => {

	return [];
}

class Prompts extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export { Prompts as default };
