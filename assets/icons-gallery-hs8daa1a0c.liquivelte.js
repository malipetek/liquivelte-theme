import { SvelteComponent, init, safe_not_equal, element, claim_element, children, detach, attr, insert_hydration, transition_in, check_outros, transition_out, destroy_each, getContext, text, space, create_component, claim_text, claim_space, claim_component, append_hydration, mount_component, noop, destroy_component, group_outros } from './liquivelte-svelte-hs532e1aa9.liquivelte.js';
import { Icon } from './header-hs39c6dc7d.liquivelte.js';
import './store.js-hs6c336c77.liquivelte.js';
import './framework7-liquivelte-hsa0091f48.liquivelte.js';
import './framework7-liquivelte-popup-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-view-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-router-context-provider-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-login-screen-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-sheet-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-popover-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-panel-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-get-params-hs6b273664.liquivelte.js';
import './framework7-liquivelte-utils-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-params-list-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-accordion-content-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-list-item-hs8daa1a0c.liquivelte.js';
import './liquivelte-liquid-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-badge-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-list-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-block-title-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-block-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-page-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-page-content-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-preloader-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-stepper-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-appbar-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-button-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-use-icon-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-icon-hs8daa1a0c.liquivelte.js';
import './framework7-liquivelte-link-hs8daa1a0c.liquivelte.js';

/* Usersmalipetek/Documents/Documents/Projects/LIQUVELTE/LIQUIVELTE TEST/src/sections/icons-gallery.liquivelte generated by Svelte v3.50.0 */

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[4] = list[i];
	child_ctx[7] = i;

	const constants_0 = {
		first: /*index*/ child_ctx[7] === 0,
		index: /*index*/ child_ctx[7] + 1,
		index0: /*index*/ child_ctx[7],
		last: /*index*/ child_ctx[7] === /*icons*/ child_ctx[0].length - 1,
		rindex: /*icons*/ child_ctx[0].length - /*index*/ child_ctx[7],
		rindex0: /*icons*/ child_ctx[0].length - /*index*/ child_ctx[7] - 1,
		length: /*icons*/ child_ctx[0].length
	};

	child_ctx[5] = constants_0;
	return child_ctx;
}

// (25:2) {#each  icons as icon, index   }
function create_each_block(ctx) {
	let div1;
	let h3;
	let t0_value = /*icon*/ ctx[4] + "";
	let t0;
	let t1;
	let div0;
	let icon;
	let t2;
	let current;
	icon = new Icon({ props: { name: /*icon*/ ctx[4] } });

	return {
		c() {
			div1 = element("div");
			h3 = element("h3");
			t0 = text(t0_value);
			t1 = space();
			div0 = element("div");
			create_component(icon.$$.fragment);
			t2 = space();
			this.h();
		},
		l(nodes) {
			div1 = claim_element(nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			h3 = claim_element(div1_nodes, "H3", {});
			var h3_nodes = children(h3);
			t0 = claim_text(h3_nodes, t0_value);
			h3_nodes.forEach(detach);
			t1 = claim_space(div1_nodes);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			claim_component(icon.$$.fragment, div0_nodes);
			div0_nodes.forEach(detach);
			t2 = claim_space(div1_nodes);
			div1_nodes.forEach(detach);
			this.h();
		},
		h() {
			attr(div0, "class", "w-8");
			attr(div1, "class", "svelte-87m1e3");
		},
		m(target, anchor) {
			insert_hydration(target, div1, anchor);
			append_hydration(div1, h3);
			append_hydration(h3, t0);
			append_hydration(div1, t1);
			append_hydration(div1, div0);
			mount_component(icon, div0, null);
			append_hydration(div1, t2);
			current = true;
		},
		p: noop,
		i(local) {
			if (current) return;
			transition_in(icon.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(icon.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(div1);
			destroy_component(icon);
		}
	};
}

function create_fragment(ctx) {
	let div;
	let current;
	let each_value = /*icons*/ ctx[0];
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const out = i => transition_out(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	return {
		c() {
			div = element("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div_nodes);
			}

			div_nodes.forEach(detach);
			this.h();
		},
		h() {
			attr(div, "class", "gallery svelte-87m1e3");
		},
		m(target, anchor) {
			insert_hydration(target, div, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div, null);
			}

			current = true;
		},
		p(ctx, [dirty]) {
			if (dirty & /*icons*/ 1) {
				each_value = /*icons*/ ctx[0];
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						transition_in(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						transition_in(each_blocks[i], 1);
						each_blocks[i].m(div, null);
					}
				}

				group_outros();

				for (i = each_value.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				check_outros();
			}
		},
		i(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			current = true;
		},
		o(local) {
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			current = false;
		},
		d(detaching) {
			if (detaching) detach(div);
			destroy_each(each_blocks, detaching);
		}
	};
}

function instance($$self) {
	let themeImports = getContext('svelteProps') || {};
	getContext('lec') || {};
	let icons = themeImports['icons'];
	return [icons];
}

class Icons_gallery extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export { Icons_gallery as default };
